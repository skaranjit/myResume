{"ast":null,"code":"import _classCallCheck from\"/Users/sumankaranjit/myProfile/resume/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/sumankaranjit/myProfile/resume/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/sumankaranjit/myProfile/resume/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/sumankaranjit/myProfile/resume/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/sumankaranjit/myProfile/resume/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{useState,useEffect,Component}from\"react\";import axios from\"axios\";import{motion,motionValue,useTransform,useViewportScroll}from\"framer-motion\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ContactForm=/*#__PURE__*/function(_Component){_inherits(ContactForm,_Component);var _super=_createSuper(ContactForm);function ContactForm(props){var _this;_classCallCheck(this,ContactForm);_this=_super.call(this,props);_this.state={input:{},errors:{},setServerStatus:{}};_this.handleChange=_this.handleChange.bind(_assertThisInitialized(_this));_this.handleSubmit=_this.handleSubmit.bind(_assertThisInitialized(_this));return _this;}_createClass(ContactForm,[{key:\"handleChange\",value:function handleChange(event){var input=this.state.input;input[event.target.name]=event.target.value;this.setState({input:input});}},{key:\"handleServerResponse\",value:function handleServerResponse(ok,msg){var serverStatus={};serverStatus[\"submitting\"]=false;serverStatus[\"status\"]={ok:ok,msg:msg};this.setState({setServerStatus:serverStatus});if(ok){var inputs={};inputs[\"email\"]=\"\";inputs[\"message\"]=\"\";inputs[\"name\"]=\"\";this.setState({input:inputs});}}},{key:\"handleSubmit\",value:function handleSubmit(event){var _this2=this;event.preventDefault();if(this.validate()){var serverStatus={};serverStatus[\"submitting\"]=true;this.setState({setServerStatus:serverStatus});axios({method:\"POST\",url:\"https://formspree.io/f/xwkaqqeg\",data:this.state.input}).then(function(r){_this2.handleServerResponse(true,\"Thank You! You message delivered.\");}).catch(function(r){_this2.handleServerResponse(false,r.response.data.error);});}}},{key:\"validate\",value:function validate(){var input=this.state.input;var errors={};var isValid=true;if(isValid){errors[\"name\"]=null;errors[\"email\"]=null;errors[\"message\"]=null;}if(!input[\"name\"]){isValid=false;errors[\"name\"]=\"Please verify your name.\";}if(!input[\"email\"]){isValid=false;errors[\"email\"]=\"Please verify your email Address.\";}if(typeof input[\"email\"]!==\"undefined\"){var pattern=new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);if(!pattern.test(input[\"email\"])){isValid=false;errors[\"email\"]=\"Please enter valid email address.\";}}if(!input[\"message\"]){isValid=false;errors[\"message\"]=\"Please enter your message.\";}this.setState({errors:errors});return isValid;}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(\"div\",{className:\"container\",style:{display:\"flex\",top:90,flex:1,flexDirection:\"column-reverse\",justifyContent:\"center\",alignContent:\"center\",height:\"100vh\"},children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:this.handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{class:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{for:\"name\",children:\"Your Name:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"name\",value:this.state.input.name,onChange:this.handleChange,class:\"form-control\",placeholder:\"Enter name\",id:\"name\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-danger\",children:this.state.errors.name})]}),/*#__PURE__*/_jsxs(\"div\",{class:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{for:\"email\",children:\"Your Email Address:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"email\",value:this.state.input.email,onChange:this.handleChange,class:\"form-control\",placeholder:\"Enter email\",id:\"email\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-danger\",children:this.state.errors.email})]}),/*#__PURE__*/_jsxs(\"div\",{class:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{for:\"message\",children:\"Message:\"}),/*#__PURE__*/_jsx(\"textarea\",{name:\"message\",value:this.state.input.message,onChange:this.handleChange,placeholder:\"Your message....\",class:\"form-control\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-danger\",children:this.state.errors.message})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",value:\"Submit\",class:\"btn btn-success\",disabled:this.state.setServerStatus.submitting,children:\"Submit\"}),this.state.setServerStatus.status&&/*#__PURE__*/_jsx(\"p\",{className:!this.state.setServerStatus.status.ok?\"errorMsg\":\"\",children:alert(this.state.setServerStatus.status.msg)})]})});}}]);return ContactForm;}(Component);export default ContactForm;// export default () => {\n//   const [status, setStatus] = useState({\n//     submitted: false,\n//     submitting: false,\n//     info: { error: false, msg: null },\n//   });\n//   const [inputs, setInputs] = useState({\n//     email: \"\",\n//     message: \"\",\n//   });\n//   const handleServerResponse = (ok, msg) => {\n//     if (ok) {\n//       setStatus({\n//         submitted: true,\n//         submitting: false,\n//         info: { error: false, msg: msg },\n//       });\n//       setInputs({\n//         email: \"\",\n//         message: \"\",\n//       });\n//     } else {\n//       setStatus({\n//         info: { error: true, msg: msg },\n//       });\n//     }\n//   };\n//   const handleOnChange = (e) => {\n//     e.persist();\n//     setInputs((prev) => ({\n//       ...prev,\n//       [e.target.id]: e.target.value,\n//     }));\n//     setStatus({\n//       submitted: false,\n//       submitting: false,\n//       info: { error: false, msg: null },\n//     });\n//   };\n//   const handleOnSubmit = (e) => {\n//     e.preventDefault();\n//     setStatus((prevStatus) => ({ ...prevStatus, submitting: true }));\n//     axios({\n//       method: \"POST\",\n//       url: \"https://formspree.io/f/xwkaqqeg\",\n//       data: inputs,\n//     })\n//       .then((response) => {\n//         handleServerResponse(\n//           true,\n//           \"Thank you, your message has been submitted.\"\n//         );\n//       })\n//       .catch((error) => {\n//         handleServerResponse(false, error.response.data.error);\n//       });\n//   };\n//   return (\n//     <main className=\"container \" style={{ marginTop: \"10vh\" }}>\n//       <h1>Connect With Me </h1>\n//       <p style={{ fontFamily: \"cursive\", fontSize: \"20px\" }}>\n//         {\" \"}\n//         Send me a message and I will get back to you as soon as possible.\n//       </p>\n//       <hr />\n//       <form onSubmit={handleOnSubmit}>\n//         <motion.div\n//           animate={{ scale: [0, 0.4, 0.8, 1] }}\n//           transition={{ times: [0, 0.1, 0.1, 1] }}\n//           className=\"form-group\"\n//         >\n//           <div class=\"col-sm-offset-2 col-sm-10\">\n//             <label\n//               for=\"name\"\n//               style={{\n//                 fontFamily: \"fantasy\",\n//               }}\n//             >\n//               Name\n//             </label>\n//             <input\n//               className=\"form-control\"\n//               id=\"name\"\n//               type=\"text\"\n//               name=\"_name\"\n//               onChange={handleOnChange}\n//               required\n//               value={inputs.name}\n//               width=\"20%\"\n//             />\n//           </div>\n//         </motion.div>\n//         <motion.div\n//           animate={{ scale: [0, 0.4, 0.8, 1] }}\n//           transition={{ times: [0, 0.1, 0.1, 1] }}\n//           class=\"form-group\"\n//         >\n//           <div class=\"col-sm-offset-2 col-sm-10\">\n//             <label\n//               style={{\n//                 fontFamily: \"fantasy\",\n//               }}\n//               htmlFor=\"email\"\n//             >\n//               Email\n//             </label>\n//             <input\n//               className=\"form-control\"\n//               id=\"email\"\n//               type=\"email\"\n//               name=\"_replyto\"\n//               onChange={handleOnChange}\n//               required\n//               value={inputs.email}\n//             />\n//           </div>\n//         </motion.div>\n//         <motion.div\n//           animate={{ scale: [0, 0.4, 0.8, 1] }}\n//           transition={{ times: [0, 0.1, 0.1, 1] }}\n//           class=\"form-group\"\n//         >\n//           <div class=\"col-sm-offset-2 col-sm-10\">\n//             <label\n//               style={{\n//                 fontFamily: \"fantasy\",\n//               }}\n//               htmlFor=\"message\"\n//             >\n//               Message\n//             </label>\n//             <textarea\n//               className=\"form-control\"\n//               id=\"message\"\n//               name=\"message\"\n//               onChange={handleOnChange}\n//               required\n//               value={inputs.message}\n//             />\n//           </div>\n//         </motion.div>\n//         <motion.div\n//           animate={{ scale: [0, 0.4, 0.8, 1] }}\n//           transition={{ times: [0, 0.1, 0.1, 1] }}\n//           class=\"form-group\"\n//         >\n//           <div\n//             class=\"col-sm-offset-2 col-sm-10\"\n//             style={{ alignContent: \"end\" }}\n//           >\n//             <motion.button\n//               whileHover={{ scale: 1.2 }}\n//               whileFocus={{ scale: 2 }}\n//               type=\"submit\"\n//               className=\"btn btn-secondary\"\n//               disabled={status.submitting}\n//               style={{\n//                 fontFamily: \"fantasy\",\n//                 marginTop: \"10px\",\n//               }}\n//             >\n//               {!status.submitting\n//                 ? !status.submitted\n//                   ? \"Submit\"\n//                   : \"Submitted\"\n//                 : \"Submitting...\"}\n//             </motion.button>\n//           </div>\n//         </motion.div>\n//       </form>\n//       {status.info.error && (\n//         <motion.div animate={{ scale: [0, 5] }} className=\"error\">\n//           Error: {status.info.msg}\n//         </motion.div>\n//       )}\n//       {!status.info.error && status.info.msg && <p>{status.info.msg}</p>}\n//     </main>\n//   );\n// };","map":{"version":3,"sources":["/Users/sumankaranjit/myProfile/resume/src/pages/Contact.js"],"names":["React","useState","useEffect","Component","axios","motion","motionValue","useTransform","useViewportScroll","ContactForm","props","state","input","errors","setServerStatus","handleChange","bind","handleSubmit","event","target","name","value","setState","ok","msg","serverStatus","inputs","preventDefault","validate","method","url","data","then","r","handleServerResponse","catch","response","error","isValid","pattern","RegExp","test","display","top","flex","flexDirection","justifyContent","alignContent","height","email","message","submitting","status","alert"],"mappings":"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":["import React, { useState, useEffect, Component } from \"react\";\nimport axios from \"axios\";\nimport {\n  motion,\n  motionValue,\n  useTransform,\n  useViewportScroll,\n} from \"framer-motion\";\n\nclass ContactForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: {},\n      errors: {},\n      setServerStatus: {},\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(event) {\n    let input = this.state.input;\n    input[event.target.name] = event.target.value;\n\n    this.setState({\n      input,\n    });\n  }\n  handleServerResponse(ok, msg) {\n    let serverStatus = {};\n    serverStatus[\"submitting\"] = false;\n    serverStatus[\"status\"] = { ok, msg };\n\n    this.setState({\n      setServerStatus: serverStatus,\n    });\n    if (ok) {\n      let inputs = {};\n      inputs[\"email\"] = \"\";\n      inputs[\"message\"] = \"\";\n      inputs[\"name\"] = \"\";\n      this.setState({\n        input: inputs,\n      });\n    }\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n\n    if (this.validate()) {\n      let serverStatus = {};\n      serverStatus[\"submitting\"] = true;\n      this.setState({\n        setServerStatus: serverStatus,\n      });\n      axios({\n        method: \"POST\",\n        url: \"https://formspree.io/f/xwkaqqeg\",\n        data: this.state.input,\n      })\n        .then((r) => {\n          this.handleServerResponse(true, \"Thank You! You message delivered.\");\n        })\n        .catch((r) => {\n          this.handleServerResponse(false, r.response.data.error);\n        });\n    }\n  }\n  validate() {\n    let input = this.state.input;\n    let errors = {};\n    let isValid = true;\n    if (isValid) {\n      errors[\"name\"] = null;\n      errors[\"email\"] = null;\n      errors[\"message\"] = null;\n    }\n    if (!input[\"name\"]) {\n      isValid = false;\n      errors[\"name\"] = \"Please verify your name.\";\n    }\n\n    if (!input[\"email\"]) {\n      isValid = false;\n      errors[\"email\"] = \"Please verify your email Address.\";\n    }\n\n    if (typeof input[\"email\"] !== \"undefined\") {\n      var pattern = new RegExp(\n        /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i\n      );\n      if (!pattern.test(input[\"email\"])) {\n        isValid = false;\n        errors[\"email\"] = \"Please enter valid email address.\";\n      }\n    }\n\n    if (!input[\"message\"]) {\n      isValid = false;\n      errors[\"message\"] = \"Please enter your message.\";\n    }\n\n    this.setState({\n      errors: errors,\n    });\n\n    return isValid;\n  }\n\n  render() {\n    return (\n      <div\n        className=\"container\"\n        style={{\n          display: \"flex\",\n          top: 90,\n          flex: 1,\n          flexDirection: \"column-reverse\",\n          justifyContent: \"center\",\n          alignContent: \"center\",\n          height: \"100vh\",\n        }}\n      >\n        <form onSubmit={this.handleSubmit}>\n          <div class=\"form-group\">\n            <label for=\"name\">Your Name:</label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={this.state.input.name}\n              onChange={this.handleChange}\n              class=\"form-control\"\n              placeholder=\"Enter name\"\n              id=\"name\"\n            />\n\n            <div className=\"text-danger\">{this.state.errors.name}</div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"email\">Your Email Address:</label>\n            <input\n              type=\"text\"\n              name=\"email\"\n              value={this.state.input.email}\n              onChange={this.handleChange}\n              class=\"form-control\"\n              placeholder=\"Enter email\"\n              id=\"email\"\n            />\n\n            <div className=\"text-danger\">{this.state.errors.email}</div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"message\">Message:</label>\n            <textarea\n              name=\"message\"\n              value={this.state.input.message}\n              onChange={this.handleChange}\n              placeholder=\"Your message....\"\n              class=\"form-control\"\n            />\n\n            <div className=\"text-danger\">{this.state.errors.message}</div>\n          </div>\n\n          <button\n            type=\"submit\"\n            value=\"Submit\"\n            class=\"btn btn-success\"\n            disabled={this.state.setServerStatus.submitting}\n          >\n            Submit\n          </button>\n          {this.state.setServerStatus.status && (\n            <p\n              className={\n                !this.state.setServerStatus.status.ok ? \"errorMsg\" : \"\"\n              }\n            >\n              {alert(this.state.setServerStatus.status.msg)}\n            </p>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\nexport default ContactForm;\n// export default () => {\n//   const [status, setStatus] = useState({\n//     submitted: false,\n//     submitting: false,\n//     info: { error: false, msg: null },\n//   });\n//   const [inputs, setInputs] = useState({\n//     email: \"\",\n//     message: \"\",\n//   });\n//   const handleServerResponse = (ok, msg) => {\n//     if (ok) {\n//       setStatus({\n//         submitted: true,\n//         submitting: false,\n//         info: { error: false, msg: msg },\n//       });\n//       setInputs({\n//         email: \"\",\n//         message: \"\",\n//       });\n//     } else {\n//       setStatus({\n//         info: { error: true, msg: msg },\n//       });\n//     }\n//   };\n//   const handleOnChange = (e) => {\n//     e.persist();\n//     setInputs((prev) => ({\n//       ...prev,\n//       [e.target.id]: e.target.value,\n//     }));\n//     setStatus({\n//       submitted: false,\n//       submitting: false,\n//       info: { error: false, msg: null },\n//     });\n//   };\n//   const handleOnSubmit = (e) => {\n//     e.preventDefault();\n//     setStatus((prevStatus) => ({ ...prevStatus, submitting: true }));\n//     axios({\n//       method: \"POST\",\n//       url: \"https://formspree.io/f/xwkaqqeg\",\n//       data: inputs,\n//     })\n//       .then((response) => {\n//         handleServerResponse(\n//           true,\n//           \"Thank you, your message has been submitted.\"\n//         );\n//       })\n//       .catch((error) => {\n//         handleServerResponse(false, error.response.data.error);\n//       });\n//   };\n//   return (\n//     <main className=\"container \" style={{ marginTop: \"10vh\" }}>\n//       <h1>Connect With Me </h1>\n//       <p style={{ fontFamily: \"cursive\", fontSize: \"20px\" }}>\n//         {\" \"}\n//         Send me a message and I will get back to you as soon as possible.\n//       </p>\n//       <hr />\n//       <form onSubmit={handleOnSubmit}>\n//         <motion.div\n//           animate={{ scale: [0, 0.4, 0.8, 1] }}\n//           transition={{ times: [0, 0.1, 0.1, 1] }}\n//           className=\"form-group\"\n//         >\n//           <div class=\"col-sm-offset-2 col-sm-10\">\n//             <label\n//               for=\"name\"\n//               style={{\n//                 fontFamily: \"fantasy\",\n//               }}\n//             >\n//               Name\n//             </label>\n//             <input\n//               className=\"form-control\"\n//               id=\"name\"\n//               type=\"text\"\n//               name=\"_name\"\n//               onChange={handleOnChange}\n//               required\n//               value={inputs.name}\n//               width=\"20%\"\n//             />\n//           </div>\n//         </motion.div>\n//         <motion.div\n//           animate={{ scale: [0, 0.4, 0.8, 1] }}\n//           transition={{ times: [0, 0.1, 0.1, 1] }}\n//           class=\"form-group\"\n//         >\n//           <div class=\"col-sm-offset-2 col-sm-10\">\n//             <label\n//               style={{\n//                 fontFamily: \"fantasy\",\n//               }}\n//               htmlFor=\"email\"\n//             >\n//               Email\n//             </label>\n//             <input\n//               className=\"form-control\"\n//               id=\"email\"\n//               type=\"email\"\n//               name=\"_replyto\"\n//               onChange={handleOnChange}\n//               required\n//               value={inputs.email}\n//             />\n//           </div>\n//         </motion.div>\n//         <motion.div\n//           animate={{ scale: [0, 0.4, 0.8, 1] }}\n//           transition={{ times: [0, 0.1, 0.1, 1] }}\n//           class=\"form-group\"\n//         >\n//           <div class=\"col-sm-offset-2 col-sm-10\">\n//             <label\n//               style={{\n//                 fontFamily: \"fantasy\",\n//               }}\n//               htmlFor=\"message\"\n//             >\n//               Message\n//             </label>\n//             <textarea\n//               className=\"form-control\"\n//               id=\"message\"\n//               name=\"message\"\n//               onChange={handleOnChange}\n//               required\n//               value={inputs.message}\n//             />\n//           </div>\n//         </motion.div>\n//         <motion.div\n//           animate={{ scale: [0, 0.4, 0.8, 1] }}\n//           transition={{ times: [0, 0.1, 0.1, 1] }}\n//           class=\"form-group\"\n//         >\n//           <div\n//             class=\"col-sm-offset-2 col-sm-10\"\n//             style={{ alignContent: \"end\" }}\n//           >\n//             <motion.button\n//               whileHover={{ scale: 1.2 }}\n//               whileFocus={{ scale: 2 }}\n//               type=\"submit\"\n//               className=\"btn btn-secondary\"\n//               disabled={status.submitting}\n//               style={{\n//                 fontFamily: \"fantasy\",\n//                 marginTop: \"10px\",\n//               }}\n//             >\n//               {!status.submitting\n//                 ? !status.submitted\n//                   ? \"Submit\"\n//                   : \"Submitted\"\n//                 : \"Submitting...\"}\n//             </motion.button>\n//           </div>\n//         </motion.div>\n//       </form>\n\n//       {status.info.error && (\n//         <motion.div animate={{ scale: [0, 5] }} className=\"error\">\n//           Error: {status.info.msg}\n//         </motion.div>\n//       )}\n//       {!status.info.error && status.info.msg && <p>{status.info.msg}</p>}\n//     </main>\n//   );\n// };\n"]},"metadata":{},"sourceType":"module"}