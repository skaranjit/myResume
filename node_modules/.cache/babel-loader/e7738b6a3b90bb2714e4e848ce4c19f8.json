{"ast":null,"code":"var _jsxFileName = \"/Users/sumankaranjit/myProfile/resume/src/pages/Contact.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useForm, ValidationError } from \"@formspree/react\";\nimport validator from \"validator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DisplaySuccess() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container   bg-light\",\n    style: {\n      padding: \"5rem\"\n    },\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"display-3\",\n      children: \"Thank you for contacting me!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n\n_c = DisplaySuccess;\n\nfunction verifyEmail(event) {\n  if (validator.isEmail(event.target.value)) {\n    document.getElementById(\"valid-feedback\").insertAdjacentText(\"afterbegin\", \"Looks Good!\");\n  } else {\n    return document.getElementById(\"Invalid-feedback\").insertAdjacentText(\"afterbegin\", \"Invalid!\");\n  }\n}\n\nvar email = \"\";\n\nconst addEmail = e => {\n  email += e.target.value;\n};\n\nfunction ContactForm() {\n  _s();\n\n  const [state, handleSubmit] = useForm(\"xwkaqqeg\");\n\n  if (state.succeeded) {\n    DisplaySuccess();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container   bg-light\",\n    style: {\n      padding: \"5rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: \"center\",\n        textCombineUpright: \"all\",\n        fontSize: \"20px\",\n        fontFamily: \"cursive\"\n      },\n      children: \"You can send me a message here! I will get back to you as soon as possible.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-md-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          for: \"email\",\n          style: {\n            fontFamily: \"fantasy\"\n          },\n          children: \"Your Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          id: \"email\",\n          type: \"email\",\n          name: \"email\",\n          onInput: e => addEmail(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), console.log(email), validator.isEmpty(email) ? \"\" : verifyEmail(email), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"valid-feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ValidationError, {\n          prefix: \"Email\",\n          field: \"email\",\n          errors: state.errors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"invalid-feedback\",\n          className: \"invalid-feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"valid-feedback\",\n          class: \"invalid-feedback\",\n          children: \"Please enter a message in the textarea.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"mb-3\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          htmlFor: \"validationTextarea\",\n          children: \"Your Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control is-invalid\",\n          id: \"validationTextarea\",\n          name: \"message\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"invalid-feedback\",\n          children: \"Please enter a message in the textarea.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ValidationError, {\n          prefix: \"Message\",\n          field: \"message\",\n          className: \"valid-feedback\",\n          errors: state.errors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: state.submitting,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ContactForm, \"SzbQxrvQUV4DSvQQhTwcmgv5UiE=\", false, function () {\n  return [useForm];\n});\n\n_c2 = ContactForm;\nexport default ContactForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DisplaySuccess\");\n$RefreshReg$(_c2, \"ContactForm\");","map":{"version":3,"sources":["/Users/sumankaranjit/myProfile/resume/src/pages/Contact.js"],"names":["React","useState","useForm","ValidationError","validator","DisplaySuccess","padding","verifyEmail","event","isEmail","target","value","document","getElementById","insertAdjacentText","email","addEmail","e","ContactForm","state","handleSubmit","succeeded","textAlign","textCombineUpright","fontSize","fontFamily","console","log","isEmpty","errors","submitting"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useForm, ValidationError } from \"@formspree/react\";\nimport validator from \"validator\";\nfunction DisplaySuccess() {\n  return (\n    <div className=\"container   bg-light\" style={{ padding: \"5rem\" }}>\n      {\" \"}\n      <p className=\"display-3\">Thank you for contacting me!</p>\n    </div>\n  );\n}\nfunction verifyEmail(event) {\n  if (validator.isEmail(event.target.value)) {\n    document\n      .getElementById(\"valid-feedback\")\n      .insertAdjacentText(\"afterbegin\", \"Looks Good!\");\n  } else {\n    return document\n      .getElementById(\"Invalid-feedback\")\n      .insertAdjacentText(\"afterbegin\", \"Invalid!\");\n  }\n}\nvar email = \"\";\nconst addEmail = (e) => {\n  email += e.target.value;\n};\nfunction ContactForm() {\n  const [state, handleSubmit] = useForm(\"xwkaqqeg\");\n\n  if (state.succeeded) {\n    DisplaySuccess();\n  }\n  return (\n    <div className=\"container   bg-light\" style={{ padding: \"5rem\" }}>\n      <p\n        style={{\n          textAlign: \"center\",\n          textCombineUpright: \"all\",\n          fontSize: \"20px\",\n          fontFamily: \"cursive\",\n        }}\n      >\n        You can send me a message here! I will get back to you as soon as\n        possible.\n      </p>\n      <form onSubmit={handleSubmit}>\n        <div class=\"col-md-4\">\n          <label\n            className=\"form-label\"\n            for=\"email\"\n            style={{\n              fontFamily: \"fantasy\",\n            }}\n          >\n            Your Email Address\n          </label>\n          <input\n            className=\"form-control\"\n            id=\"email\"\n            type=\"email\"\n            name=\"email\"\n            onInput={(e) => addEmail(e)}\n          />\n          {console.log(email)}\n          {validator.isEmpty(email) ? \"\" : verifyEmail(email)}\n          <div id=\"valid-feedback\"></div>\n\n          <ValidationError prefix=\"Email\" field=\"email\" errors={state.errors} />\n          <div id=\"invalid-feedback\" className=\"invalid-feedback\"></div>\n          <div id=\"valid-feedback\" class=\"invalid-feedback\">\n            Please enter a message in the textarea.\n          </div>\n        </div>\n        <div class=\"mb-3\">\n          {\" \"}\n          <label className=\"form-label\" htmlFor=\"validationTextarea\">\n            Your Message\n          </label>\n          <textarea\n            className=\"form-control is-invalid\"\n            id=\"validationTextarea\"\n            name=\"message\"\n            required\n          />\n          <div class=\"invalid-feedback\">\n            Please enter a message in the textarea.\n          </div>\n          <ValidationError\n            prefix=\"Message\"\n            field=\"message\"\n            className=\"valid-feedback\"\n            errors={state.errors}\n          />\n        </div>\n\n        <button type=\"submit\" disabled={state.submitting}>\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}