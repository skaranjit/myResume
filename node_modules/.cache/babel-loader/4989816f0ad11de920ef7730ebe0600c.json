{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $RegExp = GetIntrinsic('%RegExp%'); // var RegExpAlloc = require('./RegExpAlloc');\n// var RegExpInitialize = require('./RegExpInitialize');\n\nvar ToString = require('./ToString'); // https://262.ecma-international.org/6.0/#sec-regexpcreate\n\n\nmodule.exports = function RegExpCreate(P, F) {\n  // var obj = RegExpAlloc($RegExp);\n  // return RegExpInitialize(obj, P, F);\n  // covers spec mechanics; bypass regex brand checking\n  var pattern = typeof P === 'undefined' ? '' : ToString(P);\n  var flags = typeof F === 'undefined' ? '' : ToString(F);\n  return new $RegExp(pattern, flags);\n};","map":{"version":3,"sources":["/Users/sumankaranjit/myProfile/resume/node_modules/es-abstract/2018/RegExpCreate.js"],"names":["GetIntrinsic","require","$RegExp","ToString","module","exports","RegExpCreate","P","F","pattern","flags"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AAEA,IAAIC,OAAO,GAAGF,YAAY,CAAC,UAAD,CAA1B,C,CAEA;AACA;;AACA,IAAIG,QAAQ,GAAGF,OAAO,CAAC,YAAD,CAAtB,C,CAEA;;;AAEAG,MAAM,CAACC,OAAP,GAAiB,SAASC,YAAT,CAAsBC,CAAtB,EAAyBC,CAAzB,EAA4B;AAC5C;AACA;AAEA;AACA,MAAIC,OAAO,GAAG,OAAOF,CAAP,KAAa,WAAb,GAA2B,EAA3B,GAAgCJ,QAAQ,CAACI,CAAD,CAAtD;AACA,MAAIG,KAAK,GAAG,OAAOF,CAAP,KAAa,WAAb,GAA2B,EAA3B,GAAgCL,QAAQ,CAACK,CAAD,CAApD;AACA,SAAO,IAAIN,OAAJ,CAAYO,OAAZ,EAAqBC,KAArB,CAAP;AACA,CARD","sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $RegExp = GetIntrinsic('%RegExp%');\n\n// var RegExpAlloc = require('./RegExpAlloc');\n// var RegExpInitialize = require('./RegExpInitialize');\nvar ToString = require('./ToString');\n\n// https://262.ecma-international.org/6.0/#sec-regexpcreate\n\nmodule.exports = function RegExpCreate(P, F) {\n\t// var obj = RegExpAlloc($RegExp);\n\t// return RegExpInitialize(obj, P, F);\n\n\t// covers spec mechanics; bypass regex brand checking\n\tvar pattern = typeof P === 'undefined' ? '' : ToString(P);\n\tvar flags = typeof F === 'undefined' ? '' : ToString(F);\n\treturn new $RegExp(pattern, flags);\n};\n"]},"metadata":{},"sourceType":"script"}