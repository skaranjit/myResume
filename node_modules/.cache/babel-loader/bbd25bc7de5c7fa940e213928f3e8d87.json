{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $gOPD = require('../helpers/getOwnPropertyDescriptor');\n\nvar $SyntaxError = GetIntrinsic('%SyntaxError%');\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar isPropertyDescriptor = require('../helpers/isPropertyDescriptor');\n\nvar IsAccessorDescriptor = require('./IsAccessorDescriptor');\n\nvar IsDataDescriptor = require('./IsDataDescriptor');\n\nvar IsExtensible = require('./IsExtensible');\n\nvar IsPropertyKey = require('./IsPropertyKey');\n\nvar ToPropertyDescriptor = require('./ToPropertyDescriptor');\n\nvar SameValue = require('./SameValue');\n\nvar Type = require('./Type');\n\nvar ValidateAndApplyPropertyDescriptor = require('./ValidateAndApplyPropertyDescriptor'); // https://ecma-international.org/ecma-262/6.0/#sec-ordinarydefineownproperty\n\n\nmodule.exports = function OrdinaryDefineOwnProperty(O, P, Desc) {\n  if (Type(O) !== 'Object') {\n    throw new $TypeError('Assertion failed: O must be an Object');\n  }\n\n  if (!IsPropertyKey(P)) {\n    throw new $TypeError('Assertion failed: P must be a Property Key');\n  }\n\n  if (!isPropertyDescriptor({\n    Type: Type,\n    IsDataDescriptor: IsDataDescriptor,\n    IsAccessorDescriptor: IsAccessorDescriptor\n  }, Desc)) {\n    throw new $TypeError('Assertion failed: Desc must be a Property Descriptor');\n  }\n\n  if (!$gOPD) {\n    // ES3/IE 8 fallback\n    if (IsAccessorDescriptor(Desc)) {\n      throw new $SyntaxError('This environment does not support accessor property descriptors.');\n    }\n\n    var creatingNormalDataProperty = !(P in O) && Desc['[[Writable]]'] && Desc['[[Enumerable]]'] && Desc['[[Configurable]]'] && '[[Value]]' in Desc;\n    var settingExistingDataProperty = P in O && (!('[[Configurable]]' in Desc) || Desc['[[Configurable]]']) && (!('[[Enumerable]]' in Desc) || Desc['[[Enumerable]]']) && (!('[[Writable]]' in Desc) || Desc['[[Writable]]']) && '[[Value]]' in Desc;\n\n    if (creatingNormalDataProperty || settingExistingDataProperty) {\n      O[P] = Desc['[[Value]]']; // eslint-disable-line no-param-reassign\n\n      return SameValue(O[P], Desc['[[Value]]']);\n    }\n\n    throw new $SyntaxError('This environment does not support defining non-writable, non-enumerable, or non-configurable properties');\n  }\n\n  var desc = $gOPD(O, P);\n  var current = desc && ToPropertyDescriptor(desc);\n  var extensible = IsExtensible(O);\n  return ValidateAndApplyPropertyDescriptor(O, P, extensible, Desc, current);\n};","map":{"version":3,"sources":["/Users/sumankaranjit/myProfile/resume/node_modules/es-abstract/2018/OrdinaryDefineOwnProperty.js"],"names":["GetIntrinsic","require","$gOPD","$SyntaxError","$TypeError","isPropertyDescriptor","IsAccessorDescriptor","IsDataDescriptor","IsExtensible","IsPropertyKey","ToPropertyDescriptor","SameValue","Type","ValidateAndApplyPropertyDescriptor","module","exports","OrdinaryDefineOwnProperty","O","P","Desc","creatingNormalDataProperty","settingExistingDataProperty","desc","current","extensible"],"mappings":"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","sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $gOPD = require('../helpers/getOwnPropertyDescriptor');\nvar $SyntaxError = GetIntrinsic('%SyntaxError%');\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar isPropertyDescriptor = require('../helpers/isPropertyDescriptor');\n\nvar IsAccessorDescriptor = require('./IsAccessorDescriptor');\nvar IsDataDescriptor = require('./IsDataDescriptor');\nvar IsExtensible = require('./IsExtensible');\nvar IsPropertyKey = require('./IsPropertyKey');\nvar ToPropertyDescriptor = require('./ToPropertyDescriptor');\nvar SameValue = require('./SameValue');\nvar Type = require('./Type');\nvar ValidateAndApplyPropertyDescriptor = require('./ValidateAndApplyPropertyDescriptor');\n\n// https://ecma-international.org/ecma-262/6.0/#sec-ordinarydefineownproperty\n\nmodule.exports = function OrdinaryDefineOwnProperty(O, P, Desc) {\n\tif (Type(O) !== 'Object') {\n\t\tthrow new $TypeError('Assertion failed: O must be an Object');\n\t}\n\tif (!IsPropertyKey(P)) {\n\t\tthrow new $TypeError('Assertion failed: P must be a Property Key');\n\t}\n\tif (!isPropertyDescriptor({\n\t\tType: Type,\n\t\tIsDataDescriptor: IsDataDescriptor,\n\t\tIsAccessorDescriptor: IsAccessorDescriptor\n\t}, Desc)) {\n\t\tthrow new $TypeError('Assertion failed: Desc must be a Property Descriptor');\n\t}\n\tif (!$gOPD) {\n\t\t// ES3/IE 8 fallback\n\t\tif (IsAccessorDescriptor(Desc)) {\n\t\t\tthrow new $SyntaxError('This environment does not support accessor property descriptors.');\n\t\t}\n\t\tvar creatingNormalDataProperty = !(P in O)\n\t\t\t&& Desc['[[Writable]]']\n\t\t\t&& Desc['[[Enumerable]]']\n\t\t\t&& Desc['[[Configurable]]']\n\t\t\t&& '[[Value]]' in Desc;\n\t\tvar settingExistingDataProperty = (P in O)\n\t\t\t&& (!('[[Configurable]]' in Desc) || Desc['[[Configurable]]'])\n\t\t\t&& (!('[[Enumerable]]' in Desc) || Desc['[[Enumerable]]'])\n\t\t\t&& (!('[[Writable]]' in Desc) || Desc['[[Writable]]'])\n\t\t\t&& '[[Value]]' in Desc;\n\t\tif (creatingNormalDataProperty || settingExistingDataProperty) {\n\t\t\tO[P] = Desc['[[Value]]']; // eslint-disable-line no-param-reassign\n\t\t\treturn SameValue(O[P], Desc['[[Value]]']);\n\t\t}\n\t\tthrow new $SyntaxError('This environment does not support defining non-writable, non-enumerable, or non-configurable properties');\n\t}\n\tvar desc = $gOPD(O, P);\n\tvar current = desc && ToPropertyDescriptor(desc);\n\tvar extensible = IsExtensible(O);\n\treturn ValidateAndApplyPropertyDescriptor(O, P, extensible, Desc, current);\n};\n"]},"metadata":{},"sourceType":"script"}