{"ast":null,"code":"var _jsxFileName = \"/Users/sumankaranjit/myProfile/resume/src/pages/Contact.js\";\nimport React, { Component, useState } from \"react\";\nimport { useForm, ValidationError } from \"@formspree/react\";\nimport validator from \"validator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default ContactForm = () => {\n  function DisplaySuccess() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container   bg-light\",\n      style: {\n        padding: \"5rem\"\n      },\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"display-3\",\n        children: \"Thank you for contacting me!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this);\n  }\n\n  function addEmail(e) {\n    console.log(e.target.value);\n  }\n\n  function verifyEmail(event) {\n    if (validator.isEmail(event.target.value)) {\n      document.getElementById(\"valid-feedback\").insertAdjacentText(\"afterbegin\", \"Looks Good!\");\n    } else {\n      return document.getElementById(\"Invalid-feedback\").insertAdjacentText(\"afterbegin\", \"Invalid!\");\n    }\n  }\n\n  function handleOnSubmit(event) {\n    event.preventDefault();\n    setServerState({\n      submitting: true\n    });\n    axios({\n      method: \"POST\",\n      url: \"https://formspree.io/f/xwkaqqeg\",\n      data: inputs\n    }).then(r => {\n      handleServerResponse(true, \"Thanks!\");\n    }).catch(r => {\n      handleServerResponse(false, r.response.data.error);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container   bg-light\",\n    style: {\n      padding: \"5rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: \"center\",\n        textCombineUpright: \"all\",\n        fontSize: \"20px\",\n        fontFamily: \"cursive\"\n      },\n      children: \"You can send me a message here! I will get back to you as soon as possible.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-md-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          for: \"email\",\n          style: {\n            fontFamily: \"fantasy\"\n          },\n          children: \"Your Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          id: \"email\",\n          type: \"email\",\n          name: \"email\",\n          onInput: e => addEmail(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"valid-feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ValidationError, {\n          prefix: \"Email\",\n          field: \"email\",\n          errors: state.errors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"invalid-feedback\",\n          className: \"invalid-feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"valid-feedback\",\n          class: \"invalid-feedback\",\n          children: \"Please enter a message in the textarea.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"mb-3\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          htmlFor: \"validationTextarea\",\n          children: \"Your Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control is-invalid\",\n          id: \"validationTextarea\",\n          name: \"message\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"invalid-feedback\",\n          children: \"Please enter a message in the textarea.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ValidationError, {\n          prefix: \"Message\",\n          field: \"message\",\n          className: \"valid-feedback\",\n          errors: state.errors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: state.submitting,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/Users/sumankaranjit/myProfile/resume/src/pages/Contact.js"],"names":["React","Component","useState","useForm","ValidationError","validator","ContactForm","DisplaySuccess","padding","addEmail","e","console","log","target","value","verifyEmail","event","isEmail","document","getElementById","insertAdjacentText","handleOnSubmit","preventDefault","setServerState","submitting","axios","method","url","data","inputs","then","r","handleServerResponse","catch","response","error","textAlign","textCombineUpright","fontSize","fontFamily","handleSubmit","state","errors"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\nimport { useForm, ValidationError } from \"@formspree/react\";\nimport validator from \"validator\";\n\nexport default ContactForm = () => {\n  function DisplaySuccess() {\n    return (\n      <div className=\"container   bg-light\" style={{ padding: \"5rem\" }}>\n        {\" \"}\n        <p className=\"display-3\">Thank you for contacting me!</p>\n      </div>\n    );\n  }\n  function addEmail(e) {\n    console.log(e.target.value);\n  }\n  function verifyEmail(event) {\n    if (validator.isEmail(event.target.value)) {\n      document\n        .getElementById(\"valid-feedback\")\n        .insertAdjacentText(\"afterbegin\", \"Looks Good!\");\n    } else {\n      return document\n        .getElementById(\"Invalid-feedback\")\n        .insertAdjacentText(\"afterbegin\", \"Invalid!\");\n    }\n  }\n  function handleOnSubmit(event) {\n    event.preventDefault();\n    setServerState({ submitting: true });\n    axios({\n      method: \"POST\",\n      url: \"https://formspree.io/f/xwkaqqeg\",\n      data: inputs,\n    })\n      .then((r) => {\n        handleServerResponse(true, \"Thanks!\");\n      })\n      .catch((r) => {\n        handleServerResponse(false, r.response.data.error);\n      });\n  }\n\n  return (\n    <div className=\"container   bg-light\" style={{ padding: \"5rem\" }}>\n      <p\n        style={{\n          textAlign: \"center\",\n          textCombineUpright: \"all\",\n          fontSize: \"20px\",\n          fontFamily: \"cursive\",\n        }}\n      >\n        You can send me a message here! I will get back to you as soon as\n        possible.\n      </p>\n      <form onSubmit={handleSubmit}>\n        <div class=\"col-md-4\">\n          <label\n            className=\"form-label\"\n            for=\"email\"\n            style={{\n              fontFamily: \"fantasy\",\n            }}\n          >\n            Your Email Address\n          </label>\n          <input\n            className=\"form-control\"\n            id=\"email\"\n            type=\"email\"\n            name=\"email\"\n            onInput={(e) => addEmail(e)}\n          />\n\n          <div id=\"valid-feedback\"></div>\n\n          <ValidationError prefix=\"Email\" field=\"email\" errors={state.errors} />\n          <div id=\"invalid-feedback\" className=\"invalid-feedback\"></div>\n          <div id=\"valid-feedback\" class=\"invalid-feedback\">\n            Please enter a message in the textarea.\n          </div>\n        </div>\n        <div class=\"mb-3\">\n          {\" \"}\n          <label className=\"form-label\" htmlFor=\"validationTextarea\">\n            Your Message\n          </label>\n          <textarea\n            className=\"form-control is-invalid\"\n            id=\"validationTextarea\"\n            name=\"message\"\n            required\n          />\n          <div class=\"invalid-feedback\">\n            Please enter a message in the textarea.\n          </div>\n          <ValidationError\n            prefix=\"Message\"\n            field=\"message\"\n            className=\"valid-feedback\"\n            errors={state.errors}\n          />\n        </div>\n\n        <button type=\"submit\" disabled={state.submitting}>\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}