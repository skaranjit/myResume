{"ast":null,"code":"var _jsxFileName = \"/Users/sumankaranjit/myProfile/resume/src/pages/Contact.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useForm, ValidationError } from \"@formspree/react\";\nimport validator from \"validator\";\nimport { ifStatement } from \"babel-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DisplaySuccess() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container   bg-light\",\n    style: {\n      padding: \"5rem\"\n    },\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"display-3\",\n      children: \"Thank you for contacting me!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" I will get back to you as soon as possible.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\n_c = DisplaySuccess;\n\nfunction verifyEmail(event) {\n  const target = event.target;\n  const value = target.type === \"email\" ? target.value : \"\";\n\n  if (validator.isEmail(target.value)) {\n    document.getElementById(\"valid-feedback\").insertAdjacentText(\"afterbegin\", \"Looks Good!\");\n  } else {\n    return \"Wrong Email Address! \";\n  }\n}\n\nfunction ContactForm() {\n  _s();\n\n  const [state, handleSubmit] = useForm(\"xwkaqqeg\");\n  const [email, emailAdd] = useState();\n\n  if (state.succeeded) {\n    DisplaySuccess();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container   bg-light\",\n    style: {\n      padding: \"5rem\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-md-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          htmlFor: \"email\",\n          children: \"Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          id: \"email\",\n          type: \"email\",\n          name: \"email\",\n          value: this.email,\n          onChange: text => emailAdd(text)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ValidationError, {\n          prefix: \"Email\",\n          field: \"email\",\n          errors: state.errors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"invalid-feedback\",\n          className: \"invalid-feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"valid-feedback\",\n          class: \"invalid-feedback\",\n          children: \"Please enter a message in the textarea.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"mb-3\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          htmlFor: \"validationTextarea\",\n          children: \"Your Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control is-invalid\",\n          id: \"validationTextarea\",\n          name: \"message\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"invalid-feedback\",\n          children: \"Please enter a message in the textarea.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ValidationError, {\n          prefix: \"Message\",\n          field: \"message\",\n          className: \"valid-feedback\",\n          errors: state.errors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: state.submitting,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ContactForm, \"3bs8cwE9z15ifhoh29WxiVPXh/E=\", false, function () {\n  return [useForm];\n});\n\n_c2 = ContactForm;\nexport default ContactForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DisplaySuccess\");\n$RefreshReg$(_c2, \"ContactForm\");","map":{"version":3,"sources":["/Users/sumankaranjit/myProfile/resume/src/pages/Contact.js"],"names":["React","useState","useForm","ValidationError","validator","ifStatement","DisplaySuccess","padding","verifyEmail","event","target","value","type","isEmail","document","getElementById","insertAdjacentText","ContactForm","state","handleSubmit","email","emailAdd","succeeded","text","errors","submitting"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useForm, ValidationError } from \"@formspree/react\";\nimport validator from \"validator\";\nimport { ifStatement } from \"babel-types\";\nfunction DisplaySuccess() {\n  return (\n    <div className=\"container   bg-light\" style={{ padding: \"5rem\" }}>\n      {\" \"}\n      <p className=\"display-3\">Thank you for contacting me!</p>\n      <p> I will get back to you as soon as possible.</p>\n    </div>\n  );\n}\nfunction verifyEmail(event) {\n  const target = event.target;\n  const value = target.type === \"email\" ? target.value : \"\";\n  if (validator.isEmail(target.value)) {\n    document\n      .getElementById(\"valid-feedback\")\n      .insertAdjacentText(\"afterbegin\", \"Looks Good!\");\n  } else {\n    return \"Wrong Email Address! \";\n  }\n}\nfunction ContactForm() {\n  const [state, handleSubmit] = useForm(\"xwkaqqeg\");\n  const [email, emailAdd] = useState();\n\n  if (state.succeeded) {\n    DisplaySuccess();\n  }\n  return (\n    <div className=\"container   bg-light\" style={{ padding: \"5rem\" }}>\n      <form onSubmit={handleSubmit}>\n        <div class=\"col-md-4\">\n          <label className=\"form-label\" htmlFor=\"email\">\n            Email Address\n          </label>\n          <input\n            className=\"form-control\"\n            id=\"email\"\n            type=\"email\"\n            name=\"email\"\n            value={this.email}\n            onChange={(text) => emailAdd(text)}\n          />\n\n          <ValidationError prefix=\"Email\" field=\"email\" errors={state.errors} />\n          <div id=\"invalid-feedback\" className=\"invalid-feedback\">\n            {}\n          </div>\n          <div id=\"valid-feedback\" class=\"invalid-feedback\">\n            Please enter a message in the textarea.\n          </div>\n        </div>\n        <div class=\"mb-3\">\n          {\" \"}\n          <label className=\"form-label\" htmlFor=\"validationTextarea\">\n            Your Message\n          </label>\n          <textarea\n            className=\"form-control is-invalid\"\n            id=\"validationTextarea\"\n            name=\"message\"\n            required\n          />\n          <div class=\"invalid-feedback\">\n            Please enter a message in the textarea.\n          </div>\n          <ValidationError\n            prefix=\"Message\"\n            field=\"message\"\n            className=\"valid-feedback\"\n            errors={state.errors}\n          />\n        </div>\n\n        <button type=\"submit\" disabled={state.submitting}>\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}