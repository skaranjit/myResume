{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $RangeError = GetIntrinsic('%RangeError%');\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar assign = require('object.assign');\n\nvar isPropertyDescriptor = require('../helpers/isPropertyDescriptor');\n\nvar IsArray = require('./IsArray');\n\nvar IsAccessorDescriptor = require('./IsAccessorDescriptor');\n\nvar IsDataDescriptor = require('./IsDataDescriptor');\n\nvar OrdinaryDefineOwnProperty = require('./OrdinaryDefineOwnProperty');\n\nvar OrdinaryGetOwnProperty = require('./OrdinaryGetOwnProperty');\n\nvar ToNumber = require('./ToNumber');\n\nvar ToString = require('./ToString');\n\nvar ToUint32 = require('./ToUint32');\n\nvar Type = require('./Type'); // https://ecma-international.org/ecma-262/6.0/#sec-arraysetlength\n// eslint-disable-next-line max-statements, max-lines-per-function\n\n\nmodule.exports = function ArraySetLength(A, Desc) {\n  if (!IsArray(A)) {\n    throw new $TypeError('Assertion failed: A must be an Array');\n  }\n\n  if (!isPropertyDescriptor({\n    Type: Type,\n    IsDataDescriptor: IsDataDescriptor,\n    IsAccessorDescriptor: IsAccessorDescriptor\n  }, Desc)) {\n    throw new $TypeError('Assertion failed: Desc must be a Property Descriptor');\n  }\n\n  if (!('[[Value]]' in Desc)) {\n    return OrdinaryDefineOwnProperty(A, 'length', Desc);\n  }\n\n  var newLenDesc = assign({}, Desc);\n  var newLen = ToUint32(Desc['[[Value]]']);\n  var numberLen = ToNumber(Desc['[[Value]]']);\n\n  if (newLen !== numberLen) {\n    throw new $RangeError('Invalid array length');\n  }\n\n  newLenDesc['[[Value]]'] = newLen;\n  var oldLenDesc = OrdinaryGetOwnProperty(A, 'length');\n\n  if (!IsDataDescriptor(oldLenDesc)) {\n    throw new $TypeError('Assertion failed: an array had a non-data descriptor on `length`');\n  }\n\n  var oldLen = oldLenDesc['[[Value]]'];\n\n  if (newLen >= oldLen) {\n    return OrdinaryDefineOwnProperty(A, 'length', newLenDesc);\n  }\n\n  if (!oldLenDesc['[[Writable]]']) {\n    return false;\n  }\n\n  var newWritable;\n\n  if (!('[[Writable]]' in newLenDesc) || newLenDesc['[[Writable]]']) {\n    newWritable = true;\n  } else {\n    newWritable = false;\n    newLenDesc['[[Writable]]'] = true;\n  }\n\n  var succeeded = OrdinaryDefineOwnProperty(A, 'length', newLenDesc);\n\n  if (!succeeded) {\n    return false;\n  }\n\n  while (newLen < oldLen) {\n    oldLen -= 1; // eslint-disable-next-line no-param-reassign\n\n    var deleteSucceeded = delete A[ToString(oldLen)];\n\n    if (!deleteSucceeded) {\n      newLenDesc['[[Value]]'] = oldLen + 1;\n\n      if (!newWritable) {\n        newLenDesc['[[Writable]]'] = false;\n        OrdinaryDefineOwnProperty(A, 'length', newLenDesc);\n        return false;\n      }\n    }\n  }\n\n  if (!newWritable) {\n    return OrdinaryDefineOwnProperty(A, 'length', {\n      '[[Writable]]': false\n    });\n  }\n\n  return true;\n};","map":{"version":3,"sources":["/Users/sumankaranjit/myProfile/resume/node_modules/es-abstract/2018/ArraySetLength.js"],"names":["GetIntrinsic","require","$RangeError","$TypeError","assign","isPropertyDescriptor","IsArray","IsAccessorDescriptor","IsDataDescriptor","OrdinaryDefineOwnProperty","OrdinaryGetOwnProperty","ToNumber","ToString","ToUint32","Type","module","exports","ArraySetLength","A","Desc","newLenDesc","newLen","numberLen","oldLenDesc","oldLen","newWritable","succeeded","deleteSucceeded"],"mappings":"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","sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $RangeError = GetIntrinsic('%RangeError%');\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar assign = require('object.assign');\n\nvar isPropertyDescriptor = require('../helpers/isPropertyDescriptor');\n\nvar IsArray = require('./IsArray');\nvar IsAccessorDescriptor = require('./IsAccessorDescriptor');\nvar IsDataDescriptor = require('./IsDataDescriptor');\nvar OrdinaryDefineOwnProperty = require('./OrdinaryDefineOwnProperty');\nvar OrdinaryGetOwnProperty = require('./OrdinaryGetOwnProperty');\nvar ToNumber = require('./ToNumber');\nvar ToString = require('./ToString');\nvar ToUint32 = require('./ToUint32');\nvar Type = require('./Type');\n\n// https://ecma-international.org/ecma-262/6.0/#sec-arraysetlength\n\n// eslint-disable-next-line max-statements, max-lines-per-function\nmodule.exports = function ArraySetLength(A, Desc) {\n\tif (!IsArray(A)) {\n\t\tthrow new $TypeError('Assertion failed: A must be an Array');\n\t}\n\tif (!isPropertyDescriptor({\n\t\tType: Type,\n\t\tIsDataDescriptor: IsDataDescriptor,\n\t\tIsAccessorDescriptor: IsAccessorDescriptor\n\t}, Desc)) {\n\t\tthrow new $TypeError('Assertion failed: Desc must be a Property Descriptor');\n\t}\n\tif (!('[[Value]]' in Desc)) {\n\t\treturn OrdinaryDefineOwnProperty(A, 'length', Desc);\n\t}\n\tvar newLenDesc = assign({}, Desc);\n\tvar newLen = ToUint32(Desc['[[Value]]']);\n\tvar numberLen = ToNumber(Desc['[[Value]]']);\n\tif (newLen !== numberLen) {\n\t\tthrow new $RangeError('Invalid array length');\n\t}\n\tnewLenDesc['[[Value]]'] = newLen;\n\tvar oldLenDesc = OrdinaryGetOwnProperty(A, 'length');\n\tif (!IsDataDescriptor(oldLenDesc)) {\n\t\tthrow new $TypeError('Assertion failed: an array had a non-data descriptor on `length`');\n\t}\n\tvar oldLen = oldLenDesc['[[Value]]'];\n\tif (newLen >= oldLen) {\n\t\treturn OrdinaryDefineOwnProperty(A, 'length', newLenDesc);\n\t}\n\tif (!oldLenDesc['[[Writable]]']) {\n\t\treturn false;\n\t}\n\tvar newWritable;\n\tif (!('[[Writable]]' in newLenDesc) || newLenDesc['[[Writable]]']) {\n\t\tnewWritable = true;\n\t} else {\n\t\tnewWritable = false;\n\t\tnewLenDesc['[[Writable]]'] = true;\n\t}\n\tvar succeeded = OrdinaryDefineOwnProperty(A, 'length', newLenDesc);\n\tif (!succeeded) {\n\t\treturn false;\n\t}\n\twhile (newLen < oldLen) {\n\t\toldLen -= 1;\n\t\t// eslint-disable-next-line no-param-reassign\n\t\tvar deleteSucceeded = delete A[ToString(oldLen)];\n\t\tif (!deleteSucceeded) {\n\t\t\tnewLenDesc['[[Value]]'] = oldLen + 1;\n\t\t\tif (!newWritable) {\n\t\t\t\tnewLenDesc['[[Writable]]'] = false;\n\t\t\t\tOrdinaryDefineOwnProperty(A, 'length', newLenDesc);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\tif (!newWritable) {\n\t\treturn OrdinaryDefineOwnProperty(A, 'length', { '[[Writable]]': false });\n\t}\n\treturn true;\n};\n"]},"metadata":{},"sourceType":"script"}