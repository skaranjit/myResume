{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar SameValue = require('./SameValue');\n\nvar ToNumber = require('./ToNumber');\n\nvar ToString = require('./ToString');\n\nvar Type = require('./Type'); // https://ecma-international.org/ecma-262/6.0/#sec-canonicalnumericindexstring\n\n\nmodule.exports = function CanonicalNumericIndexString(argument) {\n  if (Type(argument) !== 'String') {\n    throw new $TypeError('Assertion failed: `argument` must be a String');\n  }\n\n  if (argument === '-0') {\n    return -0;\n  }\n\n  var n = ToNumber(argument);\n\n  if (SameValue(ToString(n), argument)) {\n    return n;\n  }\n\n  return void 0;\n};","map":{"version":3,"sources":["/Users/sumankaranjit/myProfile/resume/node_modules/es-abstract/2018/CanonicalNumericIndexString.js"],"names":["GetIntrinsic","require","$TypeError","SameValue","ToNumber","ToString","Type","module","exports","CanonicalNumericIndexString","argument","n"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AAEA,IAAIC,UAAU,GAAGF,YAAY,CAAC,aAAD,CAA7B;;AAEA,IAAIG,SAAS,GAAGF,OAAO,CAAC,aAAD,CAAvB;;AACA,IAAIG,QAAQ,GAAGH,OAAO,CAAC,YAAD,CAAtB;;AACA,IAAII,QAAQ,GAAGJ,OAAO,CAAC,YAAD,CAAtB;;AACA,IAAIK,IAAI,GAAGL,OAAO,CAAC,QAAD,CAAlB,C,CAEA;;;AAEAM,MAAM,CAACC,OAAP,GAAiB,SAASC,2BAAT,CAAqCC,QAArC,EAA+C;AAC/D,MAAIJ,IAAI,CAACI,QAAD,CAAJ,KAAmB,QAAvB,EAAiC;AAChC,UAAM,IAAIR,UAAJ,CAAe,+CAAf,CAAN;AACA;;AACD,MAAIQ,QAAQ,KAAK,IAAjB,EAAuB;AAAE,WAAO,CAAC,CAAR;AAAY;;AACrC,MAAIC,CAAC,GAAGP,QAAQ,CAACM,QAAD,CAAhB;;AACA,MAAIP,SAAS,CAACE,QAAQ,CAACM,CAAD,CAAT,EAAcD,QAAd,CAAb,EAAsC;AAAE,WAAOC,CAAP;AAAW;;AACnD,SAAO,KAAK,CAAZ;AACA,CARD","sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar SameValue = require('./SameValue');\nvar ToNumber = require('./ToNumber');\nvar ToString = require('./ToString');\nvar Type = require('./Type');\n\n// https://ecma-international.org/ecma-262/6.0/#sec-canonicalnumericindexstring\n\nmodule.exports = function CanonicalNumericIndexString(argument) {\n\tif (Type(argument) !== 'String') {\n\t\tthrow new $TypeError('Assertion failed: `argument` must be a String');\n\t}\n\tif (argument === '-0') { return -0; }\n\tvar n = ToNumber(argument);\n\tif (SameValue(ToString(n), argument)) { return n; }\n\treturn void 0;\n};\n"]},"metadata":{},"sourceType":"script"}