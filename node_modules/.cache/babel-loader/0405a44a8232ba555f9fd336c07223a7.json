{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $EvalError = GetIntrinsic('%EvalError%');\n\nvar DayWithinYear = require('./DayWithinYear');\n\nvar InLeapYear = require('./InLeapYear');\n\nvar MonthFromTime = require('./MonthFromTime'); // https://262.ecma-international.org/5.1/#sec-15.9.1.5\n\n\nmodule.exports = function DateFromTime(t) {\n  var m = MonthFromTime(t);\n  var d = DayWithinYear(t);\n\n  if (m === 0) {\n    return d + 1;\n  }\n\n  if (m === 1) {\n    return d - 30;\n  }\n\n  var leap = InLeapYear(t);\n\n  if (m === 2) {\n    return d - 58 - leap;\n  }\n\n  if (m === 3) {\n    return d - 89 - leap;\n  }\n\n  if (m === 4) {\n    return d - 119 - leap;\n  }\n\n  if (m === 5) {\n    return d - 150 - leap;\n  }\n\n  if (m === 6) {\n    return d - 180 - leap;\n  }\n\n  if (m === 7) {\n    return d - 211 - leap;\n  }\n\n  if (m === 8) {\n    return d - 242 - leap;\n  }\n\n  if (m === 9) {\n    return d - 272 - leap;\n  }\n\n  if (m === 10) {\n    return d - 303 - leap;\n  }\n\n  if (m === 11) {\n    return d - 333 - leap;\n  }\n\n  throw new $EvalError('Assertion failed: MonthFromTime returned an impossible value: ' + m);\n};","map":{"version":3,"sources":["/Users/sumankaranjit/myProfile/resume/node_modules/es-abstract/2018/DateFromTime.js"],"names":["GetIntrinsic","require","$EvalError","DayWithinYear","InLeapYear","MonthFromTime","module","exports","DateFromTime","t","m","d","leap"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AAEA,IAAIC,UAAU,GAAGF,YAAY,CAAC,aAAD,CAA7B;;AAEA,IAAIG,aAAa,GAAGF,OAAO,CAAC,iBAAD,CAA3B;;AACA,IAAIG,UAAU,GAAGH,OAAO,CAAC,cAAD,CAAxB;;AACA,IAAII,aAAa,GAAGJ,OAAO,CAAC,iBAAD,CAA3B,C,CAEA;;;AAEAK,MAAM,CAACC,OAAP,GAAiB,SAASC,YAAT,CAAsBC,CAAtB,EAAyB;AACzC,MAAIC,CAAC,GAAGL,aAAa,CAACI,CAAD,CAArB;AACA,MAAIE,CAAC,GAAGR,aAAa,CAACM,CAAD,CAArB;;AACA,MAAIC,CAAC,KAAK,CAAV,EAAa;AACZ,WAAOC,CAAC,GAAG,CAAX;AACA;;AACD,MAAID,CAAC,KAAK,CAAV,EAAa;AACZ,WAAOC,CAAC,GAAG,EAAX;AACA;;AACD,MAAIC,IAAI,GAAGR,UAAU,CAACK,CAAD,CAArB;;AACA,MAAIC,CAAC,KAAK,CAAV,EAAa;AACZ,WAAOC,CAAC,GAAG,EAAJ,GAASC,IAAhB;AACA;;AACD,MAAIF,CAAC,KAAK,CAAV,EAAa;AACZ,WAAOC,CAAC,GAAG,EAAJ,GAASC,IAAhB;AACA;;AACD,MAAIF,CAAC,KAAK,CAAV,EAAa;AACZ,WAAOC,CAAC,GAAG,GAAJ,GAAUC,IAAjB;AACA;;AACD,MAAIF,CAAC,KAAK,CAAV,EAAa;AACZ,WAAOC,CAAC,GAAG,GAAJ,GAAUC,IAAjB;AACA;;AACD,MAAIF,CAAC,KAAK,CAAV,EAAa;AACZ,WAAOC,CAAC,GAAG,GAAJ,GAAUC,IAAjB;AACA;;AACD,MAAIF,CAAC,KAAK,CAAV,EAAa;AACZ,WAAOC,CAAC,GAAG,GAAJ,GAAUC,IAAjB;AACA;;AACD,MAAIF,CAAC,KAAK,CAAV,EAAa;AACZ,WAAOC,CAAC,GAAG,GAAJ,GAAUC,IAAjB;AACA;;AACD,MAAIF,CAAC,KAAK,CAAV,EAAa;AACZ,WAAOC,CAAC,GAAG,GAAJ,GAAUC,IAAjB;AACA;;AACD,MAAIF,CAAC,KAAK,EAAV,EAAc;AACb,WAAOC,CAAC,GAAG,GAAJ,GAAUC,IAAjB;AACA;;AACD,MAAIF,CAAC,KAAK,EAAV,EAAc;AACb,WAAOC,CAAC,GAAG,GAAJ,GAAUC,IAAjB;AACA;;AACD,QAAM,IAAIV,UAAJ,CAAe,mEAAmEQ,CAAlF,CAAN;AACA,CAzCD","sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $EvalError = GetIntrinsic('%EvalError%');\n\nvar DayWithinYear = require('./DayWithinYear');\nvar InLeapYear = require('./InLeapYear');\nvar MonthFromTime = require('./MonthFromTime');\n\n// https://262.ecma-international.org/5.1/#sec-15.9.1.5\n\nmodule.exports = function DateFromTime(t) {\n\tvar m = MonthFromTime(t);\n\tvar d = DayWithinYear(t);\n\tif (m === 0) {\n\t\treturn d + 1;\n\t}\n\tif (m === 1) {\n\t\treturn d - 30;\n\t}\n\tvar leap = InLeapYear(t);\n\tif (m === 2) {\n\t\treturn d - 58 - leap;\n\t}\n\tif (m === 3) {\n\t\treturn d - 89 - leap;\n\t}\n\tif (m === 4) {\n\t\treturn d - 119 - leap;\n\t}\n\tif (m === 5) {\n\t\treturn d - 150 - leap;\n\t}\n\tif (m === 6) {\n\t\treturn d - 180 - leap;\n\t}\n\tif (m === 7) {\n\t\treturn d - 211 - leap;\n\t}\n\tif (m === 8) {\n\t\treturn d - 242 - leap;\n\t}\n\tif (m === 9) {\n\t\treturn d - 272 - leap;\n\t}\n\tif (m === 10) {\n\t\treturn d - 303 - leap;\n\t}\n\tif (m === 11) {\n\t\treturn d - 333 - leap;\n\t}\n\tthrow new $EvalError('Assertion failed: MonthFromTime returned an impossible value: ' + m);\n};\n"]},"metadata":{},"sourceType":"script"}