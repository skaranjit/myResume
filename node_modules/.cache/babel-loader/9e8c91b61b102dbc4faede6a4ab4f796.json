{"ast":null,"code":"var _jsxFileName = \"/Users/sumankaranjit/myProfile/resume/src/pages/Contact.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from \"react\";\nimport { useForm, ValidationError } from \"@formspree/react\";\nimport validator from \"validator\";\nimport axios from \"axios\"; // export default function ContactForm() {\n//   function DisplaySuccess() {\n//     return (\n//       <div className=\"container   bg-light\" style={{ padding: \"5rem\" }}>\n//         {\" \"}\n//         <p className=\"display-3\">Thank you for contacting me!</p>\n//       </div>\n//     );\n//   }\n//   const addEmail = (e) => {\n//     console.log(e.target.value);\n//   };\n//   function verifyEmail(event) {\n//     if (validator.isEmail(event.target.value)) {\n//       document\n//         .getElementById(\"valid-feedback\")\n//         .insertAdjacentText(\"afterbegin\", \"Looks Good!\");\n//     } else {\n//       return document\n//         .getElementById(\"Invalid-feedback\")\n//         .insertAdjacentText(\"afterbegin\", \"Invalid!\");\n//     }\n//   }\n//   const handleOnSubmit = (event) => {\n//     event.preventDefault();\n//     setServerState({ submitting: true });\n//     axios({\n//       method: \"POST\",\n//       url: \"https://formspree.io/f/xwkaqqeg\",\n//       data: inputs,\n//     })\n//       .then((r) => {\n//         handleServerResponse(true, \"Thanks!\");\n//       })\n//       .catch((r) => {\n//         handleServerResponse(false, r.response.data.error);\n//       });\n//   };\n//   return (\n//     <div className=\"container   bg-light\" style={{ padding: \"5rem\" }}>\n//       <p\n//         style={{\n//           textAlign: \"center\",\n//           textCombineUpright: \"all\",\n//           fontSize: \"20px\",\n//           fontFamily: \"cursive\",\n//         }}\n//       >\n//         You can send me a message here! I will get back to you as soon as\n//         possible.\n//       </p>\n//       <form onSubmit={handleSubmit}>\n//         <div class=\"col-md-4\">\n//           <label\n//             className=\"form-label\"\n//             for=\"email\"\n//             style={{\n//               fontFamily: \"fantasy\",\n//             }}\n//           >\n//             Your Email Address\n//           </label>\n//           <input\n//             className=\"form-control\"\n//             id=\"email\"\n//             type=\"email\"\n//             name=\"email\"\n//             onInput={(e) => addEmail(e)}\n//           />\n//           <div id=\"valid-feedback\"></div>\n//           <ValidationError prefix=\"Email\" field=\"email\" errors={state.errors} />\n//           <div id=\"invalid-feedback\" className=\"invalid-feedback\"></div>\n//           <div id=\"valid-feedback\" class=\"invalid-feedback\">\n//             Please enter a message in the textarea.\n//           </div>\n//         </div>\n//         <div class=\"mb-3\">\n//           {\" \"}\n//           <label className=\"form-label\" htmlFor=\"validationTextarea\">\n//             Your Message\n//           </label>\n//           <textarea\n//             className=\"form-control is-invalid\"\n//             id=\"validationTextarea\"\n//             name=\"message\"\n//             required\n//           />\n//           <div class=\"invalid-feedback\">\n//             Please enter a message in the textarea.\n//           </div>\n//           <ValidationError\n//             prefix=\"Message\"\n//             field=\"message\"\n//             className=\"valid-feedback\"\n//             errors={state.errors}\n//           />\n//         </div>\n//         <button type=\"submit\" disabled={state.submitting}>\n//           Submit\n//         </button>\n//       </form>\n//     </div>\n//   );\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n\n  const [status, setStatus] = useState({\n    submitted: false,\n    submitting: false,\n    info: {\n      error: false,\n      msg: null\n    }\n  });\n  const [inputs, setInputs] = useState({\n    email: \"\",\n    message: \"\"\n  });\n\n  const handleServerResponse = (ok, msg) => {\n    if (ok) {\n      setStatus({\n        submitted: true,\n        submitting: false,\n        info: {\n          error: false,\n          msg: msg\n        }\n      });\n      setInputs({\n        email: \"\",\n        message: \"\"\n      });\n    } else {\n      setStatus({\n        info: {\n          error: true,\n          msg: msg\n        }\n      });\n    }\n  };\n\n  const handleOnChange = e => {\n    e.persist();\n    setInputs(prev => ({ ...prev,\n      [e.target.id]: e.target.value\n    }));\n    setStatus({\n      submitted: false,\n      submitting: false,\n      info: {\n        error: false,\n        msg: null\n      }\n    });\n  };\n\n  const handleOnSubmit = e => {\n    e.preventDefault();\n    setStatus(prevStatus => ({ ...prevStatus,\n      submitting: true\n    }));\n    axios({\n      method: \"POST\",\n      url: \"https://formspree.io/f/xwkaqqeg\",\n      data: inputs\n    }).then(response => {\n      handleServerResponse(true, \"Thank you, your message has been submitted.\");\n    }).catch(error => {\n      handleServerResponse(false, error.response.data.error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"container \",\n    style: {\n      paddingTop: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Connect With Me \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleOnSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"name\",\n        type: \"text\",\n        name: \"_name\",\n        onChange: handleOnChange,\n        required: true,\n        value: inputs.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"email\",\n        type: \"email\",\n        name: \"_replyto\",\n        onChange: handleOnChange,\n        required: true,\n        value: inputs.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"message\",\n        children: \"Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"message\",\n        name: \"message\",\n        onChange: handleOnChange,\n        required: true,\n        value: inputs.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: status.submitting,\n        children: !status.submitting ? !status.submitted ? \"Submit\" : \"Submitted\" : \"Submitting...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), status.info.error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [\"Error: \", status.info.msg]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }, this), !status.info.error && status.info.msg && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: status.info.msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 49\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n}, \"XoEcxY79AtISMI89vskDrwoI9Xg=\");","map":{"version":3,"sources":["/Users/sumankaranjit/myProfile/resume/src/pages/Contact.js"],"names":["React","Component","useState","useForm","ValidationError","validator","axios","status","setStatus","submitted","submitting","info","error","msg","inputs","setInputs","email","message","handleServerResponse","ok","handleOnChange","e","persist","prev","target","id","value","handleOnSubmit","preventDefault","prevStatus","method","url","data","then","response","catch","paddingTop","name"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\nimport { useForm, ValidationError } from \"@formspree/react\";\nimport validator from \"validator\";\nimport axios from \"axios\";\n// export default function ContactForm() {\n//   function DisplaySuccess() {\n//     return (\n//       <div className=\"container   bg-light\" style={{ padding: \"5rem\" }}>\n//         {\" \"}\n//         <p className=\"display-3\">Thank you for contacting me!</p>\n//       </div>\n//     );\n//   }\n//   const addEmail = (e) => {\n//     console.log(e.target.value);\n//   };\n//   function verifyEmail(event) {\n//     if (validator.isEmail(event.target.value)) {\n//       document\n//         .getElementById(\"valid-feedback\")\n//         .insertAdjacentText(\"afterbegin\", \"Looks Good!\");\n//     } else {\n//       return document\n//         .getElementById(\"Invalid-feedback\")\n//         .insertAdjacentText(\"afterbegin\", \"Invalid!\");\n//     }\n//   }\n//   const handleOnSubmit = (event) => {\n//     event.preventDefault();\n//     setServerState({ submitting: true });\n//     axios({\n//       method: \"POST\",\n//       url: \"https://formspree.io/f/xwkaqqeg\",\n//       data: inputs,\n//     })\n//       .then((r) => {\n//         handleServerResponse(true, \"Thanks!\");\n//       })\n//       .catch((r) => {\n//         handleServerResponse(false, r.response.data.error);\n//       });\n//   };\n\n//   return (\n//     <div className=\"container   bg-light\" style={{ padding: \"5rem\" }}>\n//       <p\n//         style={{\n//           textAlign: \"center\",\n//           textCombineUpright: \"all\",\n//           fontSize: \"20px\",\n//           fontFamily: \"cursive\",\n//         }}\n//       >\n//         You can send me a message here! I will get back to you as soon as\n//         possible.\n//       </p>\n//       <form onSubmit={handleSubmit}>\n//         <div class=\"col-md-4\">\n//           <label\n//             className=\"form-label\"\n//             for=\"email\"\n//             style={{\n//               fontFamily: \"fantasy\",\n//             }}\n//           >\n//             Your Email Address\n//           </label>\n//           <input\n//             className=\"form-control\"\n//             id=\"email\"\n//             type=\"email\"\n//             name=\"email\"\n//             onInput={(e) => addEmail(e)}\n//           />\n\n//           <div id=\"valid-feedback\"></div>\n\n//           <ValidationError prefix=\"Email\" field=\"email\" errors={state.errors} />\n//           <div id=\"invalid-feedback\" className=\"invalid-feedback\"></div>\n//           <div id=\"valid-feedback\" class=\"invalid-feedback\">\n//             Please enter a message in the textarea.\n//           </div>\n//         </div>\n//         <div class=\"mb-3\">\n//           {\" \"}\n//           <label className=\"form-label\" htmlFor=\"validationTextarea\">\n//             Your Message\n//           </label>\n//           <textarea\n//             className=\"form-control is-invalid\"\n//             id=\"validationTextarea\"\n//             name=\"message\"\n//             required\n//           />\n//           <div class=\"invalid-feedback\">\n//             Please enter a message in the textarea.\n//           </div>\n//           <ValidationError\n//             prefix=\"Message\"\n//             field=\"message\"\n//             className=\"valid-feedback\"\n//             errors={state.errors}\n//           />\n//         </div>\n\n//         <button type=\"submit\" disabled={state.submitting}>\n//           Submit\n//         </button>\n//       </form>\n//     </div>\n//   );\n// }\n\nexport default () => {\n  const [status, setStatus] = useState({\n    submitted: false,\n    submitting: false,\n    info: { error: false, msg: null },\n  });\n  const [inputs, setInputs] = useState({\n    email: \"\",\n    message: \"\",\n  });\n  const handleServerResponse = (ok, msg) => {\n    if (ok) {\n      setStatus({\n        submitted: true,\n        submitting: false,\n        info: { error: false, msg: msg },\n      });\n      setInputs({\n        email: \"\",\n        message: \"\",\n      });\n    } else {\n      setStatus({\n        info: { error: true, msg: msg },\n      });\n    }\n  };\n  const handleOnChange = (e) => {\n    e.persist();\n    setInputs((prev) => ({\n      ...prev,\n      [e.target.id]: e.target.value,\n    }));\n    setStatus({\n      submitted: false,\n      submitting: false,\n      info: { error: false, msg: null },\n    });\n  };\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    setStatus((prevStatus) => ({ ...prevStatus, submitting: true }));\n    axios({\n      method: \"POST\",\n      url: \"https://formspree.io/f/xwkaqqeg\",\n      data: inputs,\n    })\n      .then((response) => {\n        handleServerResponse(\n          true,\n          \"Thank you, your message has been submitted.\"\n        );\n      })\n      .catch((error) => {\n        handleServerResponse(false, error.response.data.error);\n      });\n  };\n  return (\n    <main className=\"container \" style={{ paddingTop: \"20px\" }}>\n      <h1>Connect With Me </h1>\n      <hr />\n      <form onSubmit={handleOnSubmit}>\n        <label htmlFor=\"name\">Name</label>\n        <input\n          id=\"name\"\n          type=\"text\"\n          name=\"_name\"\n          onChange={handleOnChange}\n          required\n          value={inputs.name}\n        />\n        <label htmlFor=\"email\">Email</label>\n        <input\n          id=\"email\"\n          type=\"email\"\n          name=\"_replyto\"\n          onChange={handleOnChange}\n          required\n          value={inputs.email}\n        />\n        <label htmlFor=\"message\">Message</label>\n        <textarea\n          id=\"message\"\n          name=\"message\"\n          onChange={handleOnChange}\n          required\n          value={inputs.message}\n        />\n        <button type=\"submit\" disabled={status.submitting}>\n          {!status.submitting\n            ? !status.submitted\n              ? \"Submit\"\n              : \"Submitted\"\n            : \"Submitting...\"}\n        </button>\n      </form>\n      {status.info.error && (\n        <div className=\"error\">Error: {status.info.msg}</div>\n      )}\n      {!status.info.error && status.info.msg && <p>{status.info.msg}</p>}\n    </main>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}