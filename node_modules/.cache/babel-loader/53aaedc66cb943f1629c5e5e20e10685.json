{"ast":null,"code":"'use strict';\n\nvar ToUint16 = require('./ToUint16'); // https://ecma-international.org/ecma-262/6.0/#sec-toint16\n\n\nmodule.exports = function ToInt16(argument) {\n  var int16bit = ToUint16(argument);\n  return int16bit >= 0x8000 ? int16bit - 0x10000 : int16bit;\n};","map":{"version":3,"sources":["/Users/sumankaranjit/myProfile/resume/node_modules/es-abstract/2018/ToInt16.js"],"names":["ToUint16","require","module","exports","ToInt16","argument","int16bit"],"mappings":"AAAA;;AAEA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,YAAD,CAAtB,C,CAEA;;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,OAAT,CAAiBC,QAAjB,EAA2B;AAC3C,MAAIC,QAAQ,GAAGN,QAAQ,CAACK,QAAD,CAAvB;AACA,SAAOC,QAAQ,IAAI,MAAZ,GAAqBA,QAAQ,GAAG,OAAhC,GAA0CA,QAAjD;AACA,CAHD","sourcesContent":["'use strict';\n\nvar ToUint16 = require('./ToUint16');\n\n// https://ecma-international.org/ecma-262/6.0/#sec-toint16\n\nmodule.exports = function ToInt16(argument) {\n\tvar int16bit = ToUint16(argument);\n\treturn int16bit >= 0x8000 ? int16bit - 0x10000 : int16bit;\n};\n"]},"metadata":{},"sourceType":"script"}