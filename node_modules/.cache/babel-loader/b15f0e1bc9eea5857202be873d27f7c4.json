{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar GetPrototypeFromConstructor = require('./GetPrototypeFromConstructor');\n\nvar IsArray = require('./IsArray');\n\nvar ObjectCreate = require('./ObjectCreate'); // https://ecma-international.org/ecma-262/6.0/#sec-ordinarycreatefromconstructor\n\n\nmodule.exports = function OrdinaryCreateFromConstructor(constructor, intrinsicDefaultProto) {\n  GetIntrinsic(intrinsicDefaultProto); // throws if not a valid intrinsic\n\n  var proto = GetPrototypeFromConstructor(constructor, intrinsicDefaultProto);\n  var slots = arguments.length < 3 ? [] : arguments[2];\n\n  if (!IsArray(slots)) {\n    throw new $TypeError('Assertion failed: if provided, `internalSlotsList` must be a List');\n  }\n\n  return ObjectCreate(proto, slots);\n};","map":{"version":3,"sources":["/Users/sumankaranjit/myProfile/resume/node_modules/es-abstract/2018/OrdinaryCreateFromConstructor.js"],"names":["GetIntrinsic","require","$TypeError","GetPrototypeFromConstructor","IsArray","ObjectCreate","module","exports","OrdinaryCreateFromConstructor","constructor","intrinsicDefaultProto","proto","slots","arguments","length"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AACA,IAAIC,UAAU,GAAGF,YAAY,CAAC,aAAD,CAA7B;;AAEA,IAAIG,2BAA2B,GAAGF,OAAO,CAAC,+BAAD,CAAzC;;AACA,IAAIG,OAAO,GAAGH,OAAO,CAAC,WAAD,CAArB;;AACA,IAAII,YAAY,GAAGJ,OAAO,CAAC,gBAAD,CAA1B,C,CAEA;;;AAEAK,MAAM,CAACC,OAAP,GAAiB,SAASC,6BAAT,CAAuCC,WAAvC,EAAoDC,qBAApD,EAA2E;AAC3FV,EAAAA,YAAY,CAACU,qBAAD,CAAZ,CAD2F,CACtD;;AACrC,MAAIC,KAAK,GAAGR,2BAA2B,CAACM,WAAD,EAAcC,qBAAd,CAAvC;AACA,MAAIE,KAAK,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,GAAuB,EAAvB,GAA4BD,SAAS,CAAC,CAAD,CAAjD;;AACA,MAAI,CAACT,OAAO,CAACQ,KAAD,CAAZ,EAAqB;AACpB,UAAM,IAAIV,UAAJ,CAAe,mEAAf,CAAN;AACA;;AACD,SAAOG,YAAY,CAACM,KAAD,EAAQC,KAAR,CAAnB;AACA,CARD","sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar GetPrototypeFromConstructor = require('./GetPrototypeFromConstructor');\nvar IsArray = require('./IsArray');\nvar ObjectCreate = require('./ObjectCreate');\n\n// https://ecma-international.org/ecma-262/6.0/#sec-ordinarycreatefromconstructor\n\nmodule.exports = function OrdinaryCreateFromConstructor(constructor, intrinsicDefaultProto) {\n\tGetIntrinsic(intrinsicDefaultProto); // throws if not a valid intrinsic\n\tvar proto = GetPrototypeFromConstructor(constructor, intrinsicDefaultProto);\n\tvar slots = arguments.length < 3 ? [] : arguments[2];\n\tif (!IsArray(slots)) {\n\t\tthrow new $TypeError('Assertion failed: if provided, `internalSlotsList` must be a List');\n\t}\n\treturn ObjectCreate(proto, slots);\n};\n"]},"metadata":{},"sourceType":"script"}