{"ast":null,"code":"var _jsxFileName = \"/Users/sumankaranjit/myProfile/resume/src/pages/Profile.js\";\n// import React, { createRef, useEffect } from \"react\";\n// const canvasRef = createRef();\n// function getImage(index) {\n//   return (\n//     // \"https://www.apple.com/105/media/us/airpods-pro/2019/1299e2f5_9206_4470_b28e_08307a42f19b/anim/sequence/large/01-hero-lightpass/\" +\n//     // index.toString().padStart(4, 0) +\n//     // \".jpg\"\n//     process.env.PUBLIC_URL + \"/img/img\" + index.toString() + \".png\"\n//   );\n// }\n// const updateImage = (imgObj, index, ctx) => {\n//   if (index === 0 || index === null) {\n//     index = 1;\n//   }\n//   imgObj.src = getImage(index);\n//   console.log(imgObj);\n//   ctx.drawImage(imgObj, 0, 0);\n// };\n// const getAllImg = async () => {\n//   var x = 0;\n//   while (x != 7) {\n//     x++;\n//     const imgObj = new Image();\n//     imgObj.src = await getImage(x);\n//   }\n// };\n// function Profile() {\n//   getAllImg();\n//   const updateCanvas = async () => {\n//     const canvas = canvasRef.current;\n//     const ctx = canvas.getContext(\"2d\");\n//     const frameCount = 7;\n//     var imageObj1 = document.getElementById(\"source\");\n//     canvas.width = imageObj1.width;\n//     canvas.height = imageObj1.height;\n//     const html = document.documentElement;\n//     const scrollTop = html.scrollTop;\n//     const maxScrollTop = html.scrollHeight - window.innerHeight;\n//     const scrollFraction = scrollTop / maxScrollTop;\n//     console.log(scrollTop, scrollFraction);\n//     const frameIndex = Math.min(\n//       frameCount - 1,\n//       Math.floor(scrollFraction * frameCount)\n//     );\n//     await updateImage(imageObj1, frameIndex + 1, ctx);\n//     console.log(frameIndex);\n//   };\n//   useEffect(() => {\n//     document.onscroll = async () => {\n//       await requestAnimationFrame(() => {\n//         updateCanvas();\n//       });\n//       return () => {\n//         //window.removeEventListener(onscroll);\n//         // cancelAnimationFrame();\n//       };\n//     };\n//   }, []);\n//   return (\n//     <canvas ref={canvasRef} style={{}}>\n//       <img id=\"source\" src=\"./../assets/img/0001.png\"></img>\n//     </canvas>\n//   );\n// }\n// export default Profile;\nimport { PromiseResolve } from \"es-abstract/es2018\";\nimport React, { Component, createRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst checkImage = path => new Promise(resolve => {\n  const img = new Image();\n\n  img.onload = () => resolve(path);\n\n  img.src = path;\n});\n\nclass Profile extends Component {\n  constructor() {\n    super();\n\n    this.updateImage = async (imgObj, index, ctx) => {\n      if (index === 0 || index === null) {\n        index = 1;\n      }\n\n      imgObj.src = await this.getImage(index);\n      console.log(imgObj);\n      ctx.drawImage(imgObj, 0, 0);\n    };\n\n    this.updateCanvas = async () => {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext(\"2d\");\n      const frameCount = 7;\n      var imageObj1 = document.getElementById(\"source\");\n      canvas.width = imageObj1.width;\n      canvas.height = imageObj1.height;\n      const html = document.documentElement;\n      const scrollTop = html.scrollTop;\n      const maxScrollTop = html.scrollHeight - window.innerHeight;\n      const scrollFraction = scrollTop / maxScrollTop;\n      console.log(scrollTop, scrollFraction);\n      const frameIndex = Math.min(frameCount - 1, Math.floor(scrollFraction * frameCount));\n      await updateImage(imageObj1, frameIndex + 1, ctx);\n      console.log(frameIndex);\n    };\n\n    this.getAllImg = async () => {\n      var x = 0;\n\n      while (x != 7) {\n        x++;\n        const imgObj = new Image();\n        imgObj.src = await this.getImage(x);\n      }\n    };\n\n    this.canvasRef = createRef;\n  }\n\n  getImage(index) {\n    // \"https://www.apple.com/105/media/us/airpods-pro/2019/1299e2f5_9206_4470_b28e_08307a42f19b/anim/sequence/large/01-hero-lightpass/\" +\n    // index.toString().padStart(4, 0) +\n    // \".jpg\"\n    const imgUrl = process.env.PUBLIC_URL + \"/img/img\" + index.toString() + \".png\";\n    const myPromise = checkImage(imgUrl);\n    myPromise.then(response => console.log(response)).catch(error => console.error(error));\n  }\n\n  render() {\n    this.getAllImg();\n    return /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: this.canvasRef,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"source\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Profile;","map":{"version":3,"sources":["/Users/sumankaranjit/myProfile/resume/src/pages/Profile.js"],"names":["PromiseResolve","React","Component","createRef","useEffect","checkImage","path","Promise","resolve","img","Image","onload","src","Profile","constructor","updateImage","imgObj","index","ctx","getImage","console","log","drawImage","updateCanvas","canvas","canvasRef","current","getContext","frameCount","imageObj1","document","getElementById","width","height","html","documentElement","scrollTop","maxScrollTop","scrollHeight","window","innerHeight","scrollFraction","frameIndex","Math","min","floor","getAllImg","x","imgUrl","process","env","PUBLIC_URL","toString","myPromise","then","response","catch","error","render"],"mappings":"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","sourcesContent":["// import React, { createRef, useEffect } from \"react\";\n// const canvasRef = createRef();\n// function getImage(index) {\n//   return (\n//     // \"https://www.apple.com/105/media/us/airpods-pro/2019/1299e2f5_9206_4470_b28e_08307a42f19b/anim/sequence/large/01-hero-lightpass/\" +\n//     // index.toString().padStart(4, 0) +\n//     // \".jpg\"\n//     process.env.PUBLIC_URL + \"/img/img\" + index.toString() + \".png\"\n//   );\n// }\n// const updateImage = (imgObj, index, ctx) => {\n//   if (index === 0 || index === null) {\n//     index = 1;\n//   }\n//   imgObj.src = getImage(index);\n//   console.log(imgObj);\n//   ctx.drawImage(imgObj, 0, 0);\n// };\n// const getAllImg = async () => {\n//   var x = 0;\n//   while (x != 7) {\n//     x++;\n//     const imgObj = new Image();\n\n//     imgObj.src = await getImage(x);\n//   }\n// };\n// function Profile() {\n//   getAllImg();\n//   const updateCanvas = async () => {\n//     const canvas = canvasRef.current;\n//     const ctx = canvas.getContext(\"2d\");\n//     const frameCount = 7;\n//     var imageObj1 = document.getElementById(\"source\");\n\n//     canvas.width = imageObj1.width;\n//     canvas.height = imageObj1.height;\n\n//     const html = document.documentElement;\n//     const scrollTop = html.scrollTop;\n//     const maxScrollTop = html.scrollHeight - window.innerHeight;\n//     const scrollFraction = scrollTop / maxScrollTop;\n//     console.log(scrollTop, scrollFraction);\n//     const frameIndex = Math.min(\n//       frameCount - 1,\n//       Math.floor(scrollFraction * frameCount)\n//     );\n\n//     await updateImage(imageObj1, frameIndex + 1, ctx);\n\n//     console.log(frameIndex);\n//   };\n\n//   useEffect(() => {\n//     document.onscroll = async () => {\n//       await requestAnimationFrame(() => {\n//         updateCanvas();\n//       });\n\n//       return () => {\n//         //window.removeEventListener(onscroll);\n//         // cancelAnimationFrame();\n//       };\n//     };\n//   }, []);\n\n//   return (\n//     <canvas ref={canvasRef} style={{}}>\n//       <img id=\"source\" src=\"./../assets/img/0001.png\"></img>\n//     </canvas>\n//   );\n// }\n\n// export default Profile;\nimport { PromiseResolve } from \"es-abstract/es2018\";\nimport React, { Component, createRef, useEffect } from \"react\";\nconst checkImage = (path) =>\n  new Promise((resolve) => {\n    const img = new Image();\n    img.onload = () => resolve(path);\n\n    img.src = path;\n  });\n\nclass Profile extends Component {\n  constructor() {\n    super();\n    this.canvasRef = createRef;\n  }\n  getImage(index) {\n    // \"https://www.apple.com/105/media/us/airpods-pro/2019/1299e2f5_9206_4470_b28e_08307a42f19b/anim/sequence/large/01-hero-lightpass/\" +\n    // index.toString().padStart(4, 0) +\n    // \".jpg\"\n    const imgUrl =\n      process.env.PUBLIC_URL + \"/img/img\" + index.toString() + \".png\";\n    const myPromise = checkImage(imgUrl);\n    myPromise\n      .then((response) => console.log(response))\n      .catch((error) => console.error(error));\n  }\n\n  updateImage = async (imgObj, index, ctx) => {\n    if (index === 0 || index === null) {\n      index = 1;\n    }\n    imgObj.src = await this.getImage(index);\n    console.log(imgObj);\n    ctx.drawImage(imgObj, 0, 0);\n  };\n  updateCanvas = async () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const frameCount = 7;\n    var imageObj1 = document.getElementById(\"source\");\n\n    canvas.width = imageObj1.width;\n    canvas.height = imageObj1.height;\n\n    const html = document.documentElement;\n    const scrollTop = html.scrollTop;\n    const maxScrollTop = html.scrollHeight - window.innerHeight;\n    const scrollFraction = scrollTop / maxScrollTop;\n    console.log(scrollTop, scrollFraction);\n    const frameIndex = Math.min(\n      frameCount - 1,\n      Math.floor(scrollFraction * frameCount)\n    );\n\n    await updateImage(imageObj1, frameIndex + 1, ctx);\n\n    console.log(frameIndex);\n  };\n\n  getAllImg = async () => {\n    var x = 0;\n    while (x != 7) {\n      x++;\n      const imgObj = new Image();\n\n      imgObj.src = await this.getImage(x);\n    }\n  };\n  render() {\n    this.getAllImg();\n\n    return (\n      <canvas ref={this.canvasRef}>\n        <img id=\"source\" />\n      </canvas>\n    );\n  }\n}\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}