{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar $isNaN = require('../helpers/isNaN');\n\nvar padTimeComponent = require('../helpers/padTimeComponent');\n\nvar HourFromTime = require('./HourFromTime');\n\nvar MinFromTime = require('./MinFromTime');\n\nvar SecFromTime = require('./SecFromTime');\n\nvar Type = require('./Type'); // https://262.ecma-international.org/9.0/#sec-timestring\n\n\nmodule.exports = function TimeString(tv) {\n  if (Type(tv) !== 'Number' || $isNaN(tv)) {\n    throw new $TypeError('Assertion failed: `tv` must be a non-NaN Number');\n  }\n\n  var hour = HourFromTime(tv);\n  var minute = MinFromTime(tv);\n  var second = SecFromTime(tv);\n  return padTimeComponent(hour) + ':' + padTimeComponent(minute) + ':' + padTimeComponent(second) + '\\x20GMT';\n};","map":{"version":3,"sources":["/Users/sumankaranjit/myProfile/resume/node_modules/es-abstract/2018/TimeString.js"],"names":["GetIntrinsic","require","$TypeError","$isNaN","padTimeComponent","HourFromTime","MinFromTime","SecFromTime","Type","module","exports","TimeString","tv","hour","minute","second"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AAEA,IAAIC,UAAU,GAAGF,YAAY,CAAC,aAAD,CAA7B;;AAEA,IAAIG,MAAM,GAAGF,OAAO,CAAC,kBAAD,CAApB;;AACA,IAAIG,gBAAgB,GAAGH,OAAO,CAAC,6BAAD,CAA9B;;AAEA,IAAII,YAAY,GAAGJ,OAAO,CAAC,gBAAD,CAA1B;;AACA,IAAIK,WAAW,GAAGL,OAAO,CAAC,eAAD,CAAzB;;AACA,IAAIM,WAAW,GAAGN,OAAO,CAAC,eAAD,CAAzB;;AACA,IAAIO,IAAI,GAAGP,OAAO,CAAC,QAAD,CAAlB,C,CAEA;;;AAEAQ,MAAM,CAACC,OAAP,GAAiB,SAASC,UAAT,CAAoBC,EAApB,EAAwB;AACxC,MAAIJ,IAAI,CAACI,EAAD,CAAJ,KAAa,QAAb,IAAyBT,MAAM,CAACS,EAAD,CAAnC,EAAyC;AACxC,UAAM,IAAIV,UAAJ,CAAe,iDAAf,CAAN;AACA;;AACD,MAAIW,IAAI,GAAGR,YAAY,CAACO,EAAD,CAAvB;AACA,MAAIE,MAAM,GAAGR,WAAW,CAACM,EAAD,CAAxB;AACA,MAAIG,MAAM,GAAGR,WAAW,CAACK,EAAD,CAAxB;AACA,SAAOR,gBAAgB,CAACS,IAAD,CAAhB,GAAyB,GAAzB,GAA+BT,gBAAgB,CAACU,MAAD,CAA/C,GAA0D,GAA1D,GAAgEV,gBAAgB,CAACW,MAAD,CAAhF,GAA2F,SAAlG;AACA,CARD","sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar $isNaN = require('../helpers/isNaN');\nvar padTimeComponent = require('../helpers/padTimeComponent');\n\nvar HourFromTime = require('./HourFromTime');\nvar MinFromTime = require('./MinFromTime');\nvar SecFromTime = require('./SecFromTime');\nvar Type = require('./Type');\n\n// https://262.ecma-international.org/9.0/#sec-timestring\n\nmodule.exports = function TimeString(tv) {\n\tif (Type(tv) !== 'Number' || $isNaN(tv)) {\n\t\tthrow new $TypeError('Assertion failed: `tv` must be a non-NaN Number');\n\t}\n\tvar hour = HourFromTime(tv);\n\tvar minute = MinFromTime(tv);\n\tvar second = SecFromTime(tv);\n\treturn padTimeComponent(hour) + ':' + padTimeComponent(minute) + ':' + padTimeComponent(second) + '\\x20GMT';\n};\n"]},"metadata":{},"sourceType":"script"}