{"ast":null,"code":"import React, { useState, useEffect, Component } from \"react\";\nimport axios from \"axios\";\nimport { motion, motionValue, useTransform, useViewportScroll } from \"framer-motion\";\n\nclass Contact extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: {},\n      errors: {}\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  validateEmail(emailAddress) {}\n\n} // export default () => {\n//   const [status, setStatus] = useState({\n//     submitted: false,\n//     submitting: false,\n//     info: { error: false, msg: null },\n//   });\n//   const [inputs, setInputs] = useState({\n//     email: \"\",\n//     message: \"\",\n//   });\n//   const handleServerResponse = (ok, msg) => {\n//     if (ok) {\n//       setStatus({\n//         submitted: true,\n//         submitting: false,\n//         info: { error: false, msg: msg },\n//       });\n//       setInputs({\n//         email: \"\",\n//         message: \"\",\n//       });\n//     } else {\n//       setStatus({\n//         info: { error: true, msg: msg },\n//       });\n//     }\n//   };\n//   const handleOnChange = (e) => {\n//     e.persist();\n//     setInputs((prev) => ({\n//       ...prev,\n//       [e.target.id]: e.target.value,\n//     }));\n//     setStatus({\n//       submitted: false,\n//       submitting: false,\n//       info: { error: false, msg: null },\n//     });\n//   };\n//   const handleOnSubmit = (e) => {\n//     e.preventDefault();\n//     setStatus((prevStatus) => ({ ...prevStatus, submitting: true }));\n//     axios({\n//       method: \"POST\",\n//       url: \"https://formspree.io/f/xwkaqqeg\",\n//       data: inputs,\n//     })\n//       .then((response) => {\n//         handleServerResponse(\n//           true,\n//           \"Thank you, your message has been submitted.\"\n//         );\n//       })\n//       .catch((error) => {\n//         handleServerResponse(false, error.response.data.error);\n//       });\n//   };\n//   return (\n//     <main className=\"container \" style={{ marginTop: \"10vh\" }}>\n//       <h1>Connect With Me </h1>\n//       <p style={{ fontFamily: \"cursive\", fontSize: \"20px\" }}>\n//         {\" \"}\n//         Send me a message and I will get back to you as soon as possible.\n//       </p>\n//       <hr />\n//       <form onSubmit={handleOnSubmit}>\n//         <motion.div\n//           animate={{ scale: [0, 0.4, 0.8, 1] }}\n//           transition={{ times: [0, 0.1, 0.1, 1] }}\n//           className=\"form-group\"\n//         >\n//           <div class=\"col-sm-offset-2 col-sm-10\">\n//             <label\n//               for=\"name\"\n//               style={{\n//                 fontFamily: \"fantasy\",\n//               }}\n//             >\n//               Name\n//             </label>\n//             <input\n//               className=\"form-control\"\n//               id=\"name\"\n//               type=\"text\"\n//               name=\"_name\"\n//               onChange={handleOnChange}\n//               required\n//               value={inputs.name}\n//               width=\"20%\"\n//             />\n//           </div>\n//         </motion.div>\n//         <motion.div\n//           animate={{ scale: [0, 0.4, 0.8, 1] }}\n//           transition={{ times: [0, 0.1, 0.1, 1] }}\n//           class=\"form-group\"\n//         >\n//           <div class=\"col-sm-offset-2 col-sm-10\">\n//             <label\n//               style={{\n//                 fontFamily: \"fantasy\",\n//               }}\n//               htmlFor=\"email\"\n//             >\n//               Email\n//             </label>\n//             <input\n//               className=\"form-control\"\n//               id=\"email\"\n//               type=\"email\"\n//               name=\"_replyto\"\n//               onChange={handleOnChange}\n//               required\n//               value={inputs.email}\n//             />\n//           </div>\n//         </motion.div>\n//         <motion.div\n//           animate={{ scale: [0, 0.4, 0.8, 1] }}\n//           transition={{ times: [0, 0.1, 0.1, 1] }}\n//           class=\"form-group\"\n//         >\n//           <div class=\"col-sm-offset-2 col-sm-10\">\n//             <label\n//               style={{\n//                 fontFamily: \"fantasy\",\n//               }}\n//               htmlFor=\"message\"\n//             >\n//               Message\n//             </label>\n//             <textarea\n//               className=\"form-control\"\n//               id=\"message\"\n//               name=\"message\"\n//               onChange={handleOnChange}\n//               required\n//               value={inputs.message}\n//             />\n//           </div>\n//         </motion.div>\n//         <motion.div\n//           animate={{ scale: [0, 0.4, 0.8, 1] }}\n//           transition={{ times: [0, 0.1, 0.1, 1] }}\n//           class=\"form-group\"\n//         >\n//           <div\n//             class=\"col-sm-offset-2 col-sm-10\"\n//             style={{ alignContent: \"end\" }}\n//           >\n//             <motion.button\n//               whileHover={{ scale: 1.2 }}\n//               whileFocus={{ scale: 2 }}\n//               type=\"submit\"\n//               className=\"btn btn-secondary\"\n//               disabled={status.submitting}\n//               style={{\n//                 fontFamily: \"fantasy\",\n//                 marginTop: \"10px\",\n//               }}\n//             >\n//               {!status.submitting\n//                 ? !status.submitted\n//                   ? \"Submit\"\n//                   : \"Submitted\"\n//                 : \"Submitting...\"}\n//             </motion.button>\n//           </div>\n//         </motion.div>\n//       </form>\n//       {status.info.error && (\n//         <motion.div animate={{ scale: [0, 5] }} className=\"error\">\n//           Error: {status.info.msg}\n//         </motion.div>\n//       )}\n//       {!status.info.error && status.info.msg && <p>{status.info.msg}</p>}\n//     </main>\n//   );\n// };","map":{"version":3,"sources":["/Users/sumankaranjit/myProfile/resume/src/pages/Contact.js"],"names":["React","useState","useEffect","Component","axios","motion","motionValue","useTransform","useViewportScroll","Contact","constructor","props","state","input","errors","handleChange","bind","handleSubmit","validateEmail","emailAddress"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,MADF,EAEEC,WAFF,EAGEC,YAHF,EAIEC,iBAJF,QAKO,eALP;;AAOA,MAAMC,OAAN,SAAsBN,SAAtB,CAAgC;AAC9BO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,MAAM,EAAE;AAFG,KAAb;AAKA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AACDE,EAAAA,aAAa,CAACC,YAAD,EAAe,CAAE;;AAXA,C,CAahsourcesContent":["import React, { useState, useEffect, Component } from \"react\";\nimport axios from \"axios\";\nimport {\n  motion,\n  motionValue,\n  useTransform,\n  useViewportScroll,\n} from \"framer-motion\";\n\nclass Contact extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: {},\n      errors: {},\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  validateEmail(emailAddress) {}\n}\n// export default () => {\n//   const [status, setStatus] = useState({\n//     submitted: false,\n//     submitting: false,\n//     info: { error: false, msg: null },\n//   });\n//   const [inputs, setInputs] = useState({\n//     email: \"\",\n//     message: \"\",\n//   });\n//   const handleServerResponse = (ok, msg) => {\n//     if (ok) {\n//       setStatus({\n//         submitted: true,\n//         submitting: false,\n//         info: { error: false, msg: msg },\n//       });\n//       setInputs({\n//         email: \"\",\n//         message: \"\",\n//       });\n//     } else {\n//       setStatus({\n//         info: { error: true, msg: msg },\n//       });\n//     }\n//   };\n//   const handleOnChange = (e) => {\n//     e.persist();\n//     setInputs((prev) => ({\n//       ...prev,\n//       [e.target.id]: e.target.value,\n//     }));\n//     setStatus({\n//       submitted: false,\n//       submitting: false,\n//       info: { error: false, msg: null },\n//     });\n//   };\n//   const handleOnSubmit = (e) => {\n//     e.preventDefault();\n//     setStatus((prevStatus) => ({ ...prevStatus, submitting: true }));\n//     axios({\n//       method: \"POST\",\n//       url: \"https://formspree.io/f/xwkaqqeg\",\n//       data: inputs,\n//     })\n//       .then((response) => {\n//         handleServerResponse(\n//           true,\n//           \"Thank you, your message has been submitted.\"\n//         );\n//       })\n//       .catch((error) => {\n//         handleServerResponse(false, error.response.data.error);\n//       });\n//   };\n//   return (\n//     <main className=\"container \" style={{ marginTop: \"10vh\" }}>\n//       <h1>Connect With Me </h1>\n//       <p style={{ fontFamily: \"cursive\", fontSize: \"20px\" }}>\n//         {\" \"}\n//         Send me a message and I will get back to you as soon as possible.\n//       </p>\n//       <hr />\n//       <form onSubmit={handleOnSubmit}>\n//         <motion.div\n//           animate={{ scale: [0, 0.4, 0.8, 1] }}\n//           transition={{ times: [0, 0.1, 0.1, 1] }}\n//           className=\"form-group\"\n//         >\n//           <div class=\"col-sm-offset-2 col-sm-10\">\n//             <label\n//               for=\"name\"\n//               style={{\n//                 fontFamily: \"fantasy\",\n//               }}\n//             >\n//               Name\n//             </label>\n//             <input\n//               className=\"form-control\"\n//               id=\"name\"\n//               type=\"text\"\n//               name=\"_name\"\n//               onChange={handleOnChange}\n//               required\n//               value={inputs.name}\n//               width=\"20%\"\n//             />\n//           </div>\n//         </motion.div>\n//         <motion.div\n//           animate={{ scale: [0, 0.4, 0.8, 1] }}\n//           transition={{ times: [0, 0.1, 0.1, 1] }}\n//           class=\"form-group\"\n//         >\n//           <div class=\"col-sm-offset-2 col-sm-10\">\n//             <label\n//               style={{\n//                 fontFamily: \"fantasy\",\n//               }}\n//               htmlFor=\"email\"\n//             >\n//               Email\n//             </label>\n//             <input\n//               className=\"form-control\"\n//               id=\"email\"\n//               type=\"email\"\n//               name=\"_replyto\"\n//               onChange={handleOnChange}\n//               required\n//               value={inputs.email}\n//             />\n//           </div>\n//         </motion.div>\n//         <motion.div\n//           animate={{ scale: [0, 0.4, 0.8, 1] }}\n//           transition={{ times: [0, 0.1, 0.1, 1] }}\n//           class=\"form-group\"\n//         >\n//           <div class=\"col-sm-offset-2 col-sm-10\">\n//             <label\n//               style={{\n//                 fontFamily: \"fantasy\",\n//               }}\n//               htmlFor=\"message\"\n//             >\n//               Message\n//             </label>\n//             <textarea\n//               className=\"form-control\"\n//               id=\"message\"\n//               name=\"message\"\n//               onChange={handleOnChange}\n//               required\n//               value={inputs.message}\n//             />\n//           </div>\n//         </motion.div>\n//         <motion.div\n//           animate={{ scale: [0, 0.4, 0.8, 1] }}\n//           transition={{ times: [0, 0.1, 0.1, 1] }}\n//           class=\"form-group\"\n//         >\n//           <div\n//             class=\"col-sm-offset-2 col-sm-10\"\n//             style={{ alignContent: \"end\" }}\n//           >\n//             <motion.button\n//               whileHover={{ scale: 1.2 }}\n//               whileFocus={{ scale: 2 }}\n//               type=\"submit\"\n//               className=\"btn btn-secondary\"\n//               disabled={status.submitting}\n//               style={{\n//                 fontFamily: \"fantasy\",\n//                 marginTop: \"10px\",\n//               }}\n//             >\n//               {!status.submitting\n//                 ? !status.submitted\n//                   ? \"Submit\"\n//                   : \"Submitted\"\n//                 : \"Submitting...\"}\n//             </motion.button>\n//           </div>\n//         </motion.div>\n//       </form>\n\n//       {status.info.error && (\n//         <motion.div animate={{ scale: [0, 5] }} className=\"error\">\n//           Error: {status.info.msg}\n//         </motion.div>\n//       )}\n//       {!status.info.error && status.info.msg && <p>{status.info.msg}</p>}\n//     </main>\n//   );\n// };\n"]},"metadata":{},"sourceType":"module"}