{"ast":null,"code":"var _jsxFileName = \"/Users/sumankaranjit/myProfile/resume/src/pages/Profile.js\",\n    _s = $RefreshSig$();\n\nimport { request } from \"dom-helpers/cjs/animationFrame\";\nimport React, { Component, createRef, ReactPropTypes, useLayoutEffect } from \"react\";\nimport Canvas from \"./../components/canvas\";\nimport ReactDOM from \"react-dom\";\nimport { WindowsBalloon } from \"node-notifier\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst canvasRef = /*#__PURE__*/createRef();\n\nfunction getImage(index) {\n  return \"https://www.apple.com/105/media/us/airpods-pro/2019/1299e2f5_9206_4470_b28e_08307a42f19b/anim/sequence/large/01-hero-lightpass/000\" + index + \".jpg\";\n}\n\nfunction updateImage(imgObj, index, ctx) {\n  imgObj.src = getImage(index);\n  ctx.drawImage(imgObj, 0, 20);\n}\n\nfunction updateCanvas() {\n  const canvas = canvasRef.current;\n  const html = document.documentElement;\n  const frameCount = 147;\n  canvas.width = 1158;\n  canvas.height = 770;\n  const ctx = canvas.getContext(\"2d\");\n  var imageObj1 = new Image();\n  imageObj1.src = getImage(1);\n\n  imageObj1.onload = function () {\n    ctx.drawImage(imageObj1, 0, 0);\n  };\n\n  console.log(html.scrollTop, html.scrollHeight, window.innerHeight);\n  const scrollTop = html.scrollTop;\n  const maxScrollTop = html.scrollHeight - window.innerHeight;\n  const scrollFraction = scrollTop / maxScrollTop;\n  const frameIndex = Math.min(frameCount - 1, Math.floor(scrollFraction * frameCount));\n  updateImage(imageObj1, frameIndex + 1, ctx);\n  console.log(scrollTop, maxScrollTop, frameIndex); // this.updateImage(imageObj1, frameIndex + 1, ctx);\n  // imageObj1.onload = function () {\n  //   ctx.drawImage(imageObj1, 20, 20);\n  // };\n  // window.addEventListener(\"scroll\", () => {\n  //   const scrollTop = html.scrollTop;\n  //   const maxScrollTop = html.scrollHeight - window.innerHeight;\n  //   const scrollFraction = scrollTop / maxScrollTop;\n  //   const frameIndex = Math.min(\n  //     frameCount - 1,\n  //     Math.floor(scrollFraction * frameCount)\n  //   );\n  //   console.log(maxScrollTop);\n  // });\n}\n\nfunction Profile() {\n  _s();\n\n  useLayoutEffect(() => {\n    window.addEventListener(\"scroll\", updateCanvas());\n  }); //   const draw = (ctx, frameCount) => {\n  // const html = document.documentElement;\n  // const canvas = document.createElement(\"canvas\");\n  // const ctx = canvas.id(\"profile\");\n  // const context = canvas.getContext(\"2d\");\n  // canvas.width = 1158;\n  // canvas.height =1000;\n  // // canvas.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n  // // ctx.beginPath();\n  // // ctx.fill();\n  // const img = new Image();\n  // img.src = currentFrame(1);\n  // img.onload = function () {\n  //   context.drawImage(img, 0, 0);\n  // };\n  // const updateImage = (index) => {\n  //   img.src = currentFrame(index);\n  //   ctx.drawImage(img, 0, 0);\n  // };\n  //   requestAnimationFrame(() => updateImage(frameCount + 1));\n  //   console.log(maxScrollTop);\n  // });\n  //};\n\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Profile, \"n7/vCynhJvM+pLkyL2DMQUF0odM=\");\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/sumankaranjit/myProfile/resume/src/pages/Profile.js"],"names":["request","React","Component","createRef","ReactPropTypes","useLayoutEffect","Canvas","ReactDOM","WindowsBalloon","canvasRef","getImage","index","updateImage","imgObj","ctx","src","drawImage","updateCanvas","canvas","current","html","document","documentElement","frameCount","width","height","getContext","imageObj1","Image","onload","console","log","scrollTop","scrollHeight","window","innerHeight","maxScrollTop","scrollFraction","frameIndex","Math","min","floor","Profile","addEventListener"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,gCAAxB;AACA,OAAOC,KAAP,IACEC,SADF,EAEEC,SAFF,EAGEC,cAHF,EAIEC,eAJF,QAKO,OALP;AAMA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,cAAT,QAA+B,eAA/B;;AAEA,MAAMC,SAAS,gBAAGN,SAAS,EAA3B;;AACA,SAASO,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,SACE,uIACAA,KADA,GAEA,MAHF;AAKD;;AACD,SAASC,WAAT,CAAqBC,MAArB,EAA6BF,KAA7B,EAAoCG,GAApC,EAAyC;AACvCD,EAAAA,MAAM,CAACE,GAAP,GAAaL,QAAQ,CAACC,KAAD,CAArB;AACAG,EAAAA,GAAG,CAACE,SAAJ,CAAcH,MAAd,EAAsB,CAAtB,EAAyB,EAAzB;AACD;;AACD,SAASI,YAAT,GAAwB;AACtB,QAAMC,MAAM,GAAGT,SAAS,CAACU,OAAzB;AACA,QAAMC,IAAI,GAAGC,QAAQ,CAACC,eAAtB;AACA,QAAMC,UAAU,GAAG,GAAnB;AACAL,EAAAA,MAAM,CAACM,KAAP,GAAe,IAAf;AACAN,EAAAA,MAAM,CAACO,MAAP,GAAgB,GAAhB;AACA,QAAMX,GAAG,GAAGI,MAAM,CAACQ,UAAP,CAAkB,IAAlB,CAAZ;AACA,MAAIC,SAAS,GAAG,IAAIC,KAAJ,EAAhB;AACAD,EAAAA,SAAS,CAACZ,GAAV,GAAgBL,QAAQ,CAAC,CAAD,CAAxB;;AACAiB,EAAAA,SAAS,CAACE,MAAV,GAAmB,YAAY;AAC7Bf,IAAAA,GAAG,CAACE,SAAJ,CAAcW,SAAd,EAAyB,CAAzB,EAA4B,CAA5B;AACD,GAFD;;AAGAG,EAAAA,OAAO,CAACC,GAAR,CAAYX,IAAI,CAACY,SAAjB,EAA4BZ,IAAI,CAACa,YAAjC,EAA+CC,MAAM,CAACC,WAAtD;AACA,QAAMH,SAAS,GAAGZ,IAAI,CAACY,SAAvB;AACA,QAAMI,YAAY,GAAGhB,IAAI,CAACa,YAAL,GAAoBC,MAAM,CAACC,WAAhD;AACA,QAAME,cAAc,GAAGL,SAAS,GAAGI,YAAnC;AACA,QAAME,UAAU,GAAGC,IAAI,CAACC,GAAL,CACjBjB,UAAU,GAAG,CADI,EAEjBgB,IAAI,CAACE,KAAL,CAAWJ,cAAc,GAAGd,UAA5B,CAFiB,CAAnB;AAKAX,EAAAA,WAAW,CAACe,SAAD,EAAYW,UAAU,GAAG,CAAzB,EAA4BxB,GAA5B,CAAX;AAEAgB,EAAAA,OAAO,CAACC,GAAR,CAAYC,SAAZ,EAAuBI,YAAvB,EAAqCE,UAArC,EAvBsB,CAwBtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACD;;AACD,SAASI,OAAT,GAAmB;AAAA;;AACjBrC,EAAAA,eAAe,CAAC,MAAM;AACpB6B,IAAAA,MAAM,CAACS,gBAAP,CAAwB,QAAxB,EAAkC1B,YAAY,EAA9C;AACD,GAFc,CAAf,CADiB,CAKjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,sBAAO;AAAQ,IAAA,GAAG,EAAER;AAAb;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAhCQiC,O;;KAAAA,O;AAkCT,eAAeA,OAAf","sourcesContent":["import { request } from \"dom-helpers/cjs/animationFrame\";\nimport React, {\n  Component,\n  createRef,\n  ReactPropTypes,\n  useLayoutEffect,\n} from \"react\";\nimport Canvas from \"./../components/canvas\";\nimport ReactDOM from \"react-dom\";\nimport { WindowsBalloon } from \"node-notifier\";\n\nconst canvasRef = createRef();\nfunction getImage(index) {\n  return (\n    \"https://www.apple.com/105/media/us/airpods-pro/2019/1299e2f5_9206_4470_b28e_08307a42f19b/anim/sequence/large/01-hero-lightpass/000\" +\n    index +\n    \".jpg\"\n  );\n}\nfunction updateImage(imgObj, index, ctx) {\n  imgObj.src = getImage(index);\n  ctx.drawImage(imgObj, 0, 20);\n}\nfunction updateCanvas() {\n  const canvas = canvasRef.current;\n  const html = document.documentElement;\n  const frameCount = 147;\n  canvas.width = 1158;\n  canvas.height = 770;\n  const ctx = canvas.getContext(\"2d\");\n  var imageObj1 = new Image();\n  imageObj1.src = getImage(1);\n  imageObj1.onload = function () {\n    ctx.drawImage(imageObj1, 0, 0);\n  };\n  console.log(html.scrollTop, html.scrollHeight, window.innerHeight);\n  const scrollTop = html.scrollTop;\n  const maxScrollTop = html.scrollHeight - window.innerHeight;\n  const scrollFraction = scrollTop / maxScrollTop;\n  const frameIndex = Math.min(\n    frameCount - 1,\n    Math.floor(scrollFraction * frameCount)\n  );\n\n  updateImage(imageObj1, frameIndex + 1, ctx);\n\n  console.log(scrollTop, maxScrollTop, frameIndex);\n  // this.updateImage(imageObj1, frameIndex + 1, ctx);\n\n  // imageObj1.onload = function () {\n  //   ctx.drawImage(imageObj1, 20, 20);\n  // };\n  // window.addEventListener(\"scroll\", () => {\n  //   const scrollTop = html.scrollTop;\n  //   const maxScrollTop = html.scrollHeight - window.innerHeight;\n  //   const scrollFraction = scrollTop / maxScrollTop;\n  //   const frameIndex = Math.min(\n  //     frameCount - 1,\n  //     Math.floor(scrollFraction * frameCount)\n  //   );\n\n  //   console.log(maxScrollTop);\n  // });\n}\nfunction Profile() {\n  useLayoutEffect(() => {\n    window.addEventListener(\"scroll\", updateCanvas());\n  });\n\n  //   const draw = (ctx, frameCount) => {\n\n  // const html = document.documentElement;\n  // const canvas = document.createElement(\"canvas\");\n  // const ctx = canvas.id(\"profile\");\n  // const context = canvas.getContext(\"2d\");\n  // canvas.width = 1158;\n  // canvas.height =1000;\n  // // canvas.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n  // // ctx.beginPath();\n  // // ctx.fill();\n  // const img = new Image();\n  // img.src = currentFrame(1);\n  // img.onload = function () {\n  //   context.drawImage(img, 0, 0);\n  // };\n  // const updateImage = (index) => {\n  //   img.src = currentFrame(index);\n  //   ctx.drawImage(img, 0, 0);\n  // };\n\n  //   requestAnimationFrame(() => updateImage(frameCount + 1));\n  //   console.log(maxScrollTop);\n  // });\n  //};\n\n  return <canvas ref={canvasRef}></canvas>;\n}\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}