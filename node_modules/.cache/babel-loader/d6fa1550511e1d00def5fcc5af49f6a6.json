{"ast":null,"code":"var _jsxFileName = \"/Users/sumankaranjit/myProfile/resume/src/pages/Profile.js\";\n// import React, { createRef, useEffect } from \"react\";\n// const canvasRef = createRef();\n// function getImage(index) {\n//   return (\n//     // \"https://www.apple.com/105/media/us/airpods-pro/2019/1299e2f5_9206_4470_b28e_08307a42f19b/anim/sequence/large/01-hero-lightpass/\" +\n//     // index.toString().padStart(4, 0) +\n//     // \".jpg\"\n//     process.env.PUBLIC_URL + \"/img/img\" + index.toString() + \".png\"\n//   );\n// }\n// const updateImage = (imgObj, index, ctx) => {\n//   if (index === 0 || index === null) {\n//     index = 1;\n//   }\n//   imgObj.src = getImage(index);\n//   console.log(imgObj);\n//   ctx.drawImage(imgObj, 0, 0);\n// };\n// const getAllImg = async () => {\n//   var x = 0;\n//   while (x != 7) {\n//     x++;\n//     const imgObj = new Image();\n//     imgObj.src = await getImage(x);\n//   }\n// };\n// function Profile() {\n//   getAllImg();\n//   const updateCanvas = async () => {\n//     const canvas = canvasRef.current;\n//     const ctx = canvas.getContext(\"2d\");\n//     const frameCount = 7;\n//     var imageObj1 = document.getElementById(\"source\");\n//     canvas.width = imageObj1.width;\n//     canvas.height = imageObj1.height;\n//     const html = document.documentElement;\n//     const scrollTop = html.scrollTop;\n//     const maxScrollTop = html.scrollHeight - window.innerHeight;\n//     const scrollFraction = scrollTop / maxScrollTop;\n//     console.log(scrollTop, scrollFraction);\n//     const frameIndex = Math.min(\n//       frameCount - 1,\n//       Math.floor(scrollFraction * frameCount)\n//     );\n//     await updateImage(imageObj1, frameIndex + 1, ctx);\n//     console.log(frameIndex);\n//   };\n//   useEffect(() => {\n//     document.onscroll = async () => {\n//       await requestAnimationFrame(() => {\n//         updateCanvas();\n//       });\n//       return () => {\n//         //window.removeEventListener(onscroll);\n//         // cancelAnimationFrame();\n//       };\n//     };\n//   }, []);\n//   return (\n//     <canvas ref={canvasRef} style={{}}>\n//       <img id=\"source\" src=\"./../assets/img/0001.png\"></img>\n//     </canvas>\n//   );\n// }\n// export default Profile;\nimport React, { Component, createRef } from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport { findAllInRenderedTree } from \"react-dom/test-utils\";\nimport { ReactDOM } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cache = {};\n\nfunction importAll(r) {\n  r.keys().forEach(key => cache[key] = r(key));\n} // Note from the docs -> Warning: The arguments passed to require.context must be literals!\n\n\nimportAll(require.context(\"./../assets/img/\", false, /\\.(png|jpe?g|svg)$/));\nconst images = Object.entries(cache).map(module => module[1].default);\n\nconst checkImage = path => new Promise(resolve => {\n  const img = new Image();\n  img.src = path;\n\n  img.onload = () => resolve(path);\n});\n\nclass Profile extends Component {\n  constructor() {\n    super();\n\n    this.updateImage = index => {\n      if (index === 0 || index === null) {\n        index = 1;\n      }\n\n      const imgObj = this.getImage(index);\n\n      imgObj.onload = () => this.drawImage(imgObj);\n    };\n\n    this.getAllImg = async () => {\n      var x = 0;\n\n      while (x !== 179) {\n        x++;\n        var imgObj = new Image();\n        imgObj = await this.getImage(x);\n      }\n    };\n\n    this.canvasRef = /*#__PURE__*/createRef();\n    this.canvas = document.createElement(\"canvas\", {\n      refs: this.canvasRef.current\n    });\n    this.ctx = this.canvas.getContext(\"2d\");\n  }\n\n  getImage(index) {\n    // const imgUrl =\n    //   // \"https://www.apple.com/105/media/us/airpods-pro/2019/1299e2f5_9206_4470_b28e_08307a42f19b/anim/sequence/large/01-hero-lightpass/\" +\n    //   // index.toString().padStart(4, 0) +\n    //   // \".jpg\";\n    //   // process.env.PUBLIC_URL +\n    //   { img } + index.toString().padStart(5, 0) + \".jpeg\";\n    // const imgObj = new Image();\n    // const myPromise = checkImage(imgUrl);\n    // myPromise\n    //   .then((response) => {\n    //     imgObj.src = imgUrl;\n    //     console.log(\"resolved\");\n    //   })\n    //   .catch((error) => console.error(error));\n    const imgObj = images.map(image => /*#__PURE__*/_jsxDEV(\"img\", {\n      style: {\n        width: 100\n      },\n      src: image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this));\n    return imgOb[index];\n  }\n\n  showImage(canvas) {\n    var imgO = new Image();\n    imgO = this.getImage(1);\n\n    imgO.onload = () => this.drawImage(imgO);\n  }\n\n  showNone() {\n    const canvas = this.canvasRef.current;\n    canvas.width = 0;\n    canvas.height = 0;\n  }\n\n  drawImage(img) {\n    // Use the intrinsic size of image in CSS pixels for the canvas element\n    // Will draw the image as 300x227, ignoring the custom size of 60x45\n    // given in the constructor\n    this.ctx.drawImage(img, 0, 0); // To use the custom size we'll have to specify the scale parameters\n    // using the element's width and height properties - lets draw one\n    // on top in the corner:\n  }\n\n  updateCanvas(canvas) {\n    const frameCount = 179;\n    const html = document.documentElement;\n    const scrollTop = html.scrollTop;\n    const maxScrollTop = html.scrollHeight - window.innerHeight;\n    const scrollFraction = scrollTop / maxScrollTop;\n    this.frameIndex = Math.min(frameCount - 1, Math.floor(scrollFraction * frameCount));\n    this.updateImage(this.frameIndex + 1);\n    console.log(this.frameIndex);\n  }\n\n  componentDidMount() {\n    this.canvas.width = \"1158\";\n    this.canvas.height = \"770\";\n    document.getElementById(\"canvas-wrapper\").insertAdjacentElement(\"afterbegin\", this.canvas);\n    console.log(this.canvas);\n    this.showImage(this.canvas);\n\n    document.onscroll = () => {\n      document.getElementById(\"canvas-wrapper\").insertAdjacentElement(\"afterbegin\", this.canvas);\n      requestAnimationFrame(() => {\n        this.updateCanvas(this.canvas);\n      });\n    };\n  }\n\n  componentWillUnmount() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      id: \"canvas-wrapper\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default Profile;","map":{"version":3,"sources":["/Users/sumankaranjit/myProfile/resume/src/pages/Profile.js"],"names":["React","Component","createRef","Container","Row","findAllInRenderedTree","ReactDOM","cache","importAll","r","keys","forEach","key","require","context","images","Object","entries","map","module","default","checkImage","path","Promise","resolve","img","Image","src","onload","Profile","constructor","updateImage","index","imgObj","getImage","drawImage","getAllImg","x","canvasRef","canvas","document","createElement","refs","current","ctx","getContext","image","width","imgOb","showImage","imgO","showNone","height","updateCanvas","frameCount","html","documentElement","scrollTop","maxScrollTop","scrollHeight","window","innerHeight","scrollFraction","frameIndex","Math","min","floor","console","log","componentDidMount","getElementById","insertAdjacentElement","onscroll","requestAnimationFrame","componentWillUnmount","render"],"mappings":"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","sourcesContent":["// import React, { createRef, useEffect } from \"react\";\n// const canvasRef = createRef();\n// function getImage(index) {\n//   return (\n//     // \"https://www.apple.com/105/media/us/airpods-pro/2019/1299e2f5_9206_4470_b28e_08307a42f19b/anim/sequence/large/01-hero-lightpass/\" +\n//     // index.toString().padStart(4, 0) +\n//     // \".jpg\"\n//     process.env.PUBLIC_URL + \"/img/img\" + index.toString() + \".png\"\n//   );\n// }\n// const updateImage = (imgObj, index, ctx) => {\n//   if (index === 0 || index === null) {\n//     index = 1;\n//   }\n//   imgObj.src = getImage(index);\n//   console.log(imgObj);\n//   ctx.drawImage(imgObj, 0, 0);\n// };\n// const getAllImg = async () => {\n//   var x = 0;\n//   while (x != 7) {\n//     x++;\n//     const imgObj = new Image();\n\n//     imgObj.src = await getImage(x);\n//   }\n// };\n// function Profile() {\n//   getAllImg();\n//   const updateCanvas = async () => {\n//     const canvas = canvasRef.current;\n//     const ctx = canvas.getContext(\"2d\");\n//     const frameCount = 7;\n//     var imageObj1 = document.getElementById(\"source\");\n\n//     canvas.width = imageObj1.width;\n//     canvas.height = imageObj1.height;\n\n//     const html = document.documentElement;\n//     const scrollTop = html.scrollTop;\n//     const maxScrollTop = html.scrollHeight - window.innerHeight;\n//     const scrollFraction = scrollTop / maxScrollTop;\n//     console.log(scrollTop, scrollFraction);\n//     const frameIndex = Math.min(\n//       frameCount - 1,\n//       Math.floor(scrollFraction * frameCount)\n//     );\n\n//     await updateImage(imageObj1, frameIndex + 1, ctx);\n\n//     console.log(frameIndex);\n//   };\n\n//   useEffect(() => {\n//     document.onscroll = async () => {\n//       await requestAnimationFrame(() => {\n//         updateCanvas();\n//       });\n\n//       return () => {\n//         //window.removeEventListener(onscroll);\n//         // cancelAnimationFrame();\n//       };\n//     };\n//   }, []);\n\n//   return (\n//     <canvas ref={canvasRef} style={{}}>\n//       <img id=\"source\" src=\"./../assets/img/0001.png\"></img>\n//     </canvas>\n//   );\n// }\n\n// export default Profile;\nimport React, { Component, createRef } from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport { findAllInRenderedTree } from \"react-dom/test-utils\";\nimport { ReactDOM } from \"react\";\n\nconst cache = {};\nfunction importAll(r) {\n  r.keys().forEach((key) => (cache[key] = r(key)));\n}\n// Note from the docs -> Warning: The arguments passed to require.context must be literals!\nimportAll(require.context(\"./../assets/img/\", false, /\\.(png|jpe?g|svg)$/));\n\nconst images = Object.entries(cache).map((module) => module[1].default);\n\nconst checkImage = (path) =>\n  new Promise((resolve) => {\n    const img = new Image();\n    img.src = path;\n    img.onload = () => resolve(path);\n  });\n\nclass Profile extends Component {\n  constructor() {\n    super();\n    this.canvasRef = createRef();\n    this.canvas = document.createElement(\"canvas\", {\n      refs: this.canvasRef.current,\n    });\n    this.ctx = this.canvas.getContext(\"2d\");\n  }\n  getImage(index) {\n    // const imgUrl =\n    //   // \"https://www.apple.com/105/media/us/airpods-pro/2019/1299e2f5_9206_4470_b28e_08307a42f19b/anim/sequence/large/01-hero-lightpass/\" +\n    //   // index.toString().padStart(4, 0) +\n    //   // \".jpg\";\n    //   // process.env.PUBLIC_URL +\n    //   { img } + index.toString().padStart(5, 0) + \".jpeg\";\n    // const imgObj = new Image();\n    // const myPromise = checkImage(imgUrl);\n    // myPromise\n    //   .then((response) => {\n    //     imgObj.src = imgUrl;\n    //     console.log(\"resolved\");\n    //   })\n    //   .catch((error) => console.error(error));\n    const imgObj = images.map((image) => (\n      <img style={{ width: 100 }} src={image} />\n    ));\n    return imgOb[index];\n  }\n\n  updateImage = (index) => {\n    if (index === 0 || index === null) {\n      index = 1;\n    }\n    const imgObj = this.getImage(index);\n    imgObj.onload = () => this.drawImage(imgObj);\n  };\n  showImage(canvas) {\n    var imgO = new Image();\n    imgO = this.getImage(1);\n\n    imgO.onload = () => this.drawImage(imgO);\n  }\n  showNone() {\n    const canvas = this.canvasRef.current;\n    canvas.width = 0;\n    canvas.height = 0;\n  }\n  drawImage(img) {\n    // Use the intrinsic size of image in CSS pixels for the canvas element\n\n    // Will draw the image as 300x227, ignoring the custom size of 60x45\n    // given in the constructor\n\n    this.ctx.drawImage(img, 0, 0);\n\n    // To use the custom size we'll have to specify the scale parameters\n    // using the element's width and height properties - lets draw one\n    // on top in the corner:\n  }\n  updateCanvas(canvas) {\n    const frameCount = 179;\n\n    const html = document.documentElement;\n    const scrollTop = html.scrollTop;\n    const maxScrollTop = html.scrollHeight - window.innerHeight;\n    const scrollFraction = scrollTop / maxScrollTop;\n\n    this.frameIndex = Math.min(\n      frameCount - 1,\n      Math.floor(scrollFraction * frameCount)\n    );\n\n    this.updateImage(this.frameIndex + 1);\n    console.log(this.frameIndex);\n  }\n\n  getAllImg = async () => {\n    var x = 0;\n    while (x !== 179) {\n      x++;\n      var imgObj = new Image();\n\n      imgObj = await this.getImage(x);\n    }\n  };\n  componentDidMount() {\n    this.canvas.width = \"1158\";\n    this.canvas.height = \"770\";\n    document\n      .getElementById(\"canvas-wrapper\")\n      .insertAdjacentElement(\"afterbegin\", this.canvas);\n    console.log(this.canvas);\n\n    this.showImage(this.canvas);\n    document.onscroll = () => {\n      document\n        .getElementById(\"canvas-wrapper\")\n        .insertAdjacentElement(\"afterbegin\", this.canvas);\n      requestAnimationFrame(() => {\n        this.updateCanvas(this.canvas);\n      });\n    };\n  }\n\n  componentWillUnmount() {}\n  render() {\n    return <Container id=\"canvas-wrapper\"></Container>;\n  }\n}\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}