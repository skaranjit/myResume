{"ast":null,"code":"var _jsxFileName = \"/Users/sumankaranjit/myProfile/resume/src/pages/Contact.js\";\nimport React, { useState, useEffect, Component } from \"react\";\nimport axios from \"axios\";\nimport { motion, motionValue, useTransform, useViewportScroll } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ContactForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: {},\n      errors: {},\n      setServerStatus: {}\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    let input = this.state.input;\n    input[event.target.name] = event.target.value;\n    this.setState({\n      input\n    });\n  }\n\n  handleServerResponse(ok, msg) {\n    let serverStatus = {};\n    serverStatus[\"submitting\"] = false;\n    serverStatus[\"status\"] = {\n      ok,\n      msg\n    };\n    this.setState({\n      setServerStatus: serverStatus\n    });\n\n    if (ok) {\n      let inputs = {};\n      inputs[\"email\"] = \"\";\n      inputs[\"message\"] = \"\";\n      inputs[\"name\"] = \"\";\n      this.setState({\n        input: inputs\n      });\n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    if (this.validate()) {\n      let serverStatus = {};\n      serverStatus[\"submitting\"] = true;\n      this.setState({\n        setServerStatus: serverStatus\n      });\n      axios({\n        method: \"POST\",\n        url: \"https://formspree.io/f/xwkaqqe\",\n        data: this.state.input\n      }).then(r => {\n        this.handleServerResponse(true, alert(\"Your request have been submited sucessfully\"));\n      }).catch(r => {\n        this.handleServerResponse(false, alert(r.response.data.error));\n      });\n    }\n  }\n\n  validate() {\n    let input = this.state.input;\n    let errors = {};\n    let isValid = true;\n\n    if (isValid) {\n      errors[\"name\"] = null;\n      errors[\"email\"] = null;\n      errors[\"message\"] = null;\n    }\n\n    if (!input[\"name\"]) {\n      isValid = false;\n      errors[\"name\"] = \"Please verify your name.\";\n    }\n\n    if (!input[\"email\"]) {\n      isValid = false;\n      errors[\"email\"] = \"Please verify your email Address.\";\n    }\n\n    if (typeof input[\"email\"] !== \"undefined\") {\n      var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n\n      if (!pattern.test(input[\"email\"])) {\n        isValid = false;\n        errors[\"email\"] = \"Please enter valid email address.\";\n      }\n    }\n\n    if (!input[\"message\"]) {\n      isValid = false;\n      errors[\"message\"] = \"Please enter your message.\";\n    }\n\n    this.setState({\n      errors: errors\n    });\n    return isValid;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        display: \"flex\",\n        top: 90,\n        flex: 1,\n        flexDirection: \"column-reverse\",\n        justifyContent: \"center\",\n        alignContent: \"center\",\n        height: \"100vh\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"name\",\n            children: \"Your Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: this.state.input.name,\n            onChange: this.handleChange,\n            class: \"form-control\",\n            placeholder: \"Enter name\",\n            id: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-danger\",\n            children: this.state.errors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"email\",\n            children: \"Your Email Address:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"email\",\n            value: this.state.input.email,\n            onChange: this.handleChange,\n            class: \"form-control\",\n            placeholder: \"Enter email\",\n            id: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-danger\",\n            children: this.state.errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"message\",\n            children: \"Message:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"message\",\n            value: this.state.input.message,\n            onChange: this.handleChange,\n            placeholder: \"Your message....\",\n            class: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-danger\",\n            children: this.state.errors.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          value: \"Submit\",\n          class: \"btn btn-success\",\n          disabled: this.state.setServerStatus.submitting,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), this.state.setServerStatus.status && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: !this.state.setServerStatus.status.ok ? \"errorMsg\" : \"\",\n          children: this.state.setServerStatus.status.msg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ContactForm; // export default () => {\n//   const [status, setStatus] = useState({\n//     submitted: false,\n//     submitting: false,\n//     info: { error: false, msg: null },\n//   });\n//   const [inputs, setInputs] = useState({\n//     email: \"\",\n//     message: \"\",\n//   });\n//   const handleServerResponse = (ok, msg) => {\n//     if (ok) {\n//       setStatus({\n//         submitted: true,\n//         submitting: false,\n//         info: { error: false, msg: msg },\n//       });\n//       setInputs({\n//         email: \"\",\n//         message: \"\",\n//       });\n//     } else {\n//       setStatus({\n//         info: { error: true, msg: msg },\n//       });\n//     }\n//   };\n//   const handleOnChange = (e) => {\n//     e.persist();\n//     setInputs((prev) => ({\n//       ...prev,\n//       [e.target.id]: e.target.value,\n//     }));\n//     setStatus({\n//       submitted: false,\n//       submitting: false,\n//       info: { error: false, msg: null },\n//     });\n//   };\n//   const handleOnSubmit = (e) => {\n//     e.preventDefault();\n//     setStatus((prevStatus) => ({ ...prevStatus, submitting: true }));\n//     axios({\n//       method: \"POST\",\n//       url: \"https://formspree.io/f/xwkaqqeg\",\n//       data: inputs,\n//     })\n//       .then((response) => {\n//         handleServerResponse(\n//           true,\n//           \"Thank you, your message has been submitted.\"\n//         );\n//       })\n//       .catch((error) => {\n//         handleServerResponse(false, error.response.data.error);\n//       });\n//   };\n//   return (\n//     <main className=\"container \" style={{ marginTop: \"10vh\" }}>\n//       <h1>Connect With Me </h1>\n//       <p style={{ fontFamily: \"cursive\", fontSize: \"20px\" }}>\n//         {\" \"}\n//         Send me a message and I will get back to you as soon as possible.\n//       </p>\n//       <hr />\n//       <form onSubmit={handleOnSubmit}>\n//         <motion.div\n//           animate={{ scale: [0, 0.4, 0.8, 1] }}\n//           transition={{ times: [0, 0.1, 0.1, 1] }}\n//           className=\"form-group\"\n//         >\n//           <div class=\"col-sm-offset-2 col-sm-10\">\n//             <label\n//               for=\"name\"\n//               style={{\n//                 fontFamily: \"fantasy\",\n//               }}\n//             >\n//               Name\n//             </label>\n//             <input\n//               className=\"form-control\"\n//               id=\"name\"\n//               type=\"text\"\n//               name=\"_name\"\n//               onChange={handleOnChange}\n//               required\n//               value={inputs.name}\n//               width=\"20%\"\n//             />\n//           </div>\n//         </motion.div>\n//         <motion.div\n//           animate={{ scale: [0, 0.4, 0.8, 1] }}\n//           transition={{ times: [0, 0.1, 0.1, 1] }}\n//           class=\"form-group\"\n//         >\n//           <div class=\"col-sm-offset-2 col-sm-10\">\n//             <label\n//               style={{\n//                 fontFamily: \"fantasy\",\n//               }}\n//               htmlFor=\"email\"\n//             >\n//               Email\n//             </label>\n//             <input\n//               className=\"form-control\"\n//               id=\"email\"\n//               type=\"email\"\n//               name=\"_replyto\"\n//               onChange={handleOnChange}\n//               required\n//               value={inputs.email}\n//             />\n//           </div>\n//         </motion.div>\n//         <motion.div\n//           animate={{ scale: [0, 0.4, 0.8, 1] }}\n//           transition={{ times: [0, 0.1, 0.1, 1] }}\n//           class=\"form-group\"\n//         >\n//           <div class=\"col-sm-offset-2 col-sm-10\">\n//             <label\n//               style={{\n//                 fontFamily: \"fantasy\",\n//               }}\n//               htmlFor=\"message\"\n//             >\n//               Message\n//             </label>\n//             <textarea\n//               className=\"form-control\"\n//               id=\"message\"\n//               name=\"message\"\n//               onChange={handleOnChange}\n//               required\n//               value={inputs.message}\n//             />\n//           </div>\n//         </motion.div>\n//         <motion.div\n//           animate={{ scale: [0, 0.4, 0.8, 1] }}\n//           transition={{ times: [0, 0.1, 0.1, 1] }}\n//           class=\"form-group\"\n//         >\n//           <div\n//             class=\"col-sm-offset-2 col-sm-10\"\n//             style={{ alignContent: \"end\" }}\n//           >\n//             <motion.button\n//               whileHover={{ scale: 1.2 }}\n//               whileFocus={{ scale: 2 }}\n//               type=\"submit\"\n//               className=\"btn btn-secondary\"\n//               disabled={status.submitting}\n//               style={{\n//                 fontFamily: \"fantasy\",\n//                 marginTop: \"10px\",\n//               }}\n//             >\n//               {!status.submitting\n//                 ? !status.submitted\n//                   ? \"Submit\"\n//                   : \"Submitted\"\n//                 : \"Submitting...\"}\n//             </motion.button>\n//           </div>\n//         </motion.div>\n//       </form>\n//       {status.info.error && (\n//         <motion.div animate={{ scale: [0, 5] }} className=\"error\">\n//           Error: {status.info.msg}\n//         </motion.div>\n//       )}\n//       {!status.info.error && status.info.msg && <p>{status.info.msg}</p>}\n//     </main>\n//   );\n// };","map":{"version":3,"sources":["/Users/sumankaranjit/myProfile/resume/src/pages/Contact.js"],"names":["React","useState","useEffect","Component","axios","motion","motionValue","useTransform","useViewportScroll","ContactForm","constructor","props","state","input","errors","setServerStatus","handleChange","bind","handleSubmit","event","target","name","value","setState","handleServerResponse","ok","msg","serverStatus","inputs","preventDefault","validate","method","url","data","then","r","alert","catch","response","error","isValid","pattern","RegExp","test","render","display","top","flex","flexDirection","justifyContent","alignContent","height","email","message","submitting","status"],"mappings":"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":["import React, { useState, useEffect, Component } from \"react\";\nimport axios from \"axios\";\nimport {\n  motion,\n  motionValue,\n  useTransform,\n  useViewportScroll,\n} from \"framer-motion\";\n\nclass ContactForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: {},\n      errors: {},\n      setServerStatus: {},\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(event) {\n    let input = this.state.input;\n    input[event.target.name] = event.target.value;\n\n    this.setState({\n      input,\n    });\n  }\n  handleServerResponse(ok, msg) {\n    let serverStatus = {};\n    serverStatus[\"submitting\"] = false;\n    serverStatus[\"status\"] = { ok, msg };\n\n    this.setState({\n      setServerStatus: serverStatus,\n    });\n    if (ok) {\n      let inputs = {};\n      inputs[\"email\"] = \"\";\n      inputs[\"message\"] = \"\";\n      inputs[\"name\"] = \"\";\n      this.setState({\n        input: inputs,\n      });\n    }\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n\n    if (this.validate()) {\n      let serverStatus = {};\n      serverStatus[\"submitting\"] = true;\n      this.setState({\n        setServerStatus: serverStatus,\n      });\n      axios({\n        method: \"POST\",\n        url: \"https://formspree.io/f/xwkaqqe\",\n        data: this.state.input,\n      })\n        .then((r) => {\n          this.handleServerResponse(\n            true,\n            alert(\"Your request have been submited sucessfully\")\n          );\n        })\n        .catch((r) => {\n          this.handleServerResponse(false, alert(r.response.data.error));\n        });\n    }\n  }\n  validate() {\n    let input = this.state.input;\n    let errors = {};\n    let isValid = true;\n    if (isValid) {\n      errors[\"name\"] = null;\n      errors[\"email\"] = null;\n      errors[\"message\"] = null;\n    }\n    if (!input[\"name\"]) {\n      isValid = false;\n      errors[\"name\"] = \"Please verify your name.\";\n    }\n\n    if (!input[\"email\"]) {\n      isValid = false;\n      errors[\"email\"] = \"Please verify your email Address.\";\n    }\n\n    if (typeof input[\"email\"] !== \"undefined\") {\n      var pattern = new RegExp(\n        /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i\n      );\n      if (!pattern.test(input[\"email\"])) {\n        isValid = false;\n        errors[\"email\"] = \"Please enter valid email address.\";\n      }\n    }\n\n    if (!input[\"message\"]) {\n      isValid = false;\n      errors[\"message\"] = \"Please enter your message.\";\n    }\n\n    this.setState({\n      errors: errors,\n    });\n\n    return isValid;\n  }\n\n  render() {\n    return (\n      <div\n        className=\"container\"\n        style={{\n          display: \"flex\",\n          top: 90,\n          flex: 1,\n          flexDirection: \"column-reverse\",\n          justifyContent: \"center\",\n          alignContent: \"center\",\n          height: \"100vh\",\n        }}\n      >\n        <form onSubmit={this.handleSubmit}>\n          <div class=\"form-group\">\n            <label for=\"name\">Your Name:</label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={this.state.input.name}\n              onChange={this.handleChange}\n              class=\"form-control\"\n              placeholder=\"Enter name\"\n              id=\"name\"\n            />\n\n            <div className=\"text-danger\">{this.state.errors.name}</div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"email\">Your Email Address:</label>\n            <input\n              type=\"text\"\n              name=\"email\"\n              value={this.state.input.email}\n              onChange={this.handleChange}\n              class=\"form-control\"\n              placeholder=\"Enter email\"\n              id=\"email\"\n            />\n\n            <div className=\"text-danger\">{this.state.errors.email}</div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"message\">Message:</label>\n            <textarea\n              name=\"message\"\n              value={this.state.input.message}\n              onChange={this.handleChange}\n              placeholder=\"Your message....\"\n              class=\"form-control\"\n            />\n\n            <div className=\"text-danger\">{this.state.errors.message}</div>\n          </div>\n\n          <button\n            type=\"submit\"\n            value=\"Submit\"\n            class=\"btn btn-success\"\n            disabled={this.state.setServerStatus.submitting}\n          >\n            Submit\n          </button>\n          {this.state.setServerStatus.status && (\n            <p\n              className={\n                !this.state.setServerStatus.status.ok ? \"errorMsg\" : \"\"\n              }\n            >\n              {this.state.setServerStatus.status.msg}\n            </p>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\nexport default ContactForm;\n// export default () => {\n//   const [status, setStatus] = useState({\n//     submitted: false,\n//     submitting: false,\n//     info: { error: false, msg: null },\n//   });\n//   const [inputs, setInputs] = useState({\n//     email: \"\",\n//     message: \"\",\n//   });\n//   const handleServerResponse = (ok, msg) => {\n//     if (ok) {\n//       setStatus({\n//         submitted: true,\n//         submitting: false,\n//         info: { error: false, msg: msg },\n//       });\n//       setInputs({\n//         email: \"\",\n//         message: \"\",\n//       });\n//     } else {\n//       setStatus({\n//         info: { error: true, msg: msg },\n//       });\n//     }\n//   };\n//   const handleOnChange = (e) => {\n//     e.persist();\n//     setInputs((prev) => ({\n//       ...prev,\n//       [e.target.id]: e.target.value,\n//     }));\n//     setStatus({\n//       submitted: false,\n//       submitting: false,\n//       info: { error: false, msg: null },\n//     });\n//   };\n//   const handleOnSubmit = (e) => {\n//     e.preventDefault();\n//     setStatus((prevStatus) => ({ ...prevStatus, submitting: true }));\n//     axios({\n//       method: \"POST\",\n//       url: \"https://formspree.io/f/xwkaqqeg\",\n//       data: inputs,\n//     })\n//       .then((response) => {\n//         handleServerResponse(\n//           true,\n//           \"Thank you, your message has been submitted.\"\n//         );\n//       })\n//       .catch((error) => {\n//         handleServerResponse(false, error.response.data.error);\n//       });\n//   };\n//   return (\n//     <main className=\"container \" style={{ marginTop: \"10vh\" }}>\n//       <h1>Connect With Me </h1>\n//       <p style={{ fontFamily: \"cursive\", fontSize: \"20px\" }}>\n//         {\" \"}\n//         Send me a message and I will get back to you as soon as possible.\n//       </p>\n//       <hr />\n//       <form onSubmit={handleOnSubmit}>\n//         <motion.div\n//           animate={{ scale: [0, 0.4, 0.8, 1] }}\n//           transition={{ times: [0, 0.1, 0.1, 1] }}\n//           className=\"form-group\"\n//         >\n//           <div class=\"col-sm-offset-2 col-sm-10\">\n//             <label\n//               for=\"name\"\n//               style={{\n//                 fontFamily: \"fantasy\",\n//               }}\n//             >\n//               Name\n//             </label>\n//             <input\n//               className=\"form-control\"\n//               id=\"name\"\n//               type=\"text\"\n//               name=\"_name\"\n//               onChange={handleOnChange}\n//               required\n//               value={inputs.name}\n//               width=\"20%\"\n//             />\n//           </div>\n//         </motion.div>\n//         <motion.div\n//           animate={{ scale: [0, 0.4, 0.8, 1] }}\n//           transition={{ times: [0, 0.1, 0.1, 1] }}\n//           class=\"form-group\"\n//         >\n//           <div class=\"col-sm-offset-2 col-sm-10\">\n//             <label\n//               style={{\n//                 fontFamily: \"fantasy\",\n//               }}\n//               htmlFor=\"email\"\n//             >\n//               Email\n//             </label>\n//             <input\n//               className=\"form-control\"\n//               id=\"email\"\n//               type=\"email\"\n//               name=\"_replyto\"\n//               onChange={handleOnChange}\n//               required\n//               value={inputs.email}\n//             />\n//           </div>\n//         </motion.div>\n//         <motion.div\n//           animate={{ scale: [0, 0.4, 0.8, 1] }}\n//           transition={{ times: [0, 0.1, 0.1, 1] }}\n//           class=\"form-group\"\n//         >\n//           <div class=\"col-sm-offset-2 col-sm-10\">\n//             <label\n//               style={{\n//                 fontFamily: \"fantasy\",\n//               }}\n//               htmlFor=\"message\"\n//             >\n//               Message\n//             </label>\n//             <textarea\n//               className=\"form-control\"\n//               id=\"message\"\n//               name=\"message\"\n//               onChange={handleOnChange}\n//               required\n//               value={inputs.message}\n//             />\n//           </div>\n//         </motion.div>\n//         <motion.div\n//           animate={{ scale: [0, 0.4, 0.8, 1] }}\n//           transition={{ times: [0, 0.1, 0.1, 1] }}\n//           class=\"form-group\"\n//         >\n//           <div\n//             class=\"col-sm-offset-2 col-sm-10\"\n//             style={{ alignContent: \"end\" }}\n//           >\n//             <motion.button\n//               whileHover={{ scale: 1.2 }}\n//               whileFocus={{ scale: 2 }}\n//               type=\"submit\"\n//               className=\"btn btn-secondary\"\n//               disabled={status.submitting}\n//               style={{\n//                 fontFamily: \"fantasy\",\n//                 marginTop: \"10px\",\n//               }}\n//             >\n//               {!status.submitting\n//                 ? !status.submitted\n//                   ? \"Submit\"\n//                   : \"Submitted\"\n//                 : \"Submitting...\"}\n//             </motion.button>\n//           </div>\n//         </motion.div>\n//       </form>\n\n//       {status.info.error && (\n//         <motion.div animate={{ scale: [0, 5] }} className=\"error\">\n//           Error: {status.info.msg}\n//         </motion.div>\n//       )}\n//       {!status.info.error && status.info.msg && <p>{status.info.msg}</p>}\n//     </main>\n//   );\n// };\n"]},"metadata":{},"sourceType":"module"}