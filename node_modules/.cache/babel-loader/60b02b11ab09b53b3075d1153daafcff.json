{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $Date = GetIntrinsic('%Date%');\n\nvar $isNaN = require('../helpers/isNaN');\n\nvar Type = require('./Type'); // https://ecma-international.org/ecma-262/6.0/#sec-todatestring\n\n\nmodule.exports = function ToDateString(tv) {\n  if (Type(tv) !== 'Number') {\n    throw new $TypeError('Assertion failed: `tv` must be a Number');\n  }\n\n  if ($isNaN(tv)) {\n    return 'Invalid Date';\n  }\n\n  return $Date(tv);\n};","map":{"version":3,"sources":["/Users/sumankaranjit/myProfile/resume/node_modules/es-abstract/2018/ToDateString.js"],"names":["GetIntrinsic","require","$TypeError","$Date","$isNaN","Type","module","exports","ToDateString","tv"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AAEA,IAAIC,UAAU,GAAGF,YAAY,CAAC,aAAD,CAA7B;AACA,IAAIG,KAAK,GAAGH,YAAY,CAAC,QAAD,CAAxB;;AAEA,IAAII,MAAM,GAAGH,OAAO,CAAC,kBAAD,CAApB;;AAEA,IAAII,IAAI,GAAGJ,OAAO,CAAC,QAAD,CAAlB,C,CAEA;;;AAEAK,MAAM,CAACC,OAAP,GAAiB,SAASC,YAAT,CAAsBC,EAAtB,EAA0B;AAC1C,MAAIJ,IAAI,CAACI,EAAD,CAAJ,KAAa,QAAjB,EAA2B;AAC1B,UAAM,IAAIP,UAAJ,CAAe,yCAAf,CAAN;AACA;;AACD,MAAIE,MAAM,CAACK,EAAD,CAAV,EAAgB;AACf,WAAO,cAAP;AACA;;AACD,SAAON,KAAK,CAACM,EAAD,CAAZ;AACA,CARD","sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $Date = GetIntrinsic('%Date%');\n\nvar $isNaN = require('../helpers/isNaN');\n\nvar Type = require('./Type');\n\n// https://ecma-international.org/ecma-262/6.0/#sec-todatestring\n\nmodule.exports = function ToDateString(tv) {\n\tif (Type(tv) !== 'Number') {\n\t\tthrow new $TypeError('Assertion failed: `tv` must be a Number');\n\t}\n\tif ($isNaN(tv)) {\n\t\treturn 'Invalid Date';\n\t}\n\treturn $Date(tv);\n};\n"]},"metadata":{},"sourceType":"script"}