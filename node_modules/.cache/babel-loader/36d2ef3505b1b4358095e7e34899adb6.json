{"ast":null,"code":"'use strict';\n\nvar has = require('has');\n\nvar assertRecord = require('../helpers/assertRecord');\n\nvar IsDataDescriptor = require('./IsDataDescriptor');\n\nvar IsGenericDescriptor = require('./IsGenericDescriptor');\n\nvar Type = require('./Type'); // https://ecma-international.org/ecma-262/6.0/#sec-completepropertydescriptor\n\n\nmodule.exports = function CompletePropertyDescriptor(Desc) {\n  /* eslint no-param-reassign: 0 */\n  assertRecord(Type, 'Property Descriptor', 'Desc', Desc);\n\n  if (IsGenericDescriptor(Desc) || IsDataDescriptor(Desc)) {\n    if (!has(Desc, '[[Value]]')) {\n      Desc['[[Value]]'] = void 0;\n    }\n\n    if (!has(Desc, '[[Writable]]')) {\n      Desc['[[Writable]]'] = false;\n    }\n  } else {\n    if (!has(Desc, '[[Get]]')) {\n      Desc['[[Get]]'] = void 0;\n    }\n\n    if (!has(Desc, '[[Set]]')) {\n      Desc['[[Set]]'] = void 0;\n    }\n  }\n\n  if (!has(Desc, '[[Enumerable]]')) {\n    Desc['[[Enumerable]]'] = false;\n  }\n\n  if (!has(Desc, '[[Configurable]]')) {\n    Desc['[[Configurable]]'] = false;\n  }\n\n  return Desc;\n};","map":{"version":3,"sources":["/Users/sumankaranjit/myProfile/resume/node_modules/es-abstract/2018/CompletePropertyDescriptor.js"],"names":["has","require","assertRecord","IsDataDescriptor","IsGenericDescriptor","Type","module","exports","CompletePropertyDescriptor","Desc"],"mappings":"AAAA;;AAEA,IAAIA,GAAG,GAAGC,OAAO,CAAC,KAAD,CAAjB;;AAEA,IAAIC,YAAY,GAAGD,OAAO,CAAC,yBAAD,CAA1B;;AAEA,IAAIE,gBAAgB,GAAGF,OAAO,CAAC,oBAAD,CAA9B;;AACA,IAAIG,mBAAmB,GAAGH,OAAO,CAAC,uBAAD,CAAjC;;AACA,IAAII,IAAI,GAAGJ,OAAO,CAAC,QAAD,CAAlB,C,CAEA;;;AAEAK,MAAM,CAACC,OAAP,GAAiB,SAASC,0BAAT,CAAoCC,IAApC,EAA0C;AAC1D;AACAP,EAAAA,YAAY,CAACG,IAAD,EAAO,qBAAP,EAA8B,MAA9B,EAAsCI,IAAtC,CAAZ;;AAEA,MAAIL,mBAAmB,CAACK,IAAD,CAAnB,IAA6BN,gBAAgB,CAACM,IAAD,CAAjD,EAAyD;AACxD,QAAI,CAACT,GAAG,CAACS,IAAD,EAAO,WAAP,CAAR,EAA6B;AAC5BA,MAAAA,IAAI,CAAC,WAAD,CAAJ,GAAoB,KAAK,CAAzB;AACA;;AACD,QAAI,CAACT,GAAG,CAACS,IAAD,EAAO,cAAP,CAAR,EAAgC;AAC/BA,MAAAA,IAAI,CAAC,cAAD,CAAJ,GAAuB,KAAvB;AACA;AACD,GAPD,MAOO;AACN,QAAI,CAACT,GAAG,CAACS,IAAD,EAAO,SAAP,CAAR,EAA2B;AAC1BA,MAAAA,IAAI,CAAC,SAAD,CAAJ,GAAkB,KAAK,CAAvB;AACA;;AACD,QAAI,CAACT,GAAG,CAACS,IAAD,EAAO,SAAP,CAAR,EAA2B;AAC1BA,MAAAA,IAAI,CAAC,SAAD,CAAJ,GAAkB,KAAK,CAAvB;AACA;AACD;;AACD,MAAI,CAACT,GAAG,CAACS,IAAD,EAAO,gBAAP,CAAR,EAAkC;AACjCA,IAAAA,IAAI,CAAC,gBAAD,CAAJ,GAAyB,KAAzB;AACA;;AACD,MAAI,CAACT,GAAG,CAACS,IAAD,EAAO,kBAAP,CAAR,EAAoC;AACnCA,IAAAA,IAAI,CAAC,kBAAD,CAAJ,GAA2B,KAA3B;AACA;;AACD,SAAOA,IAAP;AACA,CA1BD","sourcesContent":["'use strict';\n\nvar has = require('has');\n\nvar assertRecord = require('../helpers/assertRecord');\n\nvar IsDataDescriptor = require('./IsDataDescriptor');\nvar IsGenericDescriptor = require('./IsGenericDescriptor');\nvar Type = require('./Type');\n\n// https://ecma-international.org/ecma-262/6.0/#sec-completepropertydescriptor\n\nmodule.exports = function CompletePropertyDescriptor(Desc) {\n\t/* eslint no-param-reassign: 0 */\n\tassertRecord(Type, 'Property Descriptor', 'Desc', Desc);\n\n\tif (IsGenericDescriptor(Desc) || IsDataDescriptor(Desc)) {\n\t\tif (!has(Desc, '[[Value]]')) {\n\t\t\tDesc['[[Value]]'] = void 0;\n\t\t}\n\t\tif (!has(Desc, '[[Writable]]')) {\n\t\t\tDesc['[[Writable]]'] = false;\n\t\t}\n\t} else {\n\t\tif (!has(Desc, '[[Get]]')) {\n\t\t\tDesc['[[Get]]'] = void 0;\n\t\t}\n\t\tif (!has(Desc, '[[Set]]')) {\n\t\t\tDesc['[[Set]]'] = void 0;\n\t\t}\n\t}\n\tif (!has(Desc, '[[Enumerable]]')) {\n\t\tDesc['[[Enumerable]]'] = false;\n\t}\n\tif (!has(Desc, '[[Configurable]]')) {\n\t\tDesc['[[Configurable]]'] = false;\n\t}\n\treturn Desc;\n};\n"]},"metadata":{},"sourceType":"script"}