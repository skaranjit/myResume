{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $species = GetIntrinsic('%Symbol.species%', true);\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar IsConstructor = require('./IsConstructor');\n\nvar Type = require('./Type'); // https://ecma-international.org/ecma-262/6.0/#sec-speciesconstructor\n\n\nmodule.exports = function SpeciesConstructor(O, defaultConstructor) {\n  if (Type(O) !== 'Object') {\n    throw new $TypeError('Assertion failed: Type(O) is not Object');\n  }\n\n  var C = O.constructor;\n\n  if (typeof C === 'undefined') {\n    return defaultConstructor;\n  }\n\n  if (Type(C) !== 'Object') {\n    throw new $TypeError('O.constructor is not an Object');\n  }\n\n  var S = $species ? C[$species] : void 0;\n\n  if (S == null) {\n    return defaultConstructor;\n  }\n\n  if (IsConstructor(S)) {\n    return S;\n  }\n\n  throw new $TypeError('no constructor found');\n};","map":{"version":3,"sources":["/Users/sumankaranjit/myProfile/resume/node_modules/es-abstract/2018/SpeciesConstructor.js"],"names":["GetIntrinsic","require","$species","$TypeError","IsConstructor","Type","module","exports","SpeciesConstructor","O","defaultConstructor","C","constructor","S"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AAEA,IAAIC,QAAQ,GAAGF,YAAY,CAAC,kBAAD,EAAqB,IAArB,CAA3B;AACA,IAAIG,UAAU,GAAGH,YAAY,CAAC,aAAD,CAA7B;;AAEA,IAAII,aAAa,GAAGH,OAAO,CAAC,iBAAD,CAA3B;;AACA,IAAII,IAAI,GAAGJ,OAAO,CAAC,QAAD,CAAlB,C,CAEA;;;AAEAK,MAAM,CAACC,OAAP,GAAiB,SAASC,kBAAT,CAA4BC,CAA5B,EAA+BC,kBAA/B,EAAmD;AACnE,MAAIL,IAAI,CAACI,CAAD,CAAJ,KAAY,QAAhB,EAA0B;AACzB,UAAM,IAAIN,UAAJ,CAAe,yCAAf,CAAN;AACA;;AACD,MAAIQ,CAAC,GAAGF,CAAC,CAACG,WAAV;;AACA,MAAI,OAAOD,CAAP,KAAa,WAAjB,EAA8B;AAC7B,WAAOD,kBAAP;AACA;;AACD,MAAIL,IAAI,CAACM,CAAD,CAAJ,KAAY,QAAhB,EAA0B;AACzB,UAAM,IAAIR,UAAJ,CAAe,gCAAf,CAAN;AACA;;AACD,MAAIU,CAAC,GAAGX,QAAQ,GAAGS,CAAC,CAACT,QAAD,CAAJ,GAAiB,KAAK,CAAtC;;AACA,MAAIW,CAAC,IAAI,IAAT,EAAe;AACd,WAAOH,kBAAP;AACA;;AACD,MAAIN,aAAa,CAACS,CAAD,CAAjB,EAAsB;AACrB,WAAOA,CAAP;AACA;;AACD,QAAM,IAAIV,UAAJ,CAAe,sBAAf,CAAN;AACA,CAnBD","sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $species = GetIntrinsic('%Symbol.species%', true);\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar IsConstructor = require('./IsConstructor');\nvar Type = require('./Type');\n\n// https://ecma-international.org/ecma-262/6.0/#sec-speciesconstructor\n\nmodule.exports = function SpeciesConstructor(O, defaultConstructor) {\n\tif (Type(O) !== 'Object') {\n\t\tthrow new $TypeError('Assertion failed: Type(O) is not Object');\n\t}\n\tvar C = O.constructor;\n\tif (typeof C === 'undefined') {\n\t\treturn defaultConstructor;\n\t}\n\tif (Type(C) !== 'Object') {\n\t\tthrow new $TypeError('O.constructor is not an Object');\n\t}\n\tvar S = $species ? C[$species] : void 0;\n\tif (S == null) {\n\t\treturn defaultConstructor;\n\t}\n\tif (IsConstructor(S)) {\n\t\treturn S;\n\t}\n\tthrow new $TypeError('no constructor found');\n};\n"]},"metadata":{},"sourceType":"script"}