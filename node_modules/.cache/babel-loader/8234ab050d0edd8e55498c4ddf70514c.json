{"ast":null,"code":"/**\n * Wrapper for the notifu 1.6 (http://www.paralint.com/projects/notifu/)\n\nUsage\n/t <value>      The type of message to display values are:\n                    info      The message is an informational message\n                    warn      The message is an warning message\n                    error     The message is an error message\n/d <value>      The number of milliseconds to display (omit or 0 for infinit)\n/p <value>      The title (or prompt) of the ballon\n/m <value>      The message text\n/i <value>      Specify an icon to use (\"parent\" uses the icon of the parent process)\n/e              Enable ballon tips in the registry (for this user only)\n/q              Do not play a sound when the tooltip is displayed\n/w              Show the tooltip even if the user is in the quiet period that follows his very first login (Windows 7 and up)\n/xp             Use IUserNotification interface event when IUserNotification2 is available\n/l              Display license for notifu\n\n// Kill codes:\n  2 = Timeout\n  3 = Clicked\n  4 = Closed or faded out\n\n */\nvar path = require('path');\n\nvar notifier = path.resolve(__dirname, '../vendor/notifu/notifu');\n\nvar checkGrowl = require('../lib/checkGrowl');\n\nvar utils = require('../lib/utils');\n\nvar Toaster = require('./toaster');\n\nvar Growl = require('./growl');\n\nvar os = require('os');\n\nvar EventEmitter = require('events').EventEmitter;\n\nvar util = require('util');\n\nvar hasGrowl;\nmodule.exports = WindowsBalloon;\n\nfunction WindowsBalloon(options) {\n  options = utils.clone(options || {});\n\n  if (!(this instanceof WindowsBalloon)) {\n    return new WindowsBalloon(options);\n  }\n\n  this.options = options;\n  EventEmitter.call(this);\n}\n\nutil.inherits(WindowsBalloon, EventEmitter);\n\nfunction noop() {}\n\nfunction notifyRaw(options, callback) {\n  var fallback;\n  var notifierOptions = this.options;\n  options = utils.clone(options || {});\n  callback = callback || noop;\n\n  if (typeof options === 'string') {\n    options = {\n      title: 'node-notifier',\n      message: options\n    };\n  }\n\n  var actionJackedCallback = utils.actionJackerDecorator(this, options, callback, function (data) {\n    if (data === 'activate') {\n      return 'click';\n    }\n\n    if (data === 'timeout') {\n      return 'timeout';\n    }\n\n    return false;\n  });\n\n  if (!!this.options.withFallback && utils.isWin8()) {\n    fallback = fallback || new Toaster(notifierOptions);\n    return fallback.notify(options, callback);\n  }\n\n  if (!!this.options.withFallback && (!utils.isLessThanWin8() || hasGrowl === true)) {\n    fallback = fallback || new Growl(notifierOptions);\n    return fallback.notify(options, callback);\n  }\n\n  if (!this.options.withFallback || hasGrowl === false) {\n    doNotification(options, notifierOptions, actionJackedCallback);\n    return this;\n  }\n\n  checkGrowl(notifierOptions, function (_, hasGrowlResult) {\n    hasGrowl = hasGrowlResult;\n\n    if (hasGrowl) {\n      fallback = fallback || new Growl(notifierOptions);\n      return fallback.notify(options, callback);\n    }\n\n    doNotification(options, notifierOptions, actionJackedCallback);\n  });\n  return this;\n}\n\nObject.defineProperty(WindowsBalloon.prototype, 'notify', {\n  get: function () {\n    if (!this._notify) this._notify = notifyRaw.bind(this);\n    return this._notify;\n  }\n});\nvar allowedArguments = ['t', 'd', 'p', 'm', 'i', 'e', 'q', 'w', 'xp'];\n\nfunction doNotification(options, notifierOptions, callback) {\n  var is64Bit = os.arch() === 'x64';\n  options = options || {};\n  options = utils.mapToNotifu(options);\n  options.p = options.p || 'Node Notification:';\n  var fullNotifierPath = notifier + (is64Bit ? '64' : '') + '.exe';\n  var localNotifier = notifierOptions.customPath || fullNotifierPath;\n\n  if (!options.m) {\n    callback(new Error('Message is required.'));\n    return this;\n  }\n\n  var argsList = utils.constructArgumentList(options, {\n    wrapper: '',\n    noEscape: true,\n    explicitTrue: true,\n    allowedArguments: allowedArguments\n  });\n\n  if (options.wait) {\n    return utils.fileCommand(localNotifier, argsList, function (error, data) {\n      var action = fromErrorCodeToAction(error.code);\n      if (action === 'error') return callback(error, data);\n      return callback(null, action);\n    });\n  }\n\n  utils.immediateFileCommand(localNotifier, argsList, callback);\n}\n\nfunction fromErrorCodeToAction(errorCode) {\n  switch (errorCode) {\n    case 2:\n      return 'timeout';\n\n    case 3:\n    case 6:\n    case 7:\n      return 'activate';\n\n    case 4:\n      return 'close';\n\n    default:\n      return 'error';\n  }\n}","map":{"version":3,"sources":["/Users/sumankaranjit/myProfile/resume/node_modules/node-notifier/notifiers/balloon.js"],"names":["path","require","notifier","resolve","__dirname","checkGrowl","utils","Toaster","Growl","os","EventEmitter","util","hasGrowl","module","exports","WindowsBalloon","options","clone","call","inherits","noop","notifyRaw","callback","fallback","notifierOptions","title","message","actionJackedCallback","actionJackerDecorator","data","withFallback","isWin8","notify","isLessThanWin8","doNotification","_","hasGrowlResult","Object","defineProperty","prototype","get","_notify","bind","allowedArguments","is64Bit","arch","mapToNotifu","p","fullNotifierPath","localNotifier","customPath","m","Error","argsList","constructArgumentList","wrapper","noEscape","explicitTrue","wait","fileCommand","error","action","fromErrorCodeToAction","code","immediateFileCommand","errorCode"],"mappings":"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","sourcesContent":["/**\n * Wrapper for the notifu 1.6 (http://www.paralint.com/projects/notifu/)\n\nUsage\n/t <value>      The type of message to display values are:\n                    info      The message is an informational message\n                    warn      The message is an warning message\n                    error     The message is an error message\n/d <value>      The number of milliseconds to display (omit or 0 for infinit)\n/p <value>      The title (or prompt) of the ballon\n/m <value>      The message text\n/i <value>      Specify an icon to use (\"parent\" uses the icon of the parent process)\n/e              Enable ballon tips in the registry (for this user only)\n/q              Do not play a sound when the tooltip is displayed\n/w              Show the tooltip even if the user is in the quiet period that follows his very first login (Windows 7 and up)\n/xp             Use IUserNotification interface event when IUserNotification2 is available\n/l              Display license for notifu\n\n// Kill codes:\n  2 = Timeout\n  3 = Clicked\n  4 = Closed or faded out\n\n */\nvar path = require('path');\nvar notifier = path.resolve(__dirname, '../vendor/notifu/notifu');\nvar checkGrowl = require('../lib/checkGrowl');\nvar utils = require('../lib/utils');\nvar Toaster = require('./toaster');\nvar Growl = require('./growl');\nvar os = require('os');\n\nvar EventEmitter = require('events').EventEmitter;\nvar util = require('util');\n\nvar hasGrowl;\n\nmodule.exports = WindowsBalloon;\n\nfunction WindowsBalloon(options) {\n  options = utils.clone(options || {});\n  if (!(this instanceof WindowsBalloon)) {\n    return new WindowsBalloon(options);\n  }\n\n  this.options = options;\n\n  EventEmitter.call(this);\n}\nutil.inherits(WindowsBalloon, EventEmitter);\n\nfunction noop() {}\nfunction notifyRaw(options, callback) {\n  var fallback;\n  var notifierOptions = this.options;\n  options = utils.clone(options || {});\n  callback = callback || noop;\n\n  if (typeof options === 'string') {\n    options = { title: 'node-notifier', message: options };\n  }\n\n  var actionJackedCallback = utils.actionJackerDecorator(\n    this,\n    options,\n    callback,\n    function(data) {\n      if (data === 'activate') {\n        return 'click';\n      }\n      if (data === 'timeout') {\n        return 'timeout';\n      }\n      return false;\n    }\n  );\n\n  if (!!this.options.withFallback && utils.isWin8()) {\n    fallback = fallback || new Toaster(notifierOptions);\n    return fallback.notify(options, callback);\n  }\n\n  if (\n    !!this.options.withFallback &&\n    (!utils.isLessThanWin8() || hasGrowl === true)\n  ) {\n    fallback = fallback || new Growl(notifierOptions);\n    return fallback.notify(options, callback);\n  }\n\n  if (!this.options.withFallback || hasGrowl === false) {\n    doNotification(options, notifierOptions, actionJackedCallback);\n    return this;\n  }\n\n  checkGrowl(notifierOptions, function(_, hasGrowlResult) {\n    hasGrowl = hasGrowlResult;\n\n    if (hasGrowl) {\n      fallback = fallback || new Growl(notifierOptions);\n      return fallback.notify(options, callback);\n    }\n\n    doNotification(options, notifierOptions, actionJackedCallback);\n  });\n\n  return this;\n}\n\nObject.defineProperty(WindowsBalloon.prototype, 'notify', {\n  get: function() {\n    if (!this._notify) this._notify = notifyRaw.bind(this);\n    return this._notify;\n  }\n});\n\nvar allowedArguments = ['t', 'd', 'p', 'm', 'i', 'e', 'q', 'w', 'xp'];\n\nfunction doNotification(options, notifierOptions, callback) {\n  var is64Bit = os.arch() === 'x64';\n  options = options || {};\n  options = utils.mapToNotifu(options);\n  options.p = options.p || 'Node Notification:';\n\n  var fullNotifierPath = notifier + (is64Bit ? '64' : '') + '.exe';\n  var localNotifier = notifierOptions.customPath || fullNotifierPath;\n\n  if (!options.m) {\n    callback(new Error('Message is required.'));\n    return this;\n  }\n\n  var argsList = utils.constructArgumentList(options, {\n    wrapper: '',\n    noEscape: true,\n    explicitTrue: true,\n    allowedArguments: allowedArguments\n  });\n\n  if (options.wait) {\n    return utils.fileCommand(localNotifier, argsList, function(error, data) {\n      var action = fromErrorCodeToAction(error.code);\n      if (action === 'error') return callback(error, data);\n\n      return callback(null, action);\n    });\n  }\n  utils.immediateFileCommand(localNotifier, argsList, callback);\n}\n\nfunction fromErrorCodeToAction(errorCode) {\n  switch (errorCode) {\n    case 2:\n      return 'timeout';\n    case 3:\n    case 6:\n    case 7:\n      return 'activate';\n    case 4:\n      return 'close';\n    default:\n      return 'error';\n  }\n}\n"]},"metadata":{},"sourceType":"script"}