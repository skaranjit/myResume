{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $SyntaxError = GetIntrinsic('%SyntaxError%');\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $preventExtensions = GetIntrinsic('%Object.preventExtensions%');\n\nvar $gOPD = require('../helpers/getOwnPropertyDescriptor');\n\nvar $gOPN = GetIntrinsic('%Object.getOwnPropertyNames%');\n\nvar forEach = require('../helpers/forEach');\n\nvar DefinePropertyOrThrow = require('./DefinePropertyOrThrow');\n\nvar IsAccessorDescriptor = require('./IsAccessorDescriptor');\n\nvar ToPropertyDescriptor = require('./ToPropertyDescriptor');\n\nvar Type = require('./Type'); // https://ecma-international.org/ecma-262/6.0/#sec-setintegritylevel\n\n\nmodule.exports = function SetIntegrityLevel(O, level) {\n  if (Type(O) !== 'Object') {\n    throw new $TypeError('Assertion failed: Type(O) is not Object');\n  }\n\n  if (level !== 'sealed' && level !== 'frozen') {\n    throw new $TypeError('Assertion failed: `level` must be `\"sealed\"` or `\"frozen\"`');\n  }\n\n  if (!$preventExtensions) {\n    throw new $SyntaxError('SetIntegrityLevel requires native `Object.preventExtensions` support');\n  }\n\n  var status = $preventExtensions(O);\n\n  if (!status) {\n    return false;\n  }\n\n  if (!$gOPN) {\n    throw new $SyntaxError('SetIntegrityLevel requires native `Object.getOwnPropertyNames` support');\n  }\n\n  var theKeys = $gOPN(O);\n\n  if (level === 'sealed') {\n    forEach(theKeys, function (k) {\n      DefinePropertyOrThrow(O, k, {\n        configurable: false\n      });\n    });\n  } else if (level === 'frozen') {\n    forEach(theKeys, function (k) {\n      var currentDesc = $gOPD(O, k);\n\n      if (typeof currentDesc !== 'undefined') {\n        var desc;\n\n        if (IsAccessorDescriptor(ToPropertyDescriptor(currentDesc))) {\n          desc = {\n            configurable: false\n          };\n        } else {\n          desc = {\n            configurable: false,\n            writable: false\n          };\n        }\n\n        DefinePropertyOrThrow(O, k, desc);\n      }\n    });\n  }\n\n  return true;\n};","map":{"version":3,"sources":["/Users/sumankaranjit/myProfile/resume/node_modules/es-abstract/2018/SetIntegrityLevel.js"],"names":["GetIntrinsic","require","$SyntaxError","$TypeError","$preventExtensions","$gOPD","$gOPN","forEach","DefinePropertyOrThrow","IsAccessorDescriptor","ToPropertyDescriptor","Type","module","exports","SetIntegrityLevel","O","level","status","theKeys","k","configurable","currentDesc","desc","writable"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AAEA,IAAIC,YAAY,GAAGF,YAAY,CAAC,eAAD,CAA/B;AACA,IAAIG,UAAU,GAAGH,YAAY,CAAC,aAAD,CAA7B;AACA,IAAII,kBAAkB,GAAGJ,YAAY,CAAC,4BAAD,CAArC;;AACA,IAAIK,KAAK,GAAGJ,OAAO,CAAC,qCAAD,CAAnB;;AACA,IAAIK,KAAK,GAAGN,YAAY,CAAC,8BAAD,CAAxB;;AAEA,IAAIO,OAAO,GAAGN,OAAO,CAAC,oBAAD,CAArB;;AAEA,IAAIO,qBAAqB,GAAGP,OAAO,CAAC,yBAAD,CAAnC;;AACA,IAAIQ,oBAAoB,GAAGR,OAAO,CAAC,wBAAD,CAAlC;;AACA,IAAIS,oBAAoB,GAAGT,OAAO,CAAC,wBAAD,CAAlC;;AACA,IAAIU,IAAI,GAAGV,OAAO,CAAC,QAAD,CAAlB,C,CAEA;;;AAEAW,MAAM,CAACC,OAAP,GAAiB,SAASC,iBAAT,CAA2BC,CAA3B,EAA8BC,KAA9B,EAAqC;AACrD,MAAIL,IAAI,CAACI,CAAD,CAAJ,KAAY,QAAhB,EAA0B;AACzB,UAAM,IAAIZ,UAAJ,CAAe,yCAAf,CAAN;AACA;;AACD,MAAIa,KAAK,KAAK,QAAV,IAAsBA,KAAK,KAAK,QAApC,EAA8C;AAC7C,UAAM,IAAIb,UAAJ,CAAe,4DAAf,CAAN;AACA;;AACD,MAAI,CAACC,kBAAL,EAAyB;AACxB,UAAM,IAAIF,YAAJ,CAAiB,sEAAjB,CAAN;AACA;;AACD,MAAIe,MAAM,GAAGb,kBAAkB,CAACW,CAAD,CAA/B;;AACA,MAAI,CAACE,MAAL,EAAa;AACZ,WAAO,KAAP;AACA;;AACD,MAAI,CAACX,KAAL,EAAY;AACX,UAAM,IAAIJ,YAAJ,CAAiB,wEAAjB,CAAN;AACA;;AACD,MAAIgB,OAAO,GAAGZ,KAAK,CAACS,CAAD,CAAnB;;AACA,MAAIC,KAAK,KAAK,QAAd,EAAwB;AACvBT,IAAAA,OAAO,CAACW,OAAD,EAAU,UAAUC,CAAV,EAAa;AAC7BX,MAAAA,qBAAqB,CAACO,CAAD,EAAII,CAAJ,EAAO;AAAEC,QAAAA,YAAY,EAAE;AAAhB,OAAP,CAArB;AACA,KAFM,CAAP;AAGA,GAJD,MAIO,IAAIJ,KAAK,KAAK,QAAd,EAAwB;AAC9BT,IAAAA,OAAO,CAACW,OAAD,EAAU,UAAUC,CAAV,EAAa;AAC7B,UAAIE,WAAW,GAAGhB,KAAK,CAACU,CAAD,EAAII,CAAJ,CAAvB;;AACA,UAAI,OAAOE,WAAP,KAAuB,WAA3B,EAAwC;AACvC,YAAIC,IAAJ;;AACA,YAAIb,oBAAoB,CAACC,oBAAoB,CAACW,WAAD,CAArB,CAAxB,EAA6D;AAC5DC,UAAAA,IAAI,GAAG;AAAEF,YAAAA,YAAY,EAAE;AAAhB,WAAP;AACA,SAFD,MAEO;AACNE,UAAAA,IAAI,GAAG;AAAEF,YAAAA,YAAY,EAAE,KAAhB;AAAuBG,YAAAA,QAAQ,EAAE;AAAjC,WAAP;AACA;;AACDf,QAAAA,qBAAqB,CAACO,CAAD,EAAII,CAAJ,EAAOG,IAAP,CAArB;AACA;AACD,KAXM,CAAP;AAYA;;AACD,SAAO,IAAP;AACA,CArCD","sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $SyntaxError = GetIntrinsic('%SyntaxError%');\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $preventExtensions = GetIntrinsic('%Object.preventExtensions%');\nvar $gOPD = require('../helpers/getOwnPropertyDescriptor');\nvar $gOPN = GetIntrinsic('%Object.getOwnPropertyNames%');\n\nvar forEach = require('../helpers/forEach');\n\nvar DefinePropertyOrThrow = require('./DefinePropertyOrThrow');\nvar IsAccessorDescriptor = require('./IsAccessorDescriptor');\nvar ToPropertyDescriptor = require('./ToPropertyDescriptor');\nvar Type = require('./Type');\n\n// https://ecma-international.org/ecma-262/6.0/#sec-setintegritylevel\n\nmodule.exports = function SetIntegrityLevel(O, level) {\n\tif (Type(O) !== 'Object') {\n\t\tthrow new $TypeError('Assertion failed: Type(O) is not Object');\n\t}\n\tif (level !== 'sealed' && level !== 'frozen') {\n\t\tthrow new $TypeError('Assertion failed: `level` must be `\"sealed\"` or `\"frozen\"`');\n\t}\n\tif (!$preventExtensions) {\n\t\tthrow new $SyntaxError('SetIntegrityLevel requires native `Object.preventExtensions` support');\n\t}\n\tvar status = $preventExtensions(O);\n\tif (!status) {\n\t\treturn false;\n\t}\n\tif (!$gOPN) {\n\t\tthrow new $SyntaxError('SetIntegrityLevel requires native `Object.getOwnPropertyNames` support');\n\t}\n\tvar theKeys = $gOPN(O);\n\tif (level === 'sealed') {\n\t\tforEach(theKeys, function (k) {\n\t\t\tDefinePropertyOrThrow(O, k, { configurable: false });\n\t\t});\n\t} else if (level === 'frozen') {\n\t\tforEach(theKeys, function (k) {\n\t\t\tvar currentDesc = $gOPD(O, k);\n\t\t\tif (typeof currentDesc !== 'undefined') {\n\t\t\t\tvar desc;\n\t\t\t\tif (IsAccessorDescriptor(ToPropertyDescriptor(currentDesc))) {\n\t\t\t\t\tdesc = { configurable: false };\n\t\t\t\t} else {\n\t\t\t\t\tdesc = { configurable: false, writable: false };\n\t\t\t\t}\n\t\t\t\tDefinePropertyOrThrow(O, k, desc);\n\t\t\t}\n\t\t});\n\t}\n\treturn true;\n};\n"]},"metadata":{},"sourceType":"script"}