{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $isConcatSpreadable = GetIntrinsic('%Symbol.isConcatSpreadable%', true);\n\nvar Get = require('./Get');\n\nvar IsArray = require('./IsArray');\n\nvar ToBoolean = require('./ToBoolean');\n\nvar Type = require('./Type'); // https://ecma-international.org/ecma-262/6.0/#sec-isconcatspreadable\n\n\nmodule.exports = function IsConcatSpreadable(O) {\n  if (Type(O) !== 'Object') {\n    return false;\n  }\n\n  if ($isConcatSpreadable) {\n    var spreadable = Get(O, $isConcatSpreadable);\n\n    if (typeof spreadable !== 'undefined') {\n      return ToBoolean(spreadable);\n    }\n  }\n\n  return IsArray(O);\n};","map":{"version":3,"sources":["/Users/sumankaranjit/myProfile/resume/node_modules/es-abstract/2018/IsConcatSpreadable.js"],"names":["GetIntrinsic","require","$isConcatSpreadable","Get","IsArray","ToBoolean","Type","module","exports","IsConcatSpreadable","O","spreadable"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AAEA,IAAIC,mBAAmB,GAAGF,YAAY,CAAC,6BAAD,EAAgC,IAAhC,CAAtC;;AAEA,IAAIG,GAAG,GAAGF,OAAO,CAAC,OAAD,CAAjB;;AACA,IAAIG,OAAO,GAAGH,OAAO,CAAC,WAAD,CAArB;;AACA,IAAII,SAAS,GAAGJ,OAAO,CAAC,aAAD,CAAvB;;AACA,IAAIK,IAAI,GAAGL,OAAO,CAAC,QAAD,CAAlB,C,CAEA;;;AAEAM,MAAM,CAACC,OAAP,GAAiB,SAASC,kBAAT,CAA4BC,CAA5B,EAA+B;AAC/C,MAAIJ,IAAI,CAACI,CAAD,CAAJ,KAAY,QAAhB,EAA0B;AACzB,WAAO,KAAP;AACA;;AACD,MAAIR,mBAAJ,EAAyB;AACxB,QAAIS,UAAU,GAAGR,GAAG,CAACO,CAAD,EAAIR,mBAAJ,CAApB;;AACA,QAAI,OAAOS,UAAP,KAAsB,WAA1B,EAAuC;AACtC,aAAON,SAAS,CAACM,UAAD,CAAhB;AACA;AACD;;AACD,SAAOP,OAAO,CAACM,CAAD,CAAd;AACA,CAXD","sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $isConcatSpreadable = GetIntrinsic('%Symbol.isConcatSpreadable%', true);\n\nvar Get = require('./Get');\nvar IsArray = require('./IsArray');\nvar ToBoolean = require('./ToBoolean');\nvar Type = require('./Type');\n\n// https://ecma-international.org/ecma-262/6.0/#sec-isconcatspreadable\n\nmodule.exports = function IsConcatSpreadable(O) {\n\tif (Type(O) !== 'Object') {\n\t\treturn false;\n\t}\n\tif ($isConcatSpreadable) {\n\t\tvar spreadable = Get(O, $isConcatSpreadable);\n\t\tif (typeof spreadable !== 'undefined') {\n\t\t\treturn ToBoolean(spreadable);\n\t\t}\n\t}\n\treturn IsArray(O);\n};\n"]},"metadata":{},"sourceType":"script"}