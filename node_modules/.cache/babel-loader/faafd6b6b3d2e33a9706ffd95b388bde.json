{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar DefineOwnProperty = require('../helpers/DefineOwnProperty');\n\nvar isPropertyDescriptor = require('../helpers/isPropertyDescriptor');\n\nvar isSamePropertyDescriptor = require('../helpers/isSamePropertyDescriptor');\n\nvar FromPropertyDescriptor = require('./FromPropertyDescriptor');\n\nvar IsAccessorDescriptor = require('./IsAccessorDescriptor');\n\nvar IsDataDescriptor = require('./IsDataDescriptor');\n\nvar IsGenericDescriptor = require('./IsGenericDescriptor');\n\nvar IsPropertyKey = require('./IsPropertyKey');\n\nvar SameValue = require('./SameValue');\n\nvar Type = require('./Type'); // https://ecma-international.org/ecma-262/6.0/#sec-validateandapplypropertydescriptor\n// https://ecma-international.org/ecma-262/8.0/#sec-validateandapplypropertydescriptor\n// eslint-disable-next-line max-lines-per-function, max-statements, max-params\n\n\nmodule.exports = function ValidateAndApplyPropertyDescriptor(O, P, extensible, Desc, current) {\n  // this uses the ES2017+ logic, since it fixes a number of bugs in the ES2015 logic.\n  var oType = Type(O);\n\n  if (oType !== 'Undefined' && oType !== 'Object') {\n    throw new $TypeError('Assertion failed: O must be undefined or an Object');\n  }\n\n  if (Type(extensible) !== 'Boolean') {\n    throw new $TypeError('Assertion failed: extensible must be a Boolean');\n  }\n\n  if (!isPropertyDescriptor({\n    Type: Type,\n    IsDataDescriptor: IsDataDescriptor,\n    IsAccessorDescriptor: IsAccessorDescriptor\n  }, Desc)) {\n    throw new $TypeError('Assertion failed: Desc must be a Property Descriptor');\n  }\n\n  if (Type(current) !== 'Undefined' && !isPropertyDescriptor({\n    Type: Type,\n    IsDataDescriptor: IsDataDescriptor,\n    IsAccessorDescriptor: IsAccessorDescriptor\n  }, current)) {\n    throw new $TypeError('Assertion failed: current must be a Property Descriptor, or undefined');\n  }\n\n  if (oType !== 'Undefined' && !IsPropertyKey(P)) {\n    throw new $TypeError('Assertion failed: if O is not undefined, P must be a Property Key');\n  }\n\n  if (Type(current) === 'Undefined') {\n    if (!extensible) {\n      return false;\n    }\n\n    if (IsGenericDescriptor(Desc) || IsDataDescriptor(Desc)) {\n      if (oType !== 'Undefined') {\n        DefineOwnProperty(IsDataDescriptor, SameValue, FromPropertyDescriptor, O, P, {\n          '[[Configurable]]': Desc['[[Configurable]]'],\n          '[[Enumerable]]': Desc['[[Enumerable]]'],\n          '[[Value]]': Desc['[[Value]]'],\n          '[[Writable]]': Desc['[[Writable]]']\n        });\n      }\n    } else {\n      if (!IsAccessorDescriptor(Desc)) {\n        throw new $TypeError('Assertion failed: Desc is not an accessor descriptor');\n      }\n\n      if (oType !== 'Undefined') {\n        return DefineOwnProperty(IsDataDescriptor, SameValue, FromPropertyDescriptor, O, P, Desc);\n      }\n    }\n\n    return true;\n  }\n\n  if (IsGenericDescriptor(Desc) && !('[[Configurable]]' in Desc) && !('[[Enumerable]]' in Desc)) {\n    return true;\n  }\n\n  if (isSamePropertyDescriptor({\n    SameValue: SameValue\n  }, Desc, current)) {\n    return true; // removed by ES2017, but should still be correct\n  } // \"if every field in Desc is absent, return true\" can't really match the assertion that it's a Property Descriptor\n\n\n  if (!current['[[Configurable]]']) {\n    if (Desc['[[Configurable]]']) {\n      return false;\n    }\n\n    if ('[[Enumerable]]' in Desc && !Desc['[[Enumerable]]'] === !!current['[[Enumerable]]']) {\n      return false;\n    }\n  }\n\n  if (IsGenericDescriptor(Desc)) {// no further validation is required.\n  } else if (IsDataDescriptor(current) !== IsDataDescriptor(Desc)) {\n    if (!current['[[Configurable]]']) {\n      return false;\n    }\n\n    if (IsDataDescriptor(current)) {\n      if (oType !== 'Undefined') {\n        DefineOwnProperty(IsDataDescriptor, SameValue, FromPropertyDescriptor, O, P, {\n          '[[Configurable]]': current['[[Configurable]]'],\n          '[[Enumerable]]': current['[[Enumerable]]'],\n          '[[Get]]': undefined\n        });\n      }\n    } else if (oType !== 'Undefined') {\n      DefineOwnProperty(IsDataDescriptor, SameValue, FromPropertyDescriptor, O, P, {\n        '[[Configurable]]': current['[[Configurable]]'],\n        '[[Enumerable]]': current['[[Enumerable]]'],\n        '[[Value]]': undefined\n      });\n    }\n  } else if (IsDataDescriptor(current) && IsDataDescriptor(Desc)) {\n    if (!current['[[Configurable]]'] && !current['[[Writable]]']) {\n      if ('[[Writable]]' in Desc && Desc['[[Writable]]']) {\n        return false;\n      }\n\n      if ('[[Value]]' in Desc && !SameValue(Desc['[[Value]]'], current['[[Value]]'])) {\n        return false;\n      }\n\n      return true;\n    }\n  } else if (IsAccessorDescriptor(current) && IsAccessorDescriptor(Desc)) {\n    if (!current['[[Configurable]]']) {\n      if ('[[Set]]' in Desc && !SameValue(Desc['[[Set]]'], current['[[Set]]'])) {\n        return false;\n      }\n\n      if ('[[Get]]' in Desc && !SameValue(Desc['[[Get]]'], current['[[Get]]'])) {\n        return false;\n      }\n\n      return true;\n    }\n  } else {\n    throw new $TypeError('Assertion failed: current and Desc are not both data, both accessors, or one accessor and one data.');\n  }\n\n  if (oType !== 'Undefined') {\n    return DefineOwnProperty(IsDataDescriptor, SameValue, FromPropertyDescriptor, O, P, Desc);\n  }\n\n  return true;\n};","map":{"version":3,"sources":["/Users/sumankaranjit/myProfile/resume/node_modules/es-abstract/2018/ValidateAndApplyPropertyDescriptor.js"],"names":["GetIntrinsic","require","$TypeError","DefineOwnProperty","isPropertyDescriptor","isSamePropertyDescriptor","FromPropertyDescriptor","IsAccessorDescriptor","IsDataDescriptor","IsGenericDescriptor","IsPropertyKey","SameValue","Type","module","exports","ValidateAndApplyPropertyDescriptor","O","P","extensible","Desc","current","oType","undefined"],"mappings":"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","sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar DefineOwnProperty = require('../helpers/DefineOwnProperty');\nvar isPropertyDescriptor = require('../helpers/isPropertyDescriptor');\nvar isSamePropertyDescriptor = require('../helpers/isSamePropertyDescriptor');\n\nvar FromPropertyDescriptor = require('./FromPropertyDescriptor');\nvar IsAccessorDescriptor = require('./IsAccessorDescriptor');\nvar IsDataDescriptor = require('./IsDataDescriptor');\nvar IsGenericDescriptor = require('./IsGenericDescriptor');\nvar IsPropertyKey = require('./IsPropertyKey');\nvar SameValue = require('./SameValue');\nvar Type = require('./Type');\n\n// https://ecma-international.org/ecma-262/6.0/#sec-validateandapplypropertydescriptor\n// https://ecma-international.org/ecma-262/8.0/#sec-validateandapplypropertydescriptor\n\n// eslint-disable-next-line max-lines-per-function, max-statements, max-params\nmodule.exports = function ValidateAndApplyPropertyDescriptor(O, P, extensible, Desc, current) {\n\t// this uses the ES2017+ logic, since it fixes a number of bugs in the ES2015 logic.\n\tvar oType = Type(O);\n\tif (oType !== 'Undefined' && oType !== 'Object') {\n\t\tthrow new $TypeError('Assertion failed: O must be undefined or an Object');\n\t}\n\tif (Type(extensible) !== 'Boolean') {\n\t\tthrow new $TypeError('Assertion failed: extensible must be a Boolean');\n\t}\n\tif (!isPropertyDescriptor({\n\t\tType: Type,\n\t\tIsDataDescriptor: IsDataDescriptor,\n\t\tIsAccessorDescriptor: IsAccessorDescriptor\n\t}, Desc)) {\n\t\tthrow new $TypeError('Assertion failed: Desc must be a Property Descriptor');\n\t}\n\tif (Type(current) !== 'Undefined' && !isPropertyDescriptor({\n\t\tType: Type,\n\t\tIsDataDescriptor: IsDataDescriptor,\n\t\tIsAccessorDescriptor: IsAccessorDescriptor\n\t}, current)) {\n\t\tthrow new $TypeError('Assertion failed: current must be a Property Descriptor, or undefined');\n\t}\n\tif (oType !== 'Undefined' && !IsPropertyKey(P)) {\n\t\tthrow new $TypeError('Assertion failed: if O is not undefined, P must be a Property Key');\n\t}\n\tif (Type(current) === 'Undefined') {\n\t\tif (!extensible) {\n\t\t\treturn false;\n\t\t}\n\t\tif (IsGenericDescriptor(Desc) || IsDataDescriptor(Desc)) {\n\t\t\tif (oType !== 'Undefined') {\n\t\t\t\tDefineOwnProperty(\n\t\t\t\t\tIsDataDescriptor,\n\t\t\t\t\tSameValue,\n\t\t\t\t\tFromPropertyDescriptor,\n\t\t\t\t\tO,\n\t\t\t\t\tP,\n\t\t\t\t\t{\n\t\t\t\t\t\t'[[Configurable]]': Desc['[[Configurable]]'],\n\t\t\t\t\t\t'[[Enumerable]]': Desc['[[Enumerable]]'],\n\t\t\t\t\t\t'[[Value]]': Desc['[[Value]]'],\n\t\t\t\t\t\t'[[Writable]]': Desc['[[Writable]]']\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tif (!IsAccessorDescriptor(Desc)) {\n\t\t\t\tthrow new $TypeError('Assertion failed: Desc is not an accessor descriptor');\n\t\t\t}\n\t\t\tif (oType !== 'Undefined') {\n\t\t\t\treturn DefineOwnProperty(\n\t\t\t\t\tIsDataDescriptor,\n\t\t\t\t\tSameValue,\n\t\t\t\t\tFromPropertyDescriptor,\n\t\t\t\t\tO,\n\t\t\t\t\tP,\n\t\t\t\t\tDesc\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\tif (IsGenericDescriptor(Desc) && !('[[Configurable]]' in Desc) && !('[[Enumerable]]' in Desc)) {\n\t\treturn true;\n\t}\n\tif (isSamePropertyDescriptor({ SameValue: SameValue }, Desc, current)) {\n\t\treturn true; // removed by ES2017, but should still be correct\n\t}\n\t// \"if every field in Desc is absent, return true\" can't really match the assertion that it's a Property Descriptor\n\tif (!current['[[Configurable]]']) {\n\t\tif (Desc['[[Configurable]]']) {\n\t\t\treturn false;\n\t\t}\n\t\tif ('[[Enumerable]]' in Desc && !Desc['[[Enumerable]]'] === !!current['[[Enumerable]]']) {\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (IsGenericDescriptor(Desc)) {\n\t\t// no further validation is required.\n\t} else if (IsDataDescriptor(current) !== IsDataDescriptor(Desc)) {\n\t\tif (!current['[[Configurable]]']) {\n\t\t\treturn false;\n\t\t}\n\t\tif (IsDataDescriptor(current)) {\n\t\t\tif (oType !== 'Undefined') {\n\t\t\t\tDefineOwnProperty(\n\t\t\t\t\tIsDataDescriptor,\n\t\t\t\t\tSameValue,\n\t\t\t\t\tFromPropertyDescriptor,\n\t\t\t\t\tO,\n\t\t\t\t\tP,\n\t\t\t\t\t{\n\t\t\t\t\t\t'[[Configurable]]': current['[[Configurable]]'],\n\t\t\t\t\t\t'[[Enumerable]]': current['[[Enumerable]]'],\n\t\t\t\t\t\t'[[Get]]': undefined\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t} else if (oType !== 'Undefined') {\n\t\t\tDefineOwnProperty(\n\t\t\t\tIsDataDescriptor,\n\t\t\t\tSameValue,\n\t\t\t\tFromPropertyDescriptor,\n\t\t\t\tO,\n\t\t\t\tP,\n\t\t\t\t{\n\t\t\t\t\t'[[Configurable]]': current['[[Configurable]]'],\n\t\t\t\t\t'[[Enumerable]]': current['[[Enumerable]]'],\n\t\t\t\t\t'[[Value]]': undefined\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t} else if (IsDataDescriptor(current) && IsDataDescriptor(Desc)) {\n\t\tif (!current['[[Configurable]]'] && !current['[[Writable]]']) {\n\t\t\tif ('[[Writable]]' in Desc && Desc['[[Writable]]']) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif ('[[Value]]' in Desc && !SameValue(Desc['[[Value]]'], current['[[Value]]'])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t} else if (IsAccessorDescriptor(current) && IsAccessorDescriptor(Desc)) {\n\t\tif (!current['[[Configurable]]']) {\n\t\t\tif ('[[Set]]' in Desc && !SameValue(Desc['[[Set]]'], current['[[Set]]'])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif ('[[Get]]' in Desc && !SameValue(Desc['[[Get]]'], current['[[Get]]'])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t} else {\n\t\tthrow new $TypeError('Assertion failed: current and Desc are not both data, both accessors, or one accessor and one data.');\n\t}\n\tif (oType !== 'Undefined') {\n\t\treturn DefineOwnProperty(\n\t\t\tIsDataDescriptor,\n\t\t\tSameValue,\n\t\t\tFromPropertyDescriptor,\n\t\t\tO,\n\t\t\tP,\n\t\t\tDesc\n\t\t);\n\t}\n\treturn true;\n};\n"]},"metadata":{},"sourceType":"script"}