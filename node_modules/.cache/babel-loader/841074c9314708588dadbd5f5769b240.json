{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar callBound = require('call-bind/callBound');\n\nvar $SymbolToString = callBound('Symbol.prototype.toString', true);\n\nvar Type = require('./Type'); // https://ecma-international.org/ecma-262/6.0/#sec-symboldescriptivestring\n\n\nmodule.exports = function SymbolDescriptiveString(sym) {\n  if (Type(sym) !== 'Symbol') {\n    throw new $TypeError('Assertion failed: `sym` must be a Symbol');\n  }\n\n  return $SymbolToString(sym);\n};","map":{"version":3,"sources":["/Users/sumankaranjit/myProfile/resume/node_modules/es-abstract/2018/SymbolDescriptiveString.js"],"names":["GetIntrinsic","require","$TypeError","callBound","$SymbolToString","Type","module","exports","SymbolDescriptiveString","sym"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AAEA,IAAIC,UAAU,GAAGF,YAAY,CAAC,aAAD,CAA7B;;AAEA,IAAIG,SAAS,GAAGF,OAAO,CAAC,qBAAD,CAAvB;;AAEA,IAAIG,eAAe,GAAGD,SAAS,CAAC,2BAAD,EAA8B,IAA9B,CAA/B;;AAEA,IAAIE,IAAI,GAAGJ,OAAO,CAAC,QAAD,CAAlB,C,CAEA;;;AAEAK,MAAM,CAACC,OAAP,GAAiB,SAASC,uBAAT,CAAiCC,GAAjC,EAAsC;AACtD,MAAIJ,IAAI,CAACI,GAAD,CAAJ,KAAc,QAAlB,EAA4B;AAC3B,UAAM,IAAIP,UAAJ,CAAe,0CAAf,CAAN;AACA;;AACD,SAAOE,eAAe,CAACK,GAAD,CAAtB;AACA,CALD","sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar callBound = require('call-bind/callBound');\n\nvar $SymbolToString = callBound('Symbol.prototype.toString', true);\n\nvar Type = require('./Type');\n\n// https://ecma-international.org/ecma-262/6.0/#sec-symboldescriptivestring\n\nmodule.exports = function SymbolDescriptiveString(sym) {\n\tif (Type(sym) !== 'Symbol') {\n\t\tthrow new $TypeError('Assertion failed: `sym` must be a Symbol');\n\t}\n\treturn $SymbolToString(sym);\n};\n"]},"metadata":{},"sourceType":"script"}