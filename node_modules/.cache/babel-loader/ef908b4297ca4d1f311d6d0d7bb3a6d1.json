{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $String = GetIntrinsic('%String%');\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar Type = require('./Type'); // https://262.ecma-international.org/9.0/#sec-tostring-applied-to-the-number-type\n\n\nmodule.exports = function NumberToString(m) {\n  if (Type(m) !== 'Number') {\n    throw new $TypeError('Assertion failed: \"m\" must be a String');\n  }\n\n  return $String(m);\n};","map":{"version":3,"sources":["/Users/sumankaranjit/myProfile/resume/node_modules/es-abstract/2018/NumberToString.js"],"names":["GetIntrinsic","require","$String","$TypeError","Type","module","exports","NumberToString","m"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AAEA,IAAIC,OAAO,GAAGF,YAAY,CAAC,UAAD,CAA1B;AACA,IAAIG,UAAU,GAAGH,YAAY,CAAC,aAAD,CAA7B;;AAEA,IAAII,IAAI,GAAGH,OAAO,CAAC,QAAD,CAAlB,C,CAEA;;;AAEAI,MAAM,CAACC,OAAP,GAAiB,SAASC,cAAT,CAAwBC,CAAxB,EAA2B;AAC3C,MAAIJ,IAAI,CAACI,CAAD,CAAJ,KAAY,QAAhB,EAA0B;AACzB,UAAM,IAAIL,UAAJ,CAAe,wCAAf,CAAN;AACA;;AAED,SAAOD,OAAO,CAACM,CAAD,CAAd;AACA,CAND","sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $String = GetIntrinsic('%String%');\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar Type = require('./Type');\n\n// https://262.ecma-international.org/9.0/#sec-tostring-applied-to-the-number-type\n\nmodule.exports = function NumberToString(m) {\n\tif (Type(m) !== 'Number') {\n\t\tthrow new $TypeError('Assertion failed: \"m\" must be a String');\n\t}\n\n\treturn $String(m);\n};\n\n"]},"metadata":{},"sourceType":"script"}