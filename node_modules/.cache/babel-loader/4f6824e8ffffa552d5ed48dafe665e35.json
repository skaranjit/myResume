{"ast":null,"code":"var _jsxFileName = \"/Users/sumankaranjit/myProfile/resume/src/pages/Profile.js\";\nimport { request } from \"dom-helpers/cjs/animationFrame\";\nimport React, { Component, ReactPropTypes, useRef } from \"react\";\nimport Canvas from \"./../components/canvas\";\nimport ReactDOM from \"react-dom\";\nimport { WindowsBalloon } from \"node-notifier\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Profile extends Component {\n  componentDidMount() {\n    requestAnimationFrame(() => this.updateCanvas);\n  }\n\n  componentDidUpdate() {\n    ReactDOM.findDOMNode(this).addEventListener(\"scroll\", requestAnimationFrame(this.updateCanvas()));\n  }\n\n  constructor(prop) {\n    super(props);\n    this.canvasRef = useRef();\n  }\n\n  handleScrollEvent() {\n    const canvas = document.querySelector(\"canvas\");\n    const html = document.getElementById(\"root\");\n    const frameCount = 147;\n    canvas.width = 1158;\n    canvas.height = 770;\n    const ctx = canvas.getContext(\"2d\");\n    var imageObj1 = new Image();\n    const scrollTop = html.scrollTop;\n    const maxScrollTop = window.innerHeight - html.scrollHeight;\n    const scrollFraction = scrollTop / maxScrollTop;\n    const frameIndex = Math.min(frameCount - 1, Math.floor(scrollFraction * frameCount));\n    this.updateImage(imageObj1, frameIndex + 1, ctx);\n    console.log(scrollTop, maxScrollTop, frameIndex);\n  }\n\n  getImage(index) {\n    return \"https://www.apple.com/105/media/us/airpods-pro/2019/1299e2f5_9206_4470_b28e_08307a42f19b/anim/sequence/large/01-hero-lightpass/000\" + index + \".jpg\";\n  }\n\n  updateImage(imgObj, index, ctx) {\n    imgObj.src = this.getImage(index);\n    ctx.drawImage(imgObj, 0, 20);\n  }\n\n  updateCanvas() {\n    const canvas = document.querySelector(\"canvas\");\n    const html = document.getElementById(\"root\");\n    const frameCount = 147;\n    canvas.width = 1158;\n    canvas.height = 770;\n    const ctx = canvas.getContext(\"2d\");\n    var imageObj1 = new Image();\n    imageObj1.src = this.getImage(1);\n\n    imageObj1.onload = function () {\n      ctx.drawImage(imageObj1, 0, 0);\n    };\n\n    const scrollTop = html.scrollTop;\n    const maxScrollTop = html.scrollHeight - window.innerHeight;\n    const scrollFraction = scrollTop / maxScrollTop;\n    const frameIndex = Math.min(frameCount - 1, Math.floor(scrollFraction * frameCount));\n    this.updateImage(imageObj1, frameIndex + 1, ctx);\n    console.log(scrollTop, maxScrollTop, frameIndex); // this.updateImage(imageObj1, frameIndex + 1, ctx);\n    // imageObj1.onload = function () {\n    //   ctx.drawImage(imageObj1, 20, 20);\n    // };\n    // window.addEventListener(\"scroll\", () => {\n    //   const scrollTop = html.scrollTop;\n    //   const maxScrollTop = html.scrollHeight - window.innerHeight;\n    //   const scrollFraction = scrollTop / maxScrollTop;\n    //   const frameIndex = Math.min(\n    //     frameCount - 1,\n    //     Math.floor(scrollFraction * frameCount)\n    //   );\n    //   console.log(maxScrollTop);\n    // });\n  } //   const draw = (ctx, frameCount) => {\n  // const html = document.documentElement;\n  // const canvas = document.createElement(\"canvas\");\n  // const ctx = canvas.id(\"profile\");\n  // const context = canvas.getContext(\"2d\");\n  // canvas.width = 1158;\n  // canvas.height =1000;\n  // // canvas.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n  // // ctx.beginPath();\n  // // ctx.fill();\n  // const img = new Image();\n  // img.src = currentFrame(1);\n  // img.onload = function () {\n  //   context.drawImage(img, 0, 0);\n  // };\n  // const updateImage = (index) => {\n  //   img.src = currentFrame(index);\n  //   ctx.drawImage(img, 0, 0);\n  // };\n  //   requestAnimationFrame(() => updateImage(frameCount + 1));\n  //   console.log(maxScrollTop);\n  // });\n  //};\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: \"canvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default Profile;","map":{"version":3,"sources":["/Users/sumankaranjit/myProfile/resume/src/pages/Profile.js"],"names":["request","React","Component","ReactPropTypes","useRef","Canvas","ReactDOM","WindowsBalloon","Profile","componentDidMount","requestAnimationFrame","updateCanvas","componentDidUpdate","findDOMNode","addEventListener","constructor","prop","props","canvasRef","handleScrollEvent","canvas","document","querySelector","html","getElementById","frameCount","width","height","ctx","getContext","imageObj1","Image","scrollTop","maxScrollTop","window","innerHeight","scrollHeight","scrollFraction","frameIndex","Math","min","floor","updateImage","console","log","getImage","index","imgObj","src","drawImage","onload","render"],"mappings":"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","sourcesContent":["import { request } from \"dom-helpers/cjs/animationFrame\";\nimport React, { Component, ReactPropTypes, useRef } from \"react\";\nimport Canvas from \"./../components/canvas\";\nimport ReactDOM from \"react-dom\";\nimport { WindowsBalloon } from \"node-notifier\";\n\nclass Profile extends Component {\n  componentDidMount() {\n    requestAnimationFrame(() => this.updateCanvas);\n  }\n  componentDidUpdate() {\n    ReactDOM.findDOMNode(this).addEventListener(\n      \"scroll\",\n      requestAnimationFrame(this.updateCanvas())\n    );\n  }\n  constructor(prop) {\n    super(props);\n    this.canvasRef = useRef();\n  }\n  handleScrollEvent() {\n    const canvas = document.querySelector(\"canvas\");\n    const html = document.getElementById(\"root\");\n    const frameCount = 147;\n    canvas.width = 1158;\n    canvas.height = 770;\n    const ctx = canvas.getContext(\"2d\");\n    var imageObj1 = new Image();\n\n    const scrollTop = html.scrollTop;\n    const maxScrollTop = window.innerHeight - html.scrollHeight;\n    const scrollFraction = scrollTop / maxScrollTop;\n    const frameIndex = Math.min(\n      frameCount - 1,\n      Math.floor(scrollFraction * frameCount)\n    );\n\n    this.updateImage(imageObj1, frameIndex + 1, ctx);\n\n    console.log(scrollTop, maxScrollTop, frameIndex);\n  }\n  getImage(index) {\n    return (\n      \"https://www.apple.com/105/media/us/airpods-pro/2019/1299e2f5_9206_4470_b28e_08307a42f19b/anim/sequence/large/01-hero-lightpass/000\" +\n      index +\n      \".jpg\"\n    );\n  }\n  updateImage(imgObj, index, ctx) {\n    imgObj.src = this.getImage(index);\n    ctx.drawImage(imgObj, 0, 20);\n  }\n\n  updateCanvas() {\n    const canvas = document.querySelector(\"canvas\");\n    const html = document.getElementById(\"root\");\n    const frameCount = 147;\n    canvas.width = 1158;\n    canvas.height = 770;\n    const ctx = canvas.getContext(\"2d\");\n    var imageObj1 = new Image();\n    imageObj1.src = this.getImage(1);\n    imageObj1.onload = function () {\n      ctx.drawImage(imageObj1, 0, 0);\n    };\n    const scrollTop = html.scrollTop;\n    const maxScrollTop = html.scrollHeight - window.innerHeight;\n    const scrollFraction = scrollTop / maxScrollTop;\n    const frameIndex = Math.min(\n      frameCount - 1,\n      Math.floor(scrollFraction * frameCount)\n    );\n\n    this.updateImage(imageObj1, frameIndex + 1, ctx);\n\n    console.log(scrollTop, maxScrollTop, frameIndex);\n    // this.updateImage(imageObj1, frameIndex + 1, ctx);\n\n    // imageObj1.onload = function () {\n    //   ctx.drawImage(imageObj1, 20, 20);\n    // };\n    // window.addEventListener(\"scroll\", () => {\n    //   const scrollTop = html.scrollTop;\n    //   const maxScrollTop = html.scrollHeight - window.innerHeight;\n    //   const scrollFraction = scrollTop / maxScrollTop;\n    //   const frameIndex = Math.min(\n    //     frameCount - 1,\n    //     Math.floor(scrollFraction * frameCount)\n    //   );\n\n    //   console.log(maxScrollTop);\n    // });\n  }\n\n  //   const draw = (ctx, frameCount) => {\n\n  // const html = document.documentElement;\n  // const canvas = document.createElement(\"canvas\");\n  // const ctx = canvas.id(\"profile\");\n  // const context = canvas.getContext(\"2d\");\n  // canvas.width = 1158;\n  // canvas.height =1000;\n  // // canvas.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n  // // ctx.beginPath();\n  // // ctx.fill();\n  // const img = new Image();\n  // img.src = currentFrame(1);\n  // img.onload = function () {\n  //   context.drawImage(img, 0, 0);\n  // };\n  // const updateImage = (index) => {\n  //   img.src = currentFrame(index);\n  //   ctx.drawImage(img, 0, 0);\n  // };\n\n  //   requestAnimationFrame(() => updateImage(frameCount + 1));\n  //   console.log(maxScrollTop);\n  // });\n  //};\n\n  render() {\n    return <canvas ref=\"canvas\"></canvas>;\n  }\n}\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}