{"ast":null,"code":"var _jsxFileName = \"/Users/sumankaranjit/myProfile/resume/src/pages/Profile.js\";\n// import React, { createRef, useEffect } from \"react\";\n// const canvasRef = createRef();\n// function getImage(index) {\n//   return (\n//     // \"https://www.apple.com/105/media/us/airpods-pro/2019/1299e2f5_9206_4470_b28e_08307a42f19b/anim/sequence/large/01-hero-lightpass/\" +\n//     // index.toString().padStart(4, 0) +\n//     // \".jpg\"\n//     process.env.PUBLIC_URL + \"/img/img\" + index.toString() + \".png\"\n//   );\n// }\n// const updateImage = (imgObj, index, ctx) => {\n//   if (index === 0 || index === null) {\n//     index = 1;\n//   }\n//   imgObj.src = getImage(index);\n//   console.log(imgObj);\n//   ctx.drawImage(imgObj, 0, 0);\n// };\n// const getAllImg = async () => {\n//   var x = 0;\n//   while (x != 7) {\n//     x++;\n//     const imgObj = new Image();\n//     imgObj.src = await getImage(x);\n//   }\n// };\n// function Profile() {\n//   getAllImg();\n//   const updateCanvas = async () => {\n//     const canvas = canvasRef.current;\n//     const ctx = canvas.getContext(\"2d\");\n//     const frameCount = 7;\n//     var imageObj1 = document.getElementById(\"source\");\n//     canvas.width = imageObj1.width;\n//     canvas.height = imageObj1.height;\n//     const html = document.documentElement;\n//     const scrollTop = html.scrollTop;\n//     const maxScrollTop = html.scrollHeight - window.innerHeight;\n//     const scrollFraction = scrollTop / maxScrollTop;\n//     console.log(scrollTop, scrollFraction);\n//     const frameIndex = Math.min(\n//       frameCount - 1,\n//       Math.floor(scrollFraction * frameCount)\n//     );\n//     await updateImage(imageObj1, frameIndex + 1, ctx);\n//     console.log(frameIndex);\n//   };\n//   useEffect(() => {\n//     document.onscroll = async () => {\n//       await requestAnimationFrame(() => {\n//         updateCanvas();\n//       });\n//       return () => {\n//         //window.removeEventListener(onscroll);\n//         // cancelAnimationFrame();\n//       };\n//     };\n//   }, []);\n//   return (\n//     <canvas ref={canvasRef} style={{}}>\n//       <img id=\"source\" src=\"./../assets/img/0001.png\"></img>\n//     </canvas>\n//   );\n// }\n// export default Profile;\nimport React, { Component, createRef } from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport { findAllInRenderedTree } from \"react-dom/test-utils\";\nimport { ReactDOM } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst checkImage = path => new Promise(resolve => {\n  const img = new Image();\n  img.src = path;\n\n  img.onload = () => resolve(path);\n});\n\nclass Profile extends Component {\n  constructor() {\n    super();\n\n    this.updateImage = (imgObj, index, ctx) => {\n      if (index === 0 || index === null) {\n        index = 1;\n      }\n\n      imgObj = this.getImage(index);\n\n      imgObj.onload = () => {\n        ctx.drawImage(imgObj, 0, 0);\n      };\n    };\n\n    this.getAllImg = async () => {\n      var x = 0;\n\n      while (x !== 179) {\n        x++;\n        var imgObj = new Image();\n        imgObj = this.getImage(x);\n        await imgObj.onload;\n      }\n    };\n\n    this.canvasRef = /*#__PURE__*/createRef();\n    this.state = {\n      canvas: document.createElement(\"canvas\", {})\n    };\n    this.frameIndex = 0;\n  }\n\n  getImage(index) {\n    const imgUrl = // \"https://www.apple.com/105/media/us/airpods-pro/2019/1299e2f5_9206_4470_b28e_08307a42f19b/anim/sequence/large/01-hero-lightpass/\" +\n    // index.toString().padStart(4, 0) +\n    // \".jpg\";\n    process.env.PUBLIC_URL + \"/img/img\" + index.toString().padStart(5, 0) + \".jpeg\";\n    const imgObj = new Image();\n    const myPromise = checkImage(imgUrl);\n    myPromise.then(response => {\n      imgObj.src = imgUrl;\n      console.log(\"resolved\");\n    }).catch(error => console.error(error));\n    return imgObj;\n  }\n\n  showImage(canvas) {\n    var imgO = new Image();\n    imgO = this.getImage(1);\n\n    imgO.onload = () => {\n      const ctx = canvas.getContext(\"2d\");\n      canvas.width = imgO.width;\n      canvas.height = imgO.height;\n      console.log(imgO.width, imgO.height);\n      ctx.drawImage(imgO, 0, 0);\n    };\n  }\n\n  showNone() {\n    const canvas = this.canvasRef.current;\n    canvas.width = 0;\n    canvas.height = 0;\n  }\n\n  updateCanvas(canvas) {\n    const frameCount = 179;\n    var imageObj1 = new Image();\n    imageObj1 = this.getImage(1);\n    const ctx = canvas.getContext(\"2d\");\n    const html = document.documentElement;\n    const scrollTop = html.scrollTop;\n    const maxScrollTop = html.scrollHeight - window.innerHeight;\n    const scrollFraction = scrollTop / maxScrollTop;\n    this.frameIndex = Math.min(frameCount - 1, Math.floor(scrollFraction * frameCount));\n    this.updateImage(imageObj1, this.frameIndex + 1, ctx);\n  }\n\n  componentDidMount() {\n    document.getElementById(\"canvas-wrapper\").insertAdjacentElement(\"beforebegin\", this.state.canvas);\n    console.log(this.state.canvas);\n    this.getAllImg();\n    this.showImage(this.state.canvas);\n\n    window.onscroll = () => {\n      var c = document.createElement(\"canvas\");\n      var x = document.getElementById(\"canvas-wrapper\").insertAdjacentElement(\"afterbegin\", c);\n      this.setState({\n        canvas: c\n      });\n      console.log(c);\n      requestAnimationFrame(() => {\n        this.updateCanvas(this.state.canvas);\n      });\n    };\n  }\n\n  componentWillUnmount() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"canvas-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: this.canvasRef,\n        id: \"drawImage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Profile;","map":{"version":3,"sources":["/Users/sumankaranjit/myProfile/resume/src/pages/Profile.js"],"names":["React","Component","createRef","Container","Row","findAllInRenderedTree","ReactDOM","checkImage","path","Promise","resolve","img","Image","src","onload","Profile","constructor","updateImage","imgObj","index","ctx","getImage","drawImage","getAllImg","x","canvasRef","state","canvas","document","createElement","frameIndex","imgUrl","process","env","PUBLIC_URL","toString","padStart","myPromise","then","response","console","log","catch","error","showImage","imgO","getContext","width","height","showNone","current","updateCanvas","frameCount","imageObj1","html","documentElement","scrollTop","maxScrollTop","scrollHeight","window","innerHeight","scrollFraction","Math","min","floor","componentDidMount","getElementById","insertAdjacentElement","onscroll","c","setState","requestAnimationFrame","componentWillUnmount","render"],"mappings":"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","sourcesContent":["// import React, { createRef, useEffect } from \"react\";\n// const canvasRef = createRef();\n// function getImage(index) {\n//   return (\n//     // \"https://www.apple.com/105/media/us/airpods-pro/2019/1299e2f5_9206_4470_b28e_08307a42f19b/anim/sequence/large/01-hero-lightpass/\" +\n//     // index.toString().padStart(4, 0) +\n//     // \".jpg\"\n//     process.env.PUBLIC_URL + \"/img/img\" + index.toString() + \".png\"\n//   );\n// }\n// const updateImage = (imgObj, index, ctx) => {\n//   if (index === 0 || index === null) {\n//     index = 1;\n//   }\n//   imgObj.src = getImage(index);\n//   console.log(imgObj);\n//   ctx.drawImage(imgObj, 0, 0);\n// };\n// const getAllImg = async () => {\n//   var x = 0;\n//   while (x != 7) {\n//     x++;\n//     const imgObj = new Image();\n\n//     imgObj.src = await getImage(x);\n//   }\n// };\n// function Profile() {\n//   getAllImg();\n//   const updateCanvas = async () => {\n//     const canvas = canvasRef.current;\n//     const ctx = canvas.getContext(\"2d\");\n//     const frameCount = 7;\n//     var imageObj1 = document.getElementById(\"source\");\n\n//     canvas.width = imageObj1.width;\n//     canvas.height = imageObj1.height;\n\n//     const html = document.documentElement;\n//     const scrollTop = html.scrollTop;\n//     const maxScrollTop = html.scrollHeight - window.innerHeight;\n//     const scrollFraction = scrollTop / maxScrollTop;\n//     console.log(scrollTop, scrollFraction);\n//     const frameIndex = Math.min(\n//       frameCount - 1,\n//       Math.floor(scrollFraction * frameCount)\n//     );\n\n//     await updateImage(imageObj1, frameIndex + 1, ctx);\n\n//     console.log(frameIndex);\n//   };\n\n//   useEffect(() => {\n//     document.onscroll = async () => {\n//       await requestAnimationFrame(() => {\n//         updateCanvas();\n//       });\n\n//       return () => {\n//         //window.removeEventListener(onscroll);\n//         // cancelAnimationFrame();\n//       };\n//     };\n//   }, []);\n\n//   return (\n//     <canvas ref={canvasRef} style={{}}>\n//       <img id=\"source\" src=\"./../assets/img/0001.png\"></img>\n//     </canvas>\n//   );\n// }\n\n// export default Profile;\nimport React, { Component, createRef } from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport { findAllInRenderedTree } from \"react-dom/test-utils\";\nimport { ReactDOM } from \"react\";\n\nconst checkImage = (path) =>\n  new Promise((resolve) => {\n    const img = new Image();\n    img.src = path;\n    img.onload = () => resolve(path);\n  });\n\nclass Profile extends Component {\n  constructor() {\n    super();\n    this.canvasRef = createRef();\n    this.state = {\n      canvas: document.createElement(\"canvas\", {}),\n    };\n    this.frameIndex = 0;\n  }\n  getImage(index) {\n    const imgUrl =\n      // \"https://www.apple.com/105/media/us/airpods-pro/2019/1299e2f5_9206_4470_b28e_08307a42f19b/anim/sequence/large/01-hero-lightpass/\" +\n      // index.toString().padStart(4, 0) +\n      // \".jpg\";\n      process.env.PUBLIC_URL +\n      \"/img/img\" +\n      index.toString().padStart(5, 0) +\n      \".jpeg\";\n    const imgObj = new Image();\n    const myPromise = checkImage(imgUrl);\n    myPromise\n      .then((response) => {\n        imgObj.src = imgUrl;\n        console.log(\"resolved\");\n      })\n      .catch((error) => console.error(error));\n    return imgObj;\n  }\n\n  updateImage = (imgObj, index, ctx) => {\n    if (index === 0 || index === null) {\n      index = 1;\n    }\n    imgObj = this.getImage(index);\n    imgObj.onload = () => {\n      ctx.drawImage(imgObj, 0, 0);\n    };\n  };\n  showImage(canvas) {\n    var imgO = new Image();\n    imgO = this.getImage(1);\n    imgO.onload = () => {\n      const ctx = canvas.getContext(\"2d\");\n      canvas.width = imgO.width;\n      canvas.height = imgO.height;\n      console.log(imgO.width, imgO.height);\n      ctx.drawImage(imgO, 0, 0);\n    };\n  }\n  showNone() {\n    const canvas = this.canvasRef.current;\n    canvas.width = 0;\n    canvas.height = 0;\n  }\n  updateCanvas(canvas) {\n    const frameCount = 179;\n    var imageObj1 = new Image();\n    imageObj1 = this.getImage(1);\n\n    const ctx = canvas.getContext(\"2d\");\n\n    const html = document.documentElement;\n    const scrollTop = html.scrollTop;\n    const maxScrollTop = html.scrollHeight - window.innerHeight;\n    const scrollFraction = scrollTop / maxScrollTop;\n\n    this.frameIndex = Math.min(\n      frameCount - 1,\n      Math.floor(scrollFraction * frameCount)\n    );\n\n    this.updateImage(imageObj1, this.frameIndex + 1, ctx);\n  }\n\n  getAllImg = async () => {\n    var x = 0;\n    while (x !== 179) {\n      x++;\n      var imgObj = new Image();\n\n      imgObj = this.getImage(x);\n      await imgObj.onload;\n    }\n  };\n  componentDidMount() {\n    document\n      .getElementById(\"canvas-wrapper\")\n      .insertAdjacentElement(\"beforebegin\", this.state.canvas);\n    console.log(this.state.canvas);\n    this.getAllImg();\n    this.showImage(this.state.canvas);\n    window.onscroll = () => {\n      var c = document.createElement(\"canvas\");\n      var x = document\n        .getElementById(\"canvas-wrapper\")\n        .insertAdjacentElement(\"afterbegin\", c);\n      this.setState({\n        canvas: c,\n      });\n      console.log(c);\n      requestAnimationFrame(() => {\n        this.updateCanvas(this.state.canvas);\n      });\n    };\n  }\n\n  componentWillUnmount() {}\n  render() {\n    return (\n      <section id=\"canvas-wrapper\">\n        <canvas ref={this.canvasRef} id=\"drawImage\"></canvas>\n      </section>\n    );\n  }\n}\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}